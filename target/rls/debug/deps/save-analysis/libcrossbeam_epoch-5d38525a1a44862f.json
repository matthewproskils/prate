{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0","program":"C:\\Users\\matth\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","crossbeam_epoch","C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=5d38525a1a44862f","-C","extra-filename=-5d38525a1a44862f","--out-dir","c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps\\libcfg_if-304084854ce48427.rmeta","--extern","crossbeam_utils=c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps\\libcrossbeam_utils-360f206b8e072e41.rmeta","--extern","lazy_static=c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps\\liblazy_static-cf0478a2c0b8c8f8.rmeta","--extern","memoffset=c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps\\libmemoffset-6083da28a5f1d3f2.rmeta","--extern","scopeguard=c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps\\libscopeguard-2c5923c3fd51b38d.rmeta","--cap-lints","allow","--cfg","has_min_const_fn","--error-format=json","--sysroot","C:\\Users\\matth\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps\\libcrossbeam_epoch-5d38525a1a44862f.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[2095386980285716758,0]},"crate_root":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src","external_crates":[{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10096348926132587111,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[6130085985959571423,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10834538756664496827,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16052532455530240381,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9943859611570948275,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2085945775536176072,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9544986399897469044,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17772512906340842432,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2307131819628043677,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8458190703300588207,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5770881746596919874,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[9756748775720564409,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[13144887679811945557,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[4503890005825602928,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":15,"id":{"name":"crossbeam_utils","disambiguator":[6747111443886126206,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":16,"id":{"name":"lazy_static","disambiguator":[3944360065909552950,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":17,"id":{"name":"memoffset","disambiguator":[3208325140715590750,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","num":18,"id":{"name":"scopeguard","disambiguator":[16498534004486282225,0]}}],"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":0,"byte_end":4102,"line_start":1,"line_end":106,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":3712,"byte_end":3718,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":3720,"byte_end":3738,"line_start":92,"line_end":92,"column_start":40,"column_end":58},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":3740,"byte_end":3761,"line_start":92,"line_end":92,"column_start":60,"column_end":81},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":3763,"byte_end":3768,"line_start":92,"line_end":92,"column_start":83,"column_end":88},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":3770,"byte_end":3777,"line_start":92,"line_end":92,"column_start":90,"column_end":97},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":3779,"byte_end":3785,"line_start":92,"line_end":92,"column_start":99,"column_end":105},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":3822,"byte_end":3831,"line_start":93,"line_end":93,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":3833,"byte_end":3844,"line_start":93,"line_end":93,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":3877,"byte_end":3888,"line_start":94,"line_end":94,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":3890,"byte_end":3895,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":4059,"byte_end":4076,"line_start":104,"line_end":104,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":4078,"byte_end":4087,"line_start":104,"line_end":104,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":4089,"byte_end":4092,"line_start":104,"line_end":104,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":0,"byte_end":4102,"line_start":1,"line_end":106,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":270},{"krate":0,"index":311},{"krate":0,"index":344},{"krate":0,"index":364},{"krate":0,"index":409},{"krate":0,"index":548},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`] the execution of an","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2244,"byte_end":2337,"line_start":42,"line_end":42,"column_start":1,"column_end":94}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2338,"byte_end":2433,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2434,"byte_end":2489,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2490,"byte_end":2493,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2494,"byte_end":2504,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2505,"byte_end":2508,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2509,"byte_end":2606,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2607,"byte_end":2680,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2681,"byte_end":2684,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: struct.Atomic.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2685,"byte_end":2719,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/ [`Collector`]: struct.Collector.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2720,"byte_end":2760,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ [`Shared`]: struct.Shared.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2761,"byte_end":2795,"line_start":53,"line_end":53,"column_start":1,"column_end":35}},{"value":"/ [`pin`]: fn.pin.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2796,"byte_end":2820,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/ [`defer`]: fn.defer.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2821,"byte_end":2849,"line_start":55,"line_end":55,"column_start":1,"column_end":29}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2851,"byte_end":2873,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\lib.rs","byte_start":2874,"byte_end":2913,"line_start":58,"line_end":58,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12378243,"byte_end":12378261,"line_start":27,"line_end":27,"column_start":12,"column_end":30},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareAndSetError { current, new }","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12378172,"byte_end":12378231,"line_start":26,"line_end":26,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12378375,"byte_end":12378382,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareAndSetError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12378294,"byte_end":12378366,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12378468,"byte_end":12378471,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareAndSetError::new","value":"P","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12378404,"byte_end":12378459,"line_start":31,"line_end":31,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379356,"byte_end":12379377,"line_start":55,"line_end":55,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12378786,"byte_end":12378838,"line_start":44,"line_end":44,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12378839,"byte_end":12378842,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12378843,"byte_end":12378934,"line_start":46,"line_end":46,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12378935,"byte_end":12379027,"line_start":47,"line_end":47,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379028,"byte_end":12379031,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379032,"byte_end":12379097,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379098,"byte_end":12379101,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379102,"byte_end":12379196,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379197,"byte_end":12379223,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379224,"byte_end":12379316,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379317,"byte_end":12379345,"line_start":54,"line_end":54,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379443,"byte_end":12379450,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379384,"byte_end":12379435,"line_start":56,"line_end":56,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379668,"byte_end":12379675,"line_start":63,"line_end":63,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379476,"byte_end":12379524,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379529,"byte_end":12379532,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379537,"byte_end":12379630,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379635,"byte_end":12379660,"line_start":62,"line_end":62,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381447,"byte_end":12381453,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381008,"byte_end":12381072,"line_start":118,"line_end":118,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381073,"byte_end":12381076,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381077,"byte_end":12381175,"line_start":120,"line_end":120,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.  More precisely, a tag should be less than `(1 <<","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381176,"byte_end":12381268,"line_start":121,"line_end":121,"column_start":1,"column_end":93}},{"value":"/ mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381269,"byte_end":12381313,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381314,"byte_end":12381317,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381318,"byte_end":12381398,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381399,"byte_end":12381402,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`Guard`]: struct.Guard.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381403,"byte_end":12381435,"line_start":126,"line_end":126,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382455,"byte_end":12382459,"line_start":171,"line_end":171,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"pub const fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382227,"byte_end":12382265,"line_start":161,"line_end":161,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382270,"byte_end":12382273,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382278,"byte_end":12382292,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382297,"byte_end":12382300,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382305,"byte_end":12382312,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382317,"byte_end":12382349,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382354,"byte_end":12382357,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382362,"byte_end":12382396,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382401,"byte_end":12382408,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"cfg(has_min_const_fn)","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382413,"byte_end":12382437,"line_start":170,"line_end":170,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382819,"byte_end":12382822,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382586,"byte_end":12382668,"line_start":178,"line_end":178,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382673,"byte_end":12382676,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382681,"byte_end":12382695,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382700,"byte_end":12382703,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382708,"byte_end":12382715,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382720,"byte_end":12382752,"line_start":183,"line_end":183,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382757,"byte_end":12382760,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382765,"byte_end":12382795,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382800,"byte_end":12382807,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383446,"byte_end":12383450,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382897,"byte_end":12382942,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382947,"byte_end":12382950,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12382955,"byte_end":12383045,"line_start":193,"line_end":193,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383050,"byte_end":12383064,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383069,"byte_end":12383072,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383077,"byte_end":12383155,"line_start":196,"line_end":196,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383160,"byte_end":12383163,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383168,"byte_end":12383182,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383187,"byte_end":12383190,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383195,"byte_end":12383202,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383207,"byte_end":12383256,"line_start":201,"line_end":201,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383261,"byte_end":12383305,"line_start":202,"line_end":202,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383310,"byte_end":12383313,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383318,"byte_end":12383348,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383353,"byte_end":12383383,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383388,"byte_end":12383422,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383427,"byte_end":12383434,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384457,"byte_end":12384469,"line_start":233,"line_end":233,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383580,"byte_end":12383659,"line_start":212,"line_end":212,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383664,"byte_end":12383667,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383672,"byte_end":12383745,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383750,"byte_end":12383826,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383831,"byte_end":12383902,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383907,"byte_end":12383981,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12383986,"byte_end":12384009,"line_start":218,"line_end":218,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384014,"byte_end":12384017,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384022,"byte_end":12384097,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384102,"byte_end":12384176,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384181,"byte_end":12384215,"line_start":222,"line_end":222,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384220,"byte_end":12384223,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384228,"byte_end":12384242,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384247,"byte_end":12384250,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384255,"byte_end":12384262,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384267,"byte_end":12384316,"line_start":227,"line_end":227,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384321,"byte_end":12384324,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384329,"byte_end":12384359,"line_start":229,"line_end":229,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384364,"byte_end":12384394,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384399,"byte_end":12384433,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384438,"byte_end":12384445,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385183,"byte_end":12385188,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<'g, P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384589,"byte_end":12384654,"line_start":237,"line_end":237,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384659,"byte_end":12384662,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384667,"byte_end":12384757,"line_start":239,"line_end":239,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384762,"byte_end":12384776,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384781,"byte_end":12384784,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384789,"byte_end":12384867,"line_start":242,"line_end":242,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384872,"byte_end":12384875,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384880,"byte_end":12384894,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384899,"byte_end":12384902,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384907,"byte_end":12384914,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384919,"byte_end":12384983,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12384988,"byte_end":12385032,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385037,"byte_end":12385040,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385045,"byte_end":12385075,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385080,"byte_end":12385116,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385121,"byte_end":12385159,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385164,"byte_end":12385171,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385940,"byte_end":12385944,"line_start":276,"line_end":276,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385299,"byte_end":12385387,"line_start":258,"line_end":258,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385392,"byte_end":12385405,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385410,"byte_end":12385413,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385418,"byte_end":12385508,"line_start":261,"line_end":261,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385513,"byte_end":12385527,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385532,"byte_end":12385535,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385540,"byte_end":12385618,"line_start":264,"line_end":264,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385623,"byte_end":12385626,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385631,"byte_end":12385645,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385650,"byte_end":12385653,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385658,"byte_end":12385665,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385670,"byte_end":12385734,"line_start":269,"line_end":269,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385739,"byte_end":12385783,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385788,"byte_end":12385791,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385796,"byte_end":12385826,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385831,"byte_end":12385861,"line_start":273,"line_end":273,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385866,"byte_end":12385916,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12385921,"byte_end":12385928,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12387291,"byte_end":12387306,"line_start":306,"line_end":306,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386115,"byte_end":12386211,"line_start":280,"line_end":280,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386216,"byte_end":12386310,"line_start":281,"line_end":281,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386315,"byte_end":12386386,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386391,"byte_end":12386394,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386399,"byte_end":12386494,"line_start":284,"line_end":284,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386499,"byte_end":12386590,"line_start":285,"line_end":285,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386595,"byte_end":12386608,"line_start":286,"line_end":286,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386613,"byte_end":12386616,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386621,"byte_end":12386706,"line_start":288,"line_end":288,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386711,"byte_end":12386742,"line_start":289,"line_end":289,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386747,"byte_end":12386750,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386755,"byte_end":12386818,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386823,"byte_end":12386826,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386831,"byte_end":12386845,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386850,"byte_end":12386853,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386858,"byte_end":12386865,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386870,"byte_end":12386934,"line_start":296,"line_end":296,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386939,"byte_end":12386983,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386988,"byte_end":12386991,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12386996,"byte_end":12387026,"line_start":299,"line_end":299,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12387031,"byte_end":12387034,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12387039,"byte_end":12387069,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12387074,"byte_end":12387115,"line_start":302,"line_end":302,"column_start":5,"column_end":46}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12387120,"byte_end":12387190,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12387195,"byte_end":12387267,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12387272,"byte_end":12387279,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389857,"byte_end":12389877,"line_start":376,"line_end":376,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12387971,"byte_end":12388067,"line_start":329,"line_end":329,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388072,"byte_end":12388166,"line_start":330,"line_end":330,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388171,"byte_end":12388242,"line_start":331,"line_end":331,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388247,"byte_end":12388250,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388255,"byte_end":12388349,"line_start":333,"line_end":333,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388354,"byte_end":12388449,"line_start":334,"line_end":334,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388454,"byte_end":12388544,"line_start":335,"line_end":335,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388549,"byte_end":12388633,"line_start":336,"line_end":336,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388638,"byte_end":12388641,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388646,"byte_end":12388731,"line_start":338,"line_end":338,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388736,"byte_end":12388767,"line_start":339,"line_end":339,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388772,"byte_end":12388775,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: struct.Atomic.html#method.compare_and_set","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388780,"byte_end":12388846,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388851,"byte_end":12388914,"line_start":342,"line_end":342,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388919,"byte_end":12388922,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388927,"byte_end":12388941,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388946,"byte_end":12388949,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388954,"byte_end":12388961,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12388966,"byte_end":12389030,"line_start":347,"line_end":347,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389035,"byte_end":12389079,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389084,"byte_end":12389087,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389092,"byte_end":12389122,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389127,"byte_end":12389157,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389162,"byte_end":12389165,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389170,"byte_end":12389205,"line_start":353,"line_end":353,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389210,"byte_end":12389250,"line_start":354,"line_end":354,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389255,"byte_end":12389265,"line_start":355,"line_end":355,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389270,"byte_end":12389333,"line_start":356,"line_end":356,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389338,"byte_end":12389360,"line_start":357,"line_end":357,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389365,"byte_end":12389389,"line_start":358,"line_end":358,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389394,"byte_end":12389416,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389421,"byte_end":12389434,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389439,"byte_end":12389464,"line_start":361,"line_end":361,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389469,"byte_end":12389503,"line_start":362,"line_end":362,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389508,"byte_end":12389538,"line_start":363,"line_end":363,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389543,"byte_end":12389556,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389561,"byte_end":12389570,"line_start":365,"line_end":365,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389575,"byte_end":12389580,"line_start":366,"line_end":366,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389585,"byte_end":12389588,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389593,"byte_end":12389634,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389639,"byte_end":12389649,"line_start":369,"line_end":369,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389654,"byte_end":12389729,"line_start":370,"line_end":370,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389734,"byte_end":12389761,"line_start":371,"line_end":371,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389766,"byte_end":12389809,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389814,"byte_end":12389823,"line_start":373,"line_end":373,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389828,"byte_end":12389833,"line_start":374,"line_end":374,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12389838,"byte_end":12389845,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391369,"byte_end":12391378,"line_start":420,"line_end":420,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12390547,"byte_end":12390586,"line_start":399,"line_end":399,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12390591,"byte_end":12390594,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12390599,"byte_end":12390693,"line_start":401,"line_end":401,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12390698,"byte_end":12390754,"line_start":402,"line_end":402,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12390759,"byte_end":12390762,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12390767,"byte_end":12390857,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12390862,"byte_end":12390876,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12390881,"byte_end":12390884,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12390889,"byte_end":12390967,"line_start":407,"line_end":407,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12390972,"byte_end":12390975,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12390980,"byte_end":12390994,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12390999,"byte_end":12391002,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391007,"byte_end":12391014,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391019,"byte_end":12391076,"line_start":412,"line_end":412,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391081,"byte_end":12391125,"line_start":413,"line_end":413,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391130,"byte_end":12391133,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391138,"byte_end":12391198,"line_start":415,"line_end":415,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391203,"byte_end":12391233,"line_start":416,"line_end":416,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391238,"byte_end":12391293,"line_start":417,"line_end":417,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391298,"byte_end":12391345,"line_start":418,"line_end":418,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391350,"byte_end":12391357,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392368,"byte_end":12392376,"line_start":445,"line_end":445,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391549,"byte_end":12391587,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391592,"byte_end":12391595,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391600,"byte_end":12391693,"line_start":426,"line_end":426,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391698,"byte_end":12391754,"line_start":427,"line_end":427,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391759,"byte_end":12391762,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391767,"byte_end":12391857,"line_start":429,"line_end":429,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391862,"byte_end":12391876,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391881,"byte_end":12391884,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391889,"byte_end":12391967,"line_start":432,"line_end":432,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391972,"byte_end":12391975,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391980,"byte_end":12391994,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12391999,"byte_end":12392002,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392007,"byte_end":12392014,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392019,"byte_end":12392076,"line_start":437,"line_end":437,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392081,"byte_end":12392125,"line_start":438,"line_end":438,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392130,"byte_end":12392133,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392138,"byte_end":12392198,"line_start":440,"line_end":440,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392203,"byte_end":12392233,"line_start":441,"line_end":441,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392238,"byte_end":12392292,"line_start":442,"line_end":442,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392297,"byte_end":12392344,"line_start":443,"line_end":443,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392349,"byte_end":12392356,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393367,"byte_end":12393376,"line_start":470,"line_end":470,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392545,"byte_end":12392584,"line_start":449,"line_end":449,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392589,"byte_end":12392592,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392597,"byte_end":12392691,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392696,"byte_end":12392752,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392757,"byte_end":12392760,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392765,"byte_end":12392855,"line_start":454,"line_end":454,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392860,"byte_end":12392874,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392879,"byte_end":12392882,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392887,"byte_end":12392965,"line_start":457,"line_end":457,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392970,"byte_end":12392973,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392978,"byte_end":12392992,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12392997,"byte_end":12393000,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393005,"byte_end":12393012,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393017,"byte_end":12393074,"line_start":462,"line_end":462,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393079,"byte_end":12393123,"line_start":463,"line_end":463,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393128,"byte_end":12393131,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393136,"byte_end":12393196,"line_start":465,"line_end":465,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393201,"byte_end":12393231,"line_start":466,"line_end":466,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393236,"byte_end":12393291,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393296,"byte_end":12393343,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393348,"byte_end":12393355,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394673,"byte_end":12394683,"line_start":508,"line_end":508,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393546,"byte_end":12393581,"line_start":474,"line_end":474,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393586,"byte_end":12393589,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393594,"byte_end":12393683,"line_start":476,"line_end":476,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393688,"byte_end":12393774,"line_start":477,"line_end":477,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393779,"byte_end":12393814,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393819,"byte_end":12393822,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393827,"byte_end":12393839,"line_start":480,"line_end":480,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393844,"byte_end":12393847,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393852,"byte_end":12393911,"line_start":482,"line_end":482,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393916,"byte_end":12393919,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393924,"byte_end":12393936,"line_start":484,"line_end":484,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393941,"byte_end":12393944,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12393949,"byte_end":12394036,"line_start":486,"line_end":486,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394041,"byte_end":12394074,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394079,"byte_end":12394082,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394087,"byte_end":12394101,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394106,"byte_end":12394109,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394114,"byte_end":12394125,"line_start":491,"line_end":491,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394130,"byte_end":12394149,"line_start":492,"line_end":492,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394154,"byte_end":12394188,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394193,"byte_end":12394219,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394224,"byte_end":12394251,"line_start":495,"line_end":495,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394256,"byte_end":12394261,"line_start":496,"line_end":496,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394266,"byte_end":12394269,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394274,"byte_end":12394307,"line_start":498,"line_end":498,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394312,"byte_end":12394340,"line_start":499,"line_end":499,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394345,"byte_end":12394439,"line_start":500,"line_end":500,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394444,"byte_end":12394491,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394496,"byte_end":12394516,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394521,"byte_end":12394600,"line_start":503,"line_end":503,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394605,"byte_end":12394618,"line_start":504,"line_end":504,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394623,"byte_end":12394632,"line_start":505,"line_end":505,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394637,"byte_end":12394642,"line_start":506,"line_end":506,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394647,"byte_end":12394654,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397153,"byte_end":12397160,"line_start":611,"line_end":611,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T>","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397090,"byte_end":12397142,"line_start":610,"line_end":610,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397232,"byte_end":12397242,"line_start":613,"line_end":613,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397170,"byte_end":12397224,"line_start":612,"line_end":612,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397343,"byte_end":12397353,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.\n","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397264,"byte_end":12397328,"line_start":615,"line_end":615,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397619,"byte_end":12397624,"line_start":625,"line_end":625,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397379,"byte_end":12397414,"line_start":619,"line_end":619,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397415,"byte_end":12397418,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397419,"byte_end":12397461,"line_start":621,"line_end":621,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397462,"byte_end":12397465,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397466,"byte_end":12397564,"line_start":623,"line_end":623,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397565,"byte_end":12397607,"line_start":624,"line_end":624,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398470,"byte_end":12398473,"line_start":663,"line_end":663,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398240,"byte_end":12398321,"line_start":654,"line_end":654,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398326,"byte_end":12398329,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398334,"byte_end":12398348,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398353,"byte_end":12398356,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398361,"byte_end":12398368,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398373,"byte_end":12398404,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398409,"byte_end":12398412,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398417,"byte_end":12398446,"line_start":661,"line_end":661,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398451,"byte_end":12398458,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399107,"byte_end":12399115,"line_start":684,"line_end":684,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398545,"byte_end":12398595,"line_start":667,"line_end":667,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398600,"byte_end":12398603,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398608,"byte_end":12398700,"line_start":669,"line_end":669,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398705,"byte_end":12398798,"line_start":670,"line_end":670,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398803,"byte_end":12398828,"line_start":671,"line_end":671,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398833,"byte_end":12398836,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398841,"byte_end":12398853,"line_start":673,"line_end":673,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398858,"byte_end":12398861,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398866,"byte_end":12398910,"line_start":675,"line_end":675,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398915,"byte_end":12398918,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398923,"byte_end":12398937,"line_start":677,"line_end":677,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398942,"byte_end":12398945,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398950,"byte_end":12398957,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398962,"byte_end":12398993,"line_start":680,"line_end":680,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398998,"byte_end":12399001,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399006,"byte_end":12399076,"line_start":682,"line_end":682,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399081,"byte_end":12399088,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399557,"byte_end":12399568,"line_start":702,"line_end":702,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399222,"byte_end":12399271,"line_start":689,"line_end":689,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399276,"byte_end":12399279,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399284,"byte_end":12399298,"line_start":691,"line_end":691,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399303,"byte_end":12399306,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399311,"byte_end":12399318,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399323,"byte_end":12399371,"line_start":694,"line_end":694,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399376,"byte_end":12399379,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399384,"byte_end":12399413,"line_start":696,"line_end":696,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399418,"byte_end":12399448,"line_start":697,"line_end":697,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399453,"byte_end":12399486,"line_start":698,"line_end":698,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399491,"byte_end":12399498,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399503,"byte_end":12399506,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ [`Shared`]: struct.Shared.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399511,"byte_end":12399545,"line_start":701,"line_end":701,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399960,"byte_end":12399968,"line_start":717,"line_end":717,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399680,"byte_end":12399724,"line_start":706,"line_end":706,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399729,"byte_end":12399732,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399737,"byte_end":12399751,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399756,"byte_end":12399759,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399764,"byte_end":12399771,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399776,"byte_end":12399824,"line_start":711,"line_end":711,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399829,"byte_end":12399832,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399837,"byte_end":12399866,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399871,"byte_end":12399906,"line_start":714,"line_end":714,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399911,"byte_end":12399936,"line_start":715,"line_end":715,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12399941,"byte_end":12399948,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400326,"byte_end":12400329,"line_start":732,"line_end":732,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400118,"byte_end":12400164,"line_start":723,"line_end":723,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400169,"byte_end":12400172,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400177,"byte_end":12400191,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400196,"byte_end":12400199,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400204,"byte_end":12400211,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400216,"byte_end":12400247,"line_start":728,"line_end":728,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400252,"byte_end":12400255,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400260,"byte_end":12400302,"line_start":730,"line_end":730,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400307,"byte_end":12400314,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400803,"byte_end":12400811,"line_start":750,"line_end":750,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400426,"byte_end":12400516,"line_start":737,"line_end":737,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400521,"byte_end":12400559,"line_start":738,"line_end":738,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400564,"byte_end":12400567,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400572,"byte_end":12400586,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400591,"byte_end":12400594,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400599,"byte_end":12400606,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400611,"byte_end":12400642,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400647,"byte_end":12400650,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400655,"byte_end":12400684,"line_start":745,"line_end":745,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400689,"byte_end":12400716,"line_start":746,"line_end":746,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400721,"byte_end":12400747,"line_start":747,"line_end":747,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400752,"byte_end":12400779,"line_start":748,"line_end":748,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400784,"byte_end":12400791,"line_start":749,"line_end":749,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403091,"byte_end":12403097,"line_start":853,"line_end":853,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12402812,"byte_end":12402865,"line_start":847,"line_end":847,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12402866,"byte_end":12402869,"line_start":848,"line_end":848,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12402870,"byte_end":12402933,"line_start":849,"line_end":849,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12402934,"byte_end":12402937,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12402938,"byte_end":12403036,"line_start":851,"line_end":851,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403037,"byte_end":12403079,"line_start":852,"line_end":852,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403904,"byte_end":12403908,"line_start":895,"line_end":895,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403688,"byte_end":12403719,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403724,"byte_end":12403727,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403732,"byte_end":12403746,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403751,"byte_end":12403754,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403759,"byte_end":12403766,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403771,"byte_end":12403803,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403808,"byte_end":12403811,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403816,"byte_end":12403850,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403855,"byte_end":12403880,"line_start":893,"line_end":893,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403885,"byte_end":12403892,"line_start":894,"line_end":894,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404465,"byte_end":12404472,"line_start":916,"line_end":916,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404023,"byte_end":12404065,"line_start":902,"line_end":902,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404070,"byte_end":12404073,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404078,"byte_end":12404092,"line_start":904,"line_end":904,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404097,"byte_end":12404100,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404105,"byte_end":12404112,"line_start":906,"line_end":906,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404117,"byte_end":12404173,"line_start":907,"line_end":907,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404178,"byte_end":12404222,"line_start":908,"line_end":908,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404227,"byte_end":12404230,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404235,"byte_end":12404262,"line_start":910,"line_end":910,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404267,"byte_end":12404297,"line_start":911,"line_end":911,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404302,"byte_end":12404347,"line_start":912,"line_end":912,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404352,"byte_end":12404390,"line_start":913,"line_end":913,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404395,"byte_end":12404441,"line_start":914,"line_end":914,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404446,"byte_end":12404453,"line_start":915,"line_end":915,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405003,"byte_end":12405009,"line_start":936,"line_end":936,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404533,"byte_end":12404593,"line_start":920,"line_end":920,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404598,"byte_end":12404601,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404606,"byte_end":12404620,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404625,"byte_end":12404628,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404633,"byte_end":12404640,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404645,"byte_end":12404701,"line_start":925,"line_end":925,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404706,"byte_end":12404750,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404755,"byte_end":12404758,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404763,"byte_end":12404792,"line_start":928,"line_end":928,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404797,"byte_end":12404827,"line_start":929,"line_end":929,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404832,"byte_end":12404860,"line_start":930,"line_end":930,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404865,"byte_end":12404868,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404873,"byte_end":12404903,"line_start":932,"line_end":932,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404908,"byte_end":12404942,"line_start":933,"line_end":933,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404947,"byte_end":12404979,"line_start":934,"line_end":934,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12404984,"byte_end":12404991,"line_start":935,"line_end":935,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406288,"byte_end":12406293,"line_start":972,"line_end":972,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405109,"byte_end":12405138,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405143,"byte_end":12405146,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405151,"byte_end":12405229,"line_start":943,"line_end":943,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405234,"byte_end":12405237,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405242,"byte_end":12405254,"line_start":945,"line_end":945,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405259,"byte_end":12405262,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405267,"byte_end":12405352,"line_start":947,"line_end":947,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405357,"byte_end":12405360,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405365,"byte_end":12405455,"line_start":949,"line_end":949,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405460,"byte_end":12405509,"line_start":950,"line_end":950,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405514,"byte_end":12405517,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405522,"byte_end":12405594,"line_start":952,"line_end":952,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405599,"byte_end":12405674,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405679,"byte_end":12405682,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405687,"byte_end":12405780,"line_start":955,"line_end":955,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405785,"byte_end":12405878,"line_start":956,"line_end":956,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405883,"byte_end":12405921,"line_start":957,"line_end":957,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405926,"byte_end":12405929,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405934,"byte_end":12405948,"line_start":959,"line_end":959,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405953,"byte_end":12405956,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405961,"byte_end":12405968,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12405973,"byte_end":12406022,"line_start":962,"line_end":962,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406027,"byte_end":12406071,"line_start":963,"line_end":963,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406076,"byte_end":12406079,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406084,"byte_end":12406114,"line_start":965,"line_end":965,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406119,"byte_end":12406149,"line_start":966,"line_end":966,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406154,"byte_end":12406188,"line_start":967,"line_end":967,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406193,"byte_end":12406205,"line_start":968,"line_end":968,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406210,"byte_end":12406247,"line_start":969,"line_end":969,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406252,"byte_end":12406257,"line_start":970,"line_end":970,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406262,"byte_end":12406269,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407507,"byte_end":12407516,"line_start":1012,"line_end":1012,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406347,"byte_end":12406376,"line_start":976,"line_end":976,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406381,"byte_end":12406384,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406389,"byte_end":12406475,"line_start":978,"line_end":978,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406480,"byte_end":12406483,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406488,"byte_end":12406500,"line_start":980,"line_end":980,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406505,"byte_end":12406508,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406513,"byte_end":12406608,"line_start":982,"line_end":982,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406613,"byte_end":12406650,"line_start":983,"line_end":983,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406655,"byte_end":12406658,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406663,"byte_end":12406752,"line_start":985,"line_end":985,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406757,"byte_end":12406760,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406765,"byte_end":12406839,"line_start":987,"line_end":987,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406844,"byte_end":12406847,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406852,"byte_end":12406866,"line_start":989,"line_end":989,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406871,"byte_end":12406874,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406879,"byte_end":12406886,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406891,"byte_end":12406940,"line_start":992,"line_end":992,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406945,"byte_end":12406989,"line_start":993,"line_end":993,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12406994,"byte_end":12406997,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407002,"byte_end":12407044,"line_start":995,"line_end":995,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407049,"byte_end":12407079,"line_start":996,"line_end":996,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407084,"byte_end":12407087,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407092,"byte_end":12407130,"line_start":998,"line_end":998,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407135,"byte_end":12407147,"line_start":999,"line_end":999,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407152,"byte_end":12407182,"line_start":1000,"line_end":1000,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407187,"byte_end":12407217,"line_start":1001,"line_end":1001,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407222,"byte_end":12407263,"line_start":1002,"line_end":1002,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407268,"byte_end":12407286,"line_start":1003,"line_end":1003,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407291,"byte_end":12407335,"line_start":1004,"line_end":1004,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407340,"byte_end":12407345,"line_start":1005,"line_end":1005,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407350,"byte_end":12407353,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407358,"byte_end":12407392,"line_start":1007,"line_end":1007,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407397,"byte_end":12407409,"line_start":1008,"line_end":1008,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407414,"byte_end":12407466,"line_start":1009,"line_end":1009,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407471,"byte_end":12407476,"line_start":1010,"line_end":1010,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407481,"byte_end":12407488,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408808,"byte_end":12408814,"line_start":1047,"line_end":1047,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407594,"byte_end":12407634,"line_start":1016,"line_end":1016,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407639,"byte_end":12407642,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407647,"byte_end":12407742,"line_start":1018,"line_end":1018,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407747,"byte_end":12407750,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407755,"byte_end":12407767,"line_start":1020,"line_end":1020,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407772,"byte_end":12407775,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407780,"byte_end":12407865,"line_start":1022,"line_end":1022,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407870,"byte_end":12407873,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407878,"byte_end":12407968,"line_start":1024,"line_end":1024,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12407973,"byte_end":12408022,"line_start":1025,"line_end":1025,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408027,"byte_end":12408030,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408035,"byte_end":12408107,"line_start":1027,"line_end":1027,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408112,"byte_end":12408187,"line_start":1028,"line_end":1028,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408192,"byte_end":12408195,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408200,"byte_end":12408293,"line_start":1030,"line_end":1030,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408298,"byte_end":12408391,"line_start":1031,"line_end":1031,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408396,"byte_end":12408434,"line_start":1032,"line_end":1032,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408439,"byte_end":12408442,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408447,"byte_end":12408461,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408466,"byte_end":12408469,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408474,"byte_end":12408481,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408486,"byte_end":12408535,"line_start":1037,"line_end":1037,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408540,"byte_end":12408584,"line_start":1038,"line_end":1038,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408589,"byte_end":12408592,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408597,"byte_end":12408627,"line_start":1040,"line_end":1040,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408632,"byte_end":12408662,"line_start":1041,"line_end":1041,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408667,"byte_end":12408701,"line_start":1042,"line_end":1042,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408706,"byte_end":12408718,"line_start":1043,"line_end":1043,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408723,"byte_end":12408767,"line_start":1044,"line_end":1044,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408772,"byte_end":12408777,"line_start":1045,"line_end":1045,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408782,"byte_end":12408789,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409553,"byte_end":12409563,"line_start":1075,"line_end":1075,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408883,"byte_end":12408918,"line_start":1051,"line_end":1051,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408923,"byte_end":12408926,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408931,"byte_end":12408943,"line_start":1053,"line_end":1053,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408948,"byte_end":12408951,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12408956,"byte_end":12409015,"line_start":1055,"line_end":1055,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409020,"byte_end":12409023,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409028,"byte_end":12409040,"line_start":1057,"line_end":1057,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409045,"byte_end":12409048,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409053,"byte_end":12409140,"line_start":1059,"line_end":1059,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409145,"byte_end":12409178,"line_start":1060,"line_end":1060,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409183,"byte_end":12409186,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409191,"byte_end":12409205,"line_start":1062,"line_end":1062,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409210,"byte_end":12409213,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409218,"byte_end":12409225,"line_start":1064,"line_end":1064,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409230,"byte_end":12409279,"line_start":1065,"line_end":1065,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409284,"byte_end":12409328,"line_start":1066,"line_end":1066,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409333,"byte_end":12409336,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409341,"byte_end":12409371,"line_start":1068,"line_end":1068,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409376,"byte_end":12409388,"line_start":1069,"line_end":1069,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409393,"byte_end":12409435,"line_start":1070,"line_end":1070,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409440,"byte_end":12409478,"line_start":1071,"line_end":1071,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409483,"byte_end":12409512,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409517,"byte_end":12409522,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409527,"byte_end":12409534,"line_start":1074,"line_end":1074,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410170,"byte_end":12410173,"line_start":1096,"line_end":1096,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409762,"byte_end":12409808,"line_start":1083,"line_end":1083,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409813,"byte_end":12409816,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409821,"byte_end":12409835,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409840,"byte_end":12409843,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409848,"byte_end":12409855,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409860,"byte_end":12409916,"line_start":1088,"line_end":1088,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409921,"byte_end":12409965,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409970,"byte_end":12409973,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12409978,"byte_end":12410040,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410045,"byte_end":12410075,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410080,"byte_end":12410114,"line_start":1093,"line_end":1093,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410119,"byte_end":12410146,"line_start":1094,"line_end":1094,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410151,"byte_end":12410158,"line_start":1095,"line_end":1095,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410848,"byte_end":12410856,"line_start":1119,"line_end":1119,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410270,"byte_end":12410360,"line_start":1101,"line_end":1101,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410365,"byte_end":12410403,"line_start":1102,"line_end":1102,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410408,"byte_end":12410411,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410416,"byte_end":12410430,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410435,"byte_end":12410438,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410443,"byte_end":12410450,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410455,"byte_end":12410504,"line_start":1107,"line_end":1107,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410509,"byte_end":12410553,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410558,"byte_end":12410561,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410566,"byte_end":12410596,"line_start":1110,"line_end":1110,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410601,"byte_end":12410631,"line_start":1111,"line_end":1111,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410636,"byte_end":12410671,"line_start":1112,"line_end":1112,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410676,"byte_end":12410704,"line_start":1113,"line_end":1113,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410709,"byte_end":12410712,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410717,"byte_end":12410745,"line_start":1115,"line_end":1115,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410750,"byte_end":12410778,"line_start":1116,"line_end":1116,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410783,"byte_end":12410824,"line_start":1117,"line_end":1117,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12410829,"byte_end":12410836,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413184,"byte_end":12413193,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":288}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413135,"byte_end":12413172,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413365,"byte_end":12413368,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413325,"byte_end":12413353,"line_start":30,"line_end":30,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413524,"byte_end":12413532,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413467,"byte_end":12413512,"line_start":37,"line_end":37,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414196,"byte_end":12414207,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":302}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414148,"byte_end":12414184,"line_start":66,"line_end":66,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414318,"byte_end":12414321,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414272,"byte_end":12414292,"line_start":72,"line_end":72,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414297,"byte_end":12414306,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414459,"byte_end":12414468,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414390,"byte_end":12414433,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414438,"byte_end":12414447,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414624,"byte_end":12414633,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414542,"byte_end":12414598,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414603,"byte_end":12414612,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433563,"byte_end":12433568,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":384}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12431839,"byte_end":12431888,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12431889,"byte_end":12431892,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12431893,"byte_end":12431906,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12431907,"byte_end":12431910,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12431911,"byte_end":12431990,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12431991,"byte_end":12431994,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12431995,"byte_end":12432002,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432003,"byte_end":12432036,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432037,"byte_end":12432040,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432041,"byte_end":12432139,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432140,"byte_end":12432232,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432233,"byte_end":12432263,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432264,"byte_end":12432271,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432272,"byte_end":12432275,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432276,"byte_end":12432352,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432353,"byte_end":12432356,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432357,"byte_end":12432384,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432385,"byte_end":12432388,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432389,"byte_end":12432476,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432477,"byte_end":12432493,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432494,"byte_end":12432497,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432498,"byte_end":12432505,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432506,"byte_end":12432562,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432563,"byte_end":12432607,"line_start":32,"line_end":32,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432608,"byte_end":12432611,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432612,"byte_end":12432650,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432651,"byte_end":12432680,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432681,"byte_end":12432684,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432685,"byte_end":12432715,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432716,"byte_end":12432746,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432747,"byte_end":12432750,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432751,"byte_end":12432825,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432826,"byte_end":12432860,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432861,"byte_end":12432864,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432865,"byte_end":12432916,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432917,"byte_end":12432963,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12432964,"byte_end":12433007,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433008,"byte_end":12433013,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433014,"byte_end":12433021,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433022,"byte_end":12433025,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433026,"byte_end":12433047,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433048,"byte_end":12433051,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433052,"byte_end":12433147,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433148,"byte_end":12433246,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433247,"byte_end":12433266,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433267,"byte_end":12433270,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433271,"byte_end":12433278,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433279,"byte_end":12433312,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433313,"byte_end":12433316,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433317,"byte_end":12433347,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433348,"byte_end":12433378,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433379,"byte_end":12433411,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433412,"byte_end":12433429,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433430,"byte_end":12433462,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433463,"byte_end":12433480,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433481,"byte_end":12433514,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433515,"byte_end":12433522,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433523,"byte_end":12433526,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: fn.pin.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433527,"byte_end":12433551,"line_start":67,"line_end":67,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434596,"byte_end":12434601,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433627,"byte_end":12433716,"line_start":73,"line_end":73,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433721,"byte_end":12433746,"line_start":74,"line_end":74,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433751,"byte_end":12433754,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433759,"byte_end":12433852,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433857,"byte_end":12433945,"line_start":77,"line_end":77,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433950,"byte_end":12434040,"line_start":78,"line_end":78,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434045,"byte_end":12434085,"line_start":79,"line_end":79,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434090,"byte_end":12434093,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434098,"byte_end":12434188,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434193,"byte_end":12434284,"line_start":82,"line_end":82,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434289,"byte_end":12434376,"line_start":83,"line_end":83,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434381,"byte_end":12434401,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434406,"byte_end":12434409,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434414,"byte_end":12434501,"line_start":86,"line_end":86,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434506,"byte_end":12434531,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434536,"byte_end":12434539,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434544,"byte_end":12434584,"line_start":89,"line_end":89,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438954,"byte_end":12438969,"line_start":190,"line_end":190,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434765,"byte_end":12434854,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434859,"byte_end":12434884,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434889,"byte_end":12434892,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434897,"byte_end":12434990,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12434995,"byte_end":12435083,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435088,"byte_end":12435178,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435183,"byte_end":12435223,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435228,"byte_end":12435231,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435236,"byte_end":12435326,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435331,"byte_end":12435422,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435427,"byte_end":12435514,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435519,"byte_end":12435539,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435544,"byte_end":12435547,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435552,"byte_end":12435639,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435644,"byte_end":12435669,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435674,"byte_end":12435677,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435682,"byte_end":12435694,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435699,"byte_end":12435702,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435707,"byte_end":12435799,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435804,"byte_end":12435891,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435896,"byte_end":12435908,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435913,"byte_end":12435916,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435921,"byte_end":12435928,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435933,"byte_end":12435966,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435971,"byte_end":12435974,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12435979,"byte_end":12436009,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436014,"byte_end":12436041,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436046,"byte_end":12436058,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436063,"byte_end":12436138,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436143,"byte_end":12436182,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436187,"byte_end":12436223,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436228,"byte_end":12436239,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436244,"byte_end":12436249,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436254,"byte_end":12436261,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436266,"byte_end":12436269,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436274,"byte_end":12436368,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436373,"byte_end":12436404,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436409,"byte_end":12436412,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436417,"byte_end":12436512,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436517,"byte_end":12436609,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436614,"byte_end":12436703,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436708,"byte_end":12436711,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436716,"byte_end":12436729,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436734,"byte_end":12436787,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436792,"byte_end":12436874,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436879,"byte_end":12436886,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436891,"byte_end":12436894,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436899,"byte_end":12436992,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12436997,"byte_end":12437092,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437097,"byte_end":12437157,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437162,"byte_end":12437165,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437170,"byte_end":12437184,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437189,"byte_end":12437192,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437197,"byte_end":12437283,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437288,"byte_end":12437382,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437387,"byte_end":12437483,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437488,"byte_end":12437580,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437585,"byte_end":12437641,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437646,"byte_end":12437649,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437654,"byte_end":12437661,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437666,"byte_end":12437722,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437727,"byte_end":12437771,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437776,"byte_end":12437779,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437784,"byte_end":12437815,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437820,"byte_end":12437823,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437828,"byte_end":12437905,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437910,"byte_end":12437941,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437946,"byte_end":12437949,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437954,"byte_end":12437984,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12437989,"byte_end":12438019,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438024,"byte_end":12438027,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438032,"byte_end":12438109,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438114,"byte_end":12438186,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438191,"byte_end":12438194,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438199,"byte_end":12438220,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438225,"byte_end":12438285,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438290,"byte_end":12438372,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438377,"byte_end":12438393,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438398,"byte_end":12438477,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438482,"byte_end":12438525,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438530,"byte_end":12438598,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438603,"byte_end":12438695,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438700,"byte_end":12438784,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438789,"byte_end":12438826,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438831,"byte_end":12438846,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438851,"byte_end":12438860,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438865,"byte_end":12438870,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438875,"byte_end":12438882,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438887,"byte_end":12438890,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12438895,"byte_end":12438935,"line_start":189,"line_end":189,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442609,"byte_end":12442622,"line_start":271,"line_end":271,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12439208,"byte_end":12439301,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12439306,"byte_end":12439358,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12439363,"byte_end":12439366,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12439371,"byte_end":12439464,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12439469,"byte_end":12439559,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12439564,"byte_end":12439653,"line_start":206,"line_end":206,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12439658,"byte_end":12439712,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12439717,"byte_end":12439720,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12439725,"byte_end":12439818,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12439823,"byte_end":12439916,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12439921,"byte_end":12440014,"line_start":211,"line_end":211,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440019,"byte_end":12440050,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440055,"byte_end":12440058,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440063,"byte_end":12440152,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440157,"byte_end":12440182,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440187,"byte_end":12440190,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440195,"byte_end":12440207,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440212,"byte_end":12440215,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440220,"byte_end":12440313,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440318,"byte_end":12440351,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440356,"byte_end":12440359,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440364,"byte_end":12440459,"line_start":222,"line_end":222,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440464,"byte_end":12440502,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440507,"byte_end":12440510,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440515,"byte_end":12440610,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440615,"byte_end":12440707,"line_start":226,"line_end":226,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440712,"byte_end":12440801,"line_start":227,"line_end":227,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440806,"byte_end":12440809,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440814,"byte_end":12440827,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440832,"byte_end":12440885,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440890,"byte_end":12440949,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440954,"byte_end":12440961,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440966,"byte_end":12440969,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12440974,"byte_end":12441068,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441073,"byte_end":12441160,"line_start":235,"line_end":235,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441165,"byte_end":12441225,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441230,"byte_end":12441233,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441238,"byte_end":12441252,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441257,"byte_end":12441260,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441265,"byte_end":12441351,"line_start":240,"line_end":240,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441356,"byte_end":12441450,"line_start":241,"line_end":241,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441455,"byte_end":12441551,"line_start":242,"line_end":242,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441556,"byte_end":12441648,"line_start":243,"line_end":243,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441653,"byte_end":12441709,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441714,"byte_end":12441717,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441722,"byte_end":12441729,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441734,"byte_end":12441790,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441795,"byte_end":12441839,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441844,"byte_end":12441847,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441852,"byte_end":12441883,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441888,"byte_end":12441891,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441896,"byte_end":12441973,"line_start":252,"line_end":252,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12441978,"byte_end":12442009,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442014,"byte_end":12442017,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442022,"byte_end":12442052,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442057,"byte_end":12442087,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442092,"byte_end":12442095,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442100,"byte_end":12442177,"line_start":258,"line_end":258,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442182,"byte_end":12442254,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442259,"byte_end":12442262,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442267,"byte_end":12442288,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442293,"byte_end":12442353,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442358,"byte_end":12442440,"line_start":263,"line_end":263,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442445,"byte_end":12442461,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442466,"byte_end":12442501,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442506,"byte_end":12442515,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442520,"byte_end":12442525,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442530,"byte_end":12442537,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442542,"byte_end":12442545,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442550,"byte_end":12442590,"line_start":270,"line_end":270,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443595,"byte_end":12443600,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442718,"byte_end":12442813,"line_start":275,"line_end":275,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442818,"byte_end":12442835,"line_start":276,"line_end":276,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442840,"byte_end":12442843,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442848,"byte_end":12442942,"line_start":278,"line_end":278,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12442947,"byte_end":12443039,"line_start":279,"line_end":279,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443044,"byte_end":12443112,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443117,"byte_end":12443120,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443125,"byte_end":12443217,"line_start":282,"line_end":282,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443222,"byte_end":12443225,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443230,"byte_end":12443244,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443249,"byte_end":12443252,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443257,"byte_end":12443264,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443269,"byte_end":12443302,"line_start":287,"line_end":287,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443307,"byte_end":12443310,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443315,"byte_end":12443345,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443350,"byte_end":12443362,"line_start":290,"line_end":290,"column_start":5,"column_end":17}},{"value":"/     guard.defer(move || {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443367,"byte_end":12443396,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/         println!(\"This better be printed as soon as possible!\");","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443401,"byte_end":12443469,"line_start":292,"line_end":292,"column_start":5,"column_end":73}},{"value":"/     });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443474,"byte_end":12443485,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443490,"byte_end":12443495,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ guard.flush();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443500,"byte_end":12443518,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443523,"byte_end":12443530,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443535,"byte_end":12443538,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443543,"byte_end":12443583,"line_start":298,"line_end":298,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444873,"byte_end":12444878,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443724,"byte_end":12443775,"line_start":305,"line_end":305,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443780,"byte_end":12443783,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443788,"byte_end":12443878,"line_start":307,"line_end":307,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443883,"byte_end":12443977,"line_start":308,"line_end":308,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12443982,"byte_end":12444076,"line_start":309,"line_end":309,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444081,"byte_end":12444133,"line_start":310,"line_end":310,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444138,"byte_end":12444141,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444146,"byte_end":12444239,"line_start":312,"line_end":312,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444244,"byte_end":12444247,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444252,"byte_end":12444266,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444271,"byte_end":12444274,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444279,"byte_end":12444286,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444291,"byte_end":12444340,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444345,"byte_end":12444389,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444394,"byte_end":12444414,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444419,"byte_end":12444447,"line_start":320,"line_end":320,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444452,"byte_end":12444455,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444460,"byte_end":12444489,"line_start":322,"line_end":322,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444494,"byte_end":12444527,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444532,"byte_end":12444537,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444542,"byte_end":12444581,"line_start":325,"line_end":325,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444586,"byte_end":12444640,"line_start":326,"line_end":326,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444645,"byte_end":12444650,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444655,"byte_end":12444673,"line_start":328,"line_end":328,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444678,"byte_end":12444683,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444688,"byte_end":12444727,"line_start":330,"line_end":330,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444732,"byte_end":12444786,"line_start":331,"line_end":331,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444791,"byte_end":12444796,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444801,"byte_end":12444808,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444813,"byte_end":12444816,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12444821,"byte_end":12444861,"line_start":335,"line_end":335,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12446258,"byte_end":12446269,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445002,"byte_end":12445093,"line_start":342,"line_end":342,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445098,"byte_end":12445101,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445106,"byte_end":12445197,"line_start":344,"line_end":344,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445202,"byte_end":12445298,"line_start":345,"line_end":345,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445303,"byte_end":12445397,"line_start":346,"line_end":346,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445402,"byte_end":12445421,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445426,"byte_end":12445429,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445434,"byte_end":12445528,"line_start":349,"line_end":349,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445533,"byte_end":12445575,"line_start":350,"line_end":350,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445580,"byte_end":12445583,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445588,"byte_end":12445602,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445607,"byte_end":12445610,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445615,"byte_end":12445622,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445627,"byte_end":12445676,"line_start":355,"line_end":355,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445681,"byte_end":12445725,"line_start":356,"line_end":356,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445730,"byte_end":12445750,"line_start":357,"line_end":357,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445755,"byte_end":12445783,"line_start":358,"line_end":358,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445788,"byte_end":12445791,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445796,"byte_end":12445825,"line_start":360,"line_end":360,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445830,"byte_end":12445863,"line_start":361,"line_end":361,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445868,"byte_end":12445873,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445878,"byte_end":12445917,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445922,"byte_end":12445976,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445981,"byte_end":12445986,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12445991,"byte_end":12446058,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12446063,"byte_end":12446068,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12446073,"byte_end":12446112,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12446117,"byte_end":12446171,"line_start":369,"line_end":369,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12446176,"byte_end":12446181,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12446186,"byte_end":12446193,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12446198,"byte_end":12446201,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12446206,"byte_end":12446246,"line_start":373,"line_end":373,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447476,"byte_end":12447485,"line_start":414,"line_end":414,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12446874,"byte_end":12446929,"line_start":396,"line_end":396,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12446934,"byte_end":12446937,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12446942,"byte_end":12447017,"line_start":398,"line_end":398,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447022,"byte_end":12447072,"line_start":399,"line_end":399,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447077,"byte_end":12447080,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447085,"byte_end":12447169,"line_start":401,"line_end":401,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447174,"byte_end":12447177,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447182,"byte_end":12447196,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447201,"byte_end":12447204,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447209,"byte_end":12447216,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447221,"byte_end":12447254,"line_start":406,"line_end":406,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447259,"byte_end":12447262,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447267,"byte_end":12447301,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/ let mut guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447306,"byte_end":12447340,"line_start":409,"line_end":409,"column_start":5,"column_end":39}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447345,"byte_end":12447399,"line_start":410,"line_end":410,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447404,"byte_end":12447411,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447416,"byte_end":12447419,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447424,"byte_end":12447464,"line_start":413,"line_end":413,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450803,"byte_end":12450814,"line_start":520,"line_end":520,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447891,"byte_end":12447978,"line_start":434,"line_end":434,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447979,"byte_end":12447982,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447983,"byte_end":12448078,"line_start":436,"line_end":436,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448079,"byte_end":12448168,"line_start":437,"line_end":437,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448169,"byte_end":12448172,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448173,"byte_end":12448266,"line_start":439,"line_end":439,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448267,"byte_end":12448304,"line_start":440,"line_end":440,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448305,"byte_end":12448308,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448309,"byte_end":12448405,"line_start":442,"line_end":442,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448406,"byte_end":12448409,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448410,"byte_end":12448422,"line_start":444,"line_end":444,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448423,"byte_end":12448426,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448427,"byte_end":12448517,"line_start":446,"line_end":446,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448518,"byte_end":12448585,"line_start":447,"line_end":447,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448586,"byte_end":12448589,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448590,"byte_end":12448604,"line_start":449,"line_end":449,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448605,"byte_end":12448608,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448609,"byte_end":12448616,"line_start":451,"line_end":451,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448617,"byte_end":12448666,"line_start":452,"line_end":452,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448667,"byte_end":12448712,"line_start":453,"line_end":453,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448713,"byte_end":12448716,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448717,"byte_end":12448744,"line_start":455,"line_end":455,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448745,"byte_end":12448748,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448749,"byte_end":12448761,"line_start":457,"line_end":457,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448762,"byte_end":12448817,"line_start":458,"line_end":458,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448818,"byte_end":12448864,"line_start":459,"line_end":459,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448865,"byte_end":12448868,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448869,"byte_end":12448943,"line_start":461,"line_end":461,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448944,"byte_end":12448994,"line_start":462,"line_end":462,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448995,"byte_end":12448998,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12448999,"byte_end":12449028,"line_start":464,"line_end":464,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449029,"byte_end":12449085,"line_start":465,"line_end":465,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449086,"byte_end":12449097,"line_start":466,"line_end":466,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449098,"byte_end":12449101,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449102,"byte_end":12449183,"line_start":468,"line_end":468,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449184,"byte_end":12449189,"line_start":469,"line_end":469,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449190,"byte_end":12449197,"line_start":470,"line_end":470,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449198,"byte_end":12449201,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449202,"byte_end":12449296,"line_start":472,"line_end":472,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449297,"byte_end":12449300,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449301,"byte_end":12449395,"line_start":474,"line_end":474,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449396,"byte_end":12449481,"line_start":475,"line_end":475,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449482,"byte_end":12449485,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449486,"byte_end":12449585,"line_start":477,"line_end":477,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449586,"byte_end":12449684,"line_start":478,"line_end":478,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449685,"byte_end":12449705,"line_start":479,"line_end":479,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449706,"byte_end":12449709,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449710,"byte_end":12449717,"line_start":481,"line_end":481,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449718,"byte_end":12449767,"line_start":482,"line_end":482,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449768,"byte_end":12449799,"line_start":483,"line_end":483,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449800,"byte_end":12449845,"line_start":484,"line_end":484,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449846,"byte_end":12449849,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449850,"byte_end":12449871,"line_start":486,"line_end":486,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449872,"byte_end":12449902,"line_start":487,"line_end":487,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449903,"byte_end":12449908,"line_start":488,"line_end":488,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449909,"byte_end":12449912,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449913,"byte_end":12449933,"line_start":490,"line_end":490,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449934,"byte_end":12449964,"line_start":491,"line_end":491,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449965,"byte_end":12449995,"line_start":492,"line_end":492,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12449996,"byte_end":12450001,"line_start":493,"line_end":493,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450002,"byte_end":12450005,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450006,"byte_end":12450037,"line_start":495,"line_end":495,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450038,"byte_end":12450066,"line_start":496,"line_end":496,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450067,"byte_end":12450087,"line_start":497,"line_end":497,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450088,"byte_end":12450124,"line_start":498,"line_end":498,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450125,"byte_end":12450202,"line_start":499,"line_end":499,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450203,"byte_end":12450206,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450207,"byte_end":12450258,"line_start":501,"line_end":501,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450259,"byte_end":12450299,"line_start":502,"line_end":502,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450300,"byte_end":12450374,"line_start":503,"line_end":503,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450375,"byte_end":12450378,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450379,"byte_end":12450467,"line_start":505,"line_end":505,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450468,"byte_end":12450518,"line_start":506,"line_end":506,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450519,"byte_end":12450571,"line_start":507,"line_end":507,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450572,"byte_end":12450600,"line_start":508,"line_end":508,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450601,"byte_end":12450604,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450605,"byte_end":12450637,"line_start":510,"line_end":510,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450638,"byte_end":12450655,"line_start":511,"line_end":511,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450656,"byte_end":12450669,"line_start":512,"line_end":512,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450670,"byte_end":12450679,"line_start":513,"line_end":513,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450680,"byte_end":12450685,"line_start":514,"line_end":514,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450686,"byte_end":12450693,"line_start":515,"line_end":515,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450694,"byte_end":12450697,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: struct.Atomic.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450698,"byte_end":12450732,"line_start":517,"line_end":517,"column_start":1,"column_end":35}},{"value":"/ [`defer`]: struct.Guard.html#method.defer","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450733,"byte_end":12450778,"line_start":518,"line_end":518,"column_start":1,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12450779,"byte_end":12450788,"line_start":519,"line_end":519,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\default.rs","byte_start":12836811,"byte_end":12836814,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\default.rs","byte_start":12836765,"byte_end":12836793,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\default.rs","byte_start":12836794,"byte_end":12836803,"line_start":21,"line_end":21,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\default.rs","byte_start":12836939,"byte_end":12836948,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\default.rs","byte_start":12836870,"byte_end":12836921,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\default.rs","byte_start":12836922,"byte_end":12836931,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\default.rs","byte_start":12837058,"byte_end":12837075,"line_start":33,"line_end":33,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\default.rs","byte_start":12837009,"byte_end":12837050,"line_start":32,"line_end":32,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12378538,"byte_end":12378556,"line_start":35,"line_end":35,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379730,"byte_end":12379738,"line_start":66,"line_end":66,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381556,"byte_end":12381562,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381606,"byte_end":12381612,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381628,"byte_end":12381634,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":114},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394786,"byte_end":12394792,"line_start":513,"line_end":513,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12395116,"byte_end":12395122,"line_start":525,"line_end":525,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12395352,"byte_end":12395358,"line_start":533,"line_end":533,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12395685,"byte_end":12395691,"line_start":544,"line_end":544,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12395783,"byte_end":12395789,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12396184,"byte_end":12396190,"line_start":567,"line_end":567,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12396293,"byte_end":12396299,"line_start":573,"line_end":573,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12396399,"byte_end":12396405,"line_start":579,"line_end":579,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12396754,"byte_end":12396760,"line_start":594,"line_end":594,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397707,"byte_end":12397712,"line_start":630,"line_end":630,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398225,"byte_end":12398230,"line_start":653,"line_end":653,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400975,"byte_end":12400980,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12401163,"byte_end":12401168,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12401443,"byte_end":12401448,"line_start":776,"line_end":776,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12401569,"byte_end":12401574,"line_start":782,"line_end":782,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12401740,"byte_end":12401745,"line_start":791,"line_end":791,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12401904,"byte_end":12401909,"line_start":798,"line_end":798,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12401999,"byte_end":12402004,"line_start":804,"line_end":804,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12402457,"byte_end":12402462,"line_start":823,"line_end":823,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12402547,"byte_end":12402552,"line_start":829,"line_end":829,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12402649,"byte_end":12402654,"line_start":835,"line_end":835,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12402735,"byte_end":12402740,"line_start":841,"line_end":841,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403199,"byte_end":12403205,"line_start":858,"line_end":858,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403365,"byte_end":12403371,"line_start":867,"line_end":867,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403410,"byte_end":12403416,"line_start":869,"line_end":869,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403668,"byte_end":12403674,"line_start":884,"line_end":884,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12411007,"byte_end":12411013,"line_start":1124,"line_end":1124,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12411539,"byte_end":12411545,"line_start":1145,"line_end":1145,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12411656,"byte_end":12411662,"line_start":1151,"line_end":1151,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12411716,"byte_end":12411722,"line_start":1153,"line_end":1153,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12411871,"byte_end":12411877,"line_start":1159,"line_end":1159,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12412009,"byte_end":12412015,"line_start":1165,"line_end":1165,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12412299,"byte_end":12412305,"line_start":1176,"line_end":1176,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12412452,"byte_end":12412458,"line_start":1182,"line_end":1182,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413256,"byte_end":12413265,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413290,"byte_end":12413299,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413309,"byte_end":12413318,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413611,"byte_end":12413620,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413818,"byte_end":12413827,"line_start":52,"line_end":52,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413951,"byte_end":12413960,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414134,"byte_end":12414143,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414254,"byte_end":12414265,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414725,"byte_end":12414736,"line_start":91,"line_end":91,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414883,"byte_end":12414894,"line_start":100,"line_end":100,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\deferred.rs","byte_start":12424798,"byte_end":12424806,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\deferred.rs","byte_start":12424926,"byte_end":12424934,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\epoch.rs","byte_start":12428905,"byte_end":12428910,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\epoch.rs","byte_start":12430665,"byte_end":12430676,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433615,"byte_end":12433620,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447610,"byte_end":12447615,"line_start":419,"line_end":419,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447785,"byte_end":12447790,"line_start":428,"line_end":428,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12454314,"byte_end":12454317,"line_start":69,"line_end":69,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12454327,"byte_end":12454330,"line_start":71,"line_end":71,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12455257,"byte_end":12455260,"line_start":106,"line_end":106,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12457634,"byte_end":12457637,"line_start":133,"line_end":133,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12458036,"byte_end":12458039,"line_start":145,"line_end":145,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12458435,"byte_end":12458444,"line_start":161,"line_end":161,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12458454,"byte_end":12458463,"line_start":163,"line_end":163,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12459138,"byte_end":12459144,"line_start":184,"line_end":184,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12463883,"byte_end":12463888,"line_start":314,"line_end":314,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12472411,"byte_end":12472416,"line_start":534,"line_end":534,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\list.rs","byte_start":12478389,"byte_end":12478394,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\list.rs","byte_start":12478530,"byte_end":12478535,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\list.rs","byte_start":12479041,"byte_end":12479045,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\list.rs","byte_start":12481597,"byte_end":12481601,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\list.rs","byte_start":12482134,"byte_end":12482138,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\queue.rs","byte_start":12491484,"byte_end":12491489,"line_start":39,"line_end":39,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\queue.rs","byte_start":12491526,"byte_end":12491531,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\queue.rs","byte_start":12491547,"byte_end":12491552,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\queue.rs","byte_start":12496585,"byte_end":12496590,"line_start":182,"line_end":182,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12378538,"byte_end":12378556,"line_start":35,"line_end":35,"column_start":60,"column_end":78},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12379730,"byte_end":12379738,"line_start":66,"line_end":66,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":43563},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381556,"byte_end":12381562,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381606,"byte_end":12381612,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12381628,"byte_end":12381634,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":85},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12394786,"byte_end":12394792,"line_start":513,"line_end":513,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12395116,"byte_end":12395122,"line_start":525,"line_end":525,"column_start":26,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":9367}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12395352,"byte_end":12395358,"line_start":533,"line_end":533,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12395685,"byte_end":12395691,"line_start":544,"line_end":544,"column_start":21,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12395783,"byte_end":12395789,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12396184,"byte_end":12396190,"line_start":567,"line_end":567,"column_start":26,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12396293,"byte_end":12396299,"line_start":573,"line_end":573,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12396399,"byte_end":12396405,"line_start":579,"line_end":579,"column_start":37,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12396754,"byte_end":12396760,"line_start":594,"line_end":594,"column_start":28,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12397707,"byte_end":12397712,"line_start":630,"line_end":630,"column_start":24,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":159},"to":{"krate":0,"index":155}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12398225,"byte_end":12398230,"line_start":653,"line_end":653,"column_start":9,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12400975,"byte_end":12400980,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12401163,"byte_end":12401168,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12401443,"byte_end":12401448,"line_start":776,"line_end":776,"column_start":26,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12401569,"byte_end":12401574,"line_start":782,"line_end":782,"column_start":19,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":3215}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12401740,"byte_end":12401745,"line_start":791,"line_end":791,"column_start":22,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":3228}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12401904,"byte_end":12401909,"line_start":798,"line_end":798,"column_start":21,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12401999,"byte_end":12402004,"line_start":804,"line_end":804,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12402457,"byte_end":12402462,"line_start":823,"line_end":823,"column_start":23,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":2603}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12402547,"byte_end":12402552,"line_start":829,"line_end":829,"column_start":26,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":2606}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12402649,"byte_end":12402654,"line_start":835,"line_end":835,"column_start":22,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":2901}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12402735,"byte_end":12402740,"line_start":841,"line_end":841,"column_start":22,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":2904}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403199,"byte_end":12403205,"line_start":858,"line_end":858,"column_start":23,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403365,"byte_end":12403371,"line_start":867,"line_end":867,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":3014}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403410,"byte_end":12403416,"line_start":869,"line_end":869,"column_start":28,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":210},"to":{"krate":0,"index":155}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12403668,"byte_end":12403674,"line_start":884,"line_end":884,"column_start":13,"column_end":19},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12411007,"byte_end":12411013,"line_start":1124,"line_end":1124,"column_start":32,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12411539,"byte_end":12411545,"line_start":1145,"line_end":1145,"column_start":42,"column_end":48},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":2655}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12411656,"byte_end":12411662,"line_start":1151,"line_end":1151,"column_start":20,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":2660}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12411716,"byte_end":12411722,"line_start":1153,"line_end":1153,"column_start":43,"column_end":49},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":2702}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12411871,"byte_end":12411877,"line_start":1159,"line_end":1159,"column_start":21,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":2691}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12412009,"byte_end":12412015,"line_start":1165,"line_end":1165,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12412299,"byte_end":12412305,"line_start":1176,"line_end":1176,"column_start":30,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":9367}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\atomic.rs","byte_start":12412452,"byte_end":12412458,"line_start":1182,"line_end":1182,"column_start":25,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413256,"byte_end":12413265,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413290,"byte_end":12413299,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413309,"byte_end":12413318,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413611,"byte_end":12413620,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413818,"byte_end":12413827,"line_start":52,"line_end":52,"column_start":21,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12413951,"byte_end":12413960,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":2655}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414134,"byte_end":12414143,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":2660}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414254,"byte_end":12414265,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414725,"byte_end":12414736,"line_start":91,"line_end":91,"column_start":15,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\collector.rs","byte_start":12414883,"byte_end":12414894,"line_start":100,"line_end":100,"column_start":21,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\deferred.rs","byte_start":12424798,"byte_end":12424806,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":330},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\deferred.rs","byte_start":12424926,"byte_end":12424934,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\epoch.rs","byte_start":12428905,"byte_end":12428910,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\epoch.rs","byte_start":12430665,"byte_end":12430676,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12433615,"byte_end":12433620,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447610,"byte_end":12447615,"line_start":419,"line_end":419,"column_start":15,"column_end":20},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\guard.rs","byte_start":12447785,"byte_end":12447790,"line_start":428,"line_end":428,"column_start":21,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12454314,"byte_end":12454317,"line_start":69,"line_end":69,"column_start":22,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":491},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12454327,"byte_end":12454330,"line_start":71,"line_end":71,"column_start":6,"column_end":9},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12455257,"byte_end":12455260,"line_start":106,"line_end":106,"column_start":18,"column_end":21},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":491},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12457634,"byte_end":12457637,"line_start":133,"line_end":133,"column_start":15,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":491},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12458036,"byte_end":12458039,"line_start":145,"line_end":145,"column_start":21,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":491},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12458435,"byte_end":12458444,"line_start":161,"line_end":161,"column_start":22,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":730},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12458454,"byte_end":12458463,"line_start":163,"line_end":163,"column_start":6,"column_end":15},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12459138,"byte_end":12459144,"line_start":184,"line_end":184,"column_start":6,"column_end":12},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12463883,"byte_end":12463888,"line_start":314,"line_end":314,"column_start":6,"column_end":11},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\internal.rs","byte_start":12472411,"byte_end":12472416,"line_start":534,"line_end":534,"column_start":27,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":522},"to":{"krate":0,"index":576}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\list.rs","byte_start":12478389,"byte_end":12478394,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":737},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\list.rs","byte_start":12478530,"byte_end":12478535,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\list.rs","byte_start":12479041,"byte_end":12479045,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\list.rs","byte_start":12481597,"byte_end":12481601,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":741},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\list.rs","byte_start":12482134,"byte_end":12482138,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":581},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\queue.rs","byte_start":12491484,"byte_end":12491489,"line_start":39,"line_end":39,"column_start":31,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":758},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\queue.rs","byte_start":12491526,"byte_end":12491531,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":758},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\queue.rs","byte_start":12491547,"byte_end":12491552,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.0\\src\\sync\\queue.rs","byte_start":12496585,"byte_end":12496590,"line_start":182,"line_end":182,"column_start":18,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":758},"to":{"krate":2,"index":3239}}]}