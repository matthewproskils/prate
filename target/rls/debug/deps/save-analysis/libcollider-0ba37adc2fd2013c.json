{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1","program":"C:\\Users\\matth\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","collider","C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=0ba37adc2fd2013c","-C","extra-filename=-0ba37adc2fd2013c","--out-dir","c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps","--extern","fnv=c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps\\libfnv-75ee5989f482bdcc.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\matth\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps\\libcollider-0ba37adc2fd2013c.rmeta"},"prelude":{"crate_id":{"name":"collider","disambiguator":[14541549082533606458,0]},"crate_root":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src","external_crates":[{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10096348926132587111,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[6130085985959571423,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10834538756664496827,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16052532455530240381,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9943859611570948275,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2085945775536176072,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9544986399897469044,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17772512906340842432,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2307131819628043677,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8458190703300588207,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5770881746596919874,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[9756748775720564409,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[13144887679811945557,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","num":14,"id":{"name":"fnv","disambiguator":[15857159832113278893,0]}}],"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":602,"byte_end":4560,"line_start":15,"line_end":101,"column_start":1,"column_end":17}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\mod.rs","byte_start":6373,"byte_end":6382,"line_start":21,"line_end":21,"column_start":23,"column_end":32},"alias_span":null,"name":"ShapeKind","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\mod.rs","byte_start":6384,"byte_end":6389,"line_start":21,"line_end":21,"column_start":34,"column_end":39},"alias_span":null,"name":"Shape","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\mod.rs","byte_start":6391,"byte_end":6402,"line_start":21,"line_end":21,"column_start":41,"column_end":52},"alias_span":null,"name":"PlacedShape","value":"","parent":{"krate":0,"index":17}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\mod.rs","byte_start":6424,"byte_end":6425,"line_start":22,"line_end":22,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"Vec2, DirVec2, v2","parent":{"krate":0,"index":17}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\mod.rs","byte_start":6447,"byte_end":6448,"line_start":23,"line_end":23,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Card, CardMask","parent":{"krate":0,"index":17}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":4558,"byte_end":4559,"line_start":101,"line_end":101,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":602,"byte_end":4560,"line_start":15,"line_end":101,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":17},{"krate":0,"index":246},{"krate":0,"index":302},{"krate":0,"index":633},{"krate":0,"index":646}],"decl_id":null,"docs":" Collider is a library for continuous 2D collision detection,\n for use with game developement.","sig":null,"attributes":[{"value":"/ Collider is a library for continuous 2D collision detection,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":602,"byte_end":666,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ for use with game developement.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":667,"byte_end":702,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":703,"byte_end":706,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Most game engines follow the approach of periodically updating the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":707,"byte_end":777,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/ positions of all shapes and checking for collisions at a frozen snapshot in time.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":778,"byte_end":863,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/ [Continuous collision detection](https://en.wikipedia.org/wiki/Collision_detection#A_posteriori_.28discrete.29_versus_a_priori_.28continuous.29),","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":864,"byte_end":1013,"line_start":20,"line_end":20,"column_start":1,"column_end":150}},{"value":"/ on the other hand, means that the time of collision is determined very precisely,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1014,"byte_end":1099,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/ and the user is not restricted to a fixed time-stepping method.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1100,"byte_end":1167,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ There are currently two kinds of shapes supported by Collider: circles and rectangles.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1168,"byte_end":1258,"line_start":23,"line_end":23,"column_start":1,"column_end":91}},{"value":"/ The user specifies the positions and velocities of these shapes, which","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1259,"byte_end":1333,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ they can update at any time, and Collider will solve for the precise times of","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1334,"byte_end":1415,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/ collision and separation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1416,"byte_end":1445,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1446,"byte_end":1449,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ There are certain advantages that continuous collision detection","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1450,"byte_end":1518,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ holds over the traditional approach.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1519,"byte_end":1559,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/ In a game engine, the position of a sprite may be updated to overlap a wall,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1560,"byte_end":1640,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ and in a traditional collision system there would need to be a post-correction","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1641,"byte_end":1723,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ to make sure the sprite does not appear inside of the wall.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1724,"byte_end":1787,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ This is not needed with continuous collision detection, since","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1788,"byte_end":1853,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/ the precise time and location at which the sprite touches the wall is known.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1854,"byte_end":1934,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ Traditional collision detection may have an issue with \"tunneling,\" in which a","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":1935,"byte_end":2017,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/ fast small object runs into a narrow wall and collision detection misses it,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2018,"byte_end":2098,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ or two fast small objects fly right through each other and collision detection misses it.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2099,"byte_end":2192,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"/ This is also not a problem for continuous collision detection.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2193,"byte_end":2259,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ It is also debatable that continuous collision detection may be","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2260,"byte_end":2327,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/ more efficient in certain circumstances,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2328,"byte_end":2372,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"/ since the hitboxes may be updated less frequently and still maintain a","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2373,"byte_end":2447,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ smooth appearance over time.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2448,"byte_end":2480,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2481,"byte_end":2484,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #Example","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2485,"byte_end":2497,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2498,"byte_end":2505,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use collider::{Collider, HbEvent, HbId, HbProfile};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2506,"byte_end":2561,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/ use collider::geom::{Shape, v2};","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2562,"byte_end":2598,"line_start":47,"line_end":47,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2599,"byte_end":2602,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[derive(Copy, Clone, Debug)]","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2603,"byte_end":2636,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/ struct DemoHbProfile { id: HbId } // add any additional identfying data to this struct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2637,"byte_end":2727,"line_start":50,"line_end":50,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2728,"byte_end":2731,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ impl HbProfile for DemoHbProfile {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2732,"byte_end":2770,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/     fn id(&self) -> HbId { self.id }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2771,"byte_end":2811,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/     fn can_interact(&self, _other: &DemoHbProfile) -> bool { true }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2812,"byte_end":2883,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/     fn cell_width() -> f64 { 4.0 }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2884,"byte_end":2922,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/     fn padding() -> f64 { 0.01 }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2923,"byte_end":2959,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2960,"byte_end":2965,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2966,"byte_end":2969,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let mut collider: Collider<DemoHbProfile> = Collider::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":2970,"byte_end":3034,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3035,"byte_end":3038,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let hitbox = Shape::square(2.0).place(v2(-10.0, 0.0)).moving(v2(1.0, 0.0));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3039,"byte_end":3118,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ let overlaps = collider.add_hitbox(DemoHbProfile { id: 0 }, hitbox);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3119,"byte_end":3191,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/ assert!(overlaps.is_empty());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3192,"byte_end":3225,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3226,"byte_end":3229,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let hitbox = Shape::square(2.0).place(v2(10.0, 0.0)).moving(v2(-1.0, 0.0));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3230,"byte_end":3309,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ let overlaps = collider.add_hitbox(DemoHbProfile { id: 1 }, hitbox);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3310,"byte_end":3382,"line_start":66,"line_end":66,"column_start":1,"column_end":73}},{"value":"/ assert!(overlaps.is_empty());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3383,"byte_end":3416,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3417,"byte_end":3420,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ while collider.time() < 20.0 {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3421,"byte_end":3455,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/     let time = collider.next_time().min(20.0);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3456,"byte_end":3506,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/     collider.set_time(time);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3507,"byte_end":3539,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/     if let Some((event, profile_1, profile_2)) = collider.next() {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3540,"byte_end":3610,"line_start":72,"line_end":72,"column_start":1,"column_end":71}},{"value":"/         println!(\"{:?} between {:?} and {:?} at time {}.\",","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3611,"byte_end":3673,"line_start":73,"line_end":73,"column_start":1,"column_end":63}},{"value":"/                  event, profile_1, profile_2, collider.time());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3674,"byte_end":3741,"line_start":74,"line_end":74,"column_start":1,"column_end":68}},{"value":"/         if event == HbEvent::Collide {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3742,"byte_end":3784,"line_start":75,"line_end":75,"column_start":1,"column_end":43}},{"value":"/             println!(\"Speed of collided hitboxes is halved.\");","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3785,"byte_end":3851,"line_start":76,"line_end":76,"column_start":1,"column_end":67}},{"value":"/             for profile in [profile_1, profile_2].iter() {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3852,"byte_end":3914,"line_start":77,"line_end":77,"column_start":1,"column_end":63}},{"value":"/                 let mut hb_vel = collider.get_hitbox(profile.id()).vel;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3915,"byte_end":3990,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/                 hb_vel.value *= 0.5;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":3991,"byte_end":4031,"line_start":79,"line_end":79,"column_start":1,"column_end":41}},{"value":"/                 collider.set_hitbox_vel(profile.id(), hb_vel);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":4032,"byte_end":4098,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/             }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":4099,"byte_end":4116,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":4117,"byte_end":4130,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":4131,"byte_end":4140,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":4141,"byte_end":4146,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":4147,"byte_end":4150,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // the above loop prints the following events:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":4151,"byte_end":4201,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/ //   Collide between DemoHbProfile { id: 0 } and DemoHbProfile { id: 1 } at time 9.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":4202,"byte_end":4289,"line_start":87,"line_end":87,"column_start":1,"column_end":88}},{"value":"/ //   Speed of collided hitboxes is halved.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":4290,"byte_end":4336,"line_start":88,"line_end":88,"column_start":1,"column_end":47}},{"value":"/ //   Separate between DemoHbProfile { id: 0 } and DemoHbProfile { id: 1 } at time 13.01.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":4337,"byte_end":4429,"line_start":89,"line_end":89,"column_start":1,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":4430,"byte_end":4437,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"geom","qualname":"::geom","value":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\mod.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":127},{"krate":0,"index":197},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" Module containing geometry primitives.\n","sig":null,"attributes":[{"value":"/ Module containing geometry primitives.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\mod.rs","byte_start":6265,"byte_end":6307,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7389,"byte_end":7395,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Circle","qualname":"::geom::shape::ShapeKind::Circle","value":"ShapeKind::Circle","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":" Circle.  Requires width and height to match.\n","sig":null,"attributes":[{"value":"/ Circle.  Requires width and height to match.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7336,"byte_end":7384,"line_start":27,"line_end":27,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7433,"byte_end":7437,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Rect","qualname":"::geom::shape::ShapeKind::Rect","value":"ShapeKind::Rect","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":" Axis-aligned rectangle.\n","sig":null,"attributes":[{"value":"/ Axis-aligned rectangle.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7401,"byte_end":7428,"line_start":29,"line_end":29,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7320,"byte_end":7329,"line_start":26,"line_end":26,"column_start":10,"column_end":19},"name":"ShapeKind","qualname":"::geom::shape::ShapeKind","value":"pub enum ShapeKind { Circle, Rect, }","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":663}],"decl_id":null,"docs":" Enumeration of kinds of shapes used by Collider.\n","sig":null,"attributes":[{"value":"/ Enumeration of kinds of shapes used by Collider.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7207,"byte_end":7259,"line_start":24,"line_end":24,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7620,"byte_end":7625,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"Shape","qualname":"::geom::shape::Shape","value":"Shape {  }","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681}],"decl_id":null,"docs":" Represents a shape, without any position.","sig":null,"attributes":[{"value":"/ Represents a shape, without any position.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7441,"byte_end":7486,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7487,"byte_end":7490,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Each shape has a `width` and `height`, which are allowed to be negative.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7491,"byte_end":7567,"line_start":35,"line_end":35,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7904,"byte_end":7907,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<Shape>::new","value":"pub fn new(ShapeKind, Vec2) -> Shape","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new shape with the given `kind` and `dims` (width and height dimensions).","sig":null,"attributes":[{"value":"/ Constructs a new shape with the given `kind` and `dims` (width and height dimensions).","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7684,"byte_end":7774,"line_start":43,"line_end":43,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7779,"byte_end":7782,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Dimensions must be non-negative.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7787,"byte_end":7823,"line_start":45,"line_end":45,"column_start":5,"column_end":41}},{"value":"/ If `kind` is `Circle`, then the width and height must match.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7828,"byte_end":7892,"line_start":46,"line_end":46,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":8436,"byte_end":8442,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"circle","qualname":"<Shape>::circle","value":"pub fn circle(f64) -> Shape","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new circle shape, using `diam` as the width and height.\n","sig":null,"attributes":[{"value":"/ Constructs a new circle shape, using `diam` as the width and height.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":8338,"byte_end":8410,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":8415,"byte_end":8424,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":8658,"byte_end":8662,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"rect","qualname":"<Shape>::rect","value":"pub fn rect(Vec2) -> Shape","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new axis-aligned rectangle shape with the given `dims` (width and height dimensions).\n","sig":null,"attributes":[{"value":"/ Constructs a new axis-aligned rectangle shape with the given `dims` (width and height dimensions).","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":8530,"byte_end":8632,"line_start":66,"line_end":66,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":8637,"byte_end":8646,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":8835,"byte_end":8841,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"square","qualname":"<Shape>::square","value":"pub fn square(f64) -> Shape","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new axis-aligned square shape with the given `width`.\n","sig":null,"attributes":[{"value":"/ Constructs a new axis-aligned square shape with the given `width`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":8739,"byte_end":8809,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":8814,"byte_end":8823,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":8986,"byte_end":8990,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"kind","qualname":"<Shape>::kind","value":"pub fn kind(&Self) -> ShapeKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the kind of shape.\n","sig":null,"attributes":[{"value":"/ Returns the kind of shape.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":8930,"byte_end":8960,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":8965,"byte_end":8974,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9102,"byte_end":9106,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"dims","qualname":"<Shape>::dims","value":"pub fn dims(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the dims of the shape.\n","sig":null,"attributes":[{"value":"/ Returns the dims of the shape.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9042,"byte_end":9076,"line_start":84,"line_end":84,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9081,"byte_end":9090,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9227,"byte_end":9232,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"place","qualname":"<Shape>::place","value":"pub fn place(Self, Vec2) -> PlacedShape","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `PlacedShape::new(pos, self)`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `PlacedShape::new(pos, self)`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9153,"byte_end":9201,"line_start":90,"line_end":90,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9206,"byte_end":9215,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9561,"byte_end":9572,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"PlacedShape","qualname":"::geom::shape::PlacedShape","value":"PlacedShape { pos, shape }","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693}],"decl_id":null,"docs":" Represents a shape with a position.\n","sig":null,"attributes":[{"value":"/ Represents a shape with a position.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9469,"byte_end":9508,"line_start":101,"line_end":101,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9632,"byte_end":9635,"line_start":105,"line_end":105,"column_start":9,"column_end":12},"name":"pos","qualname":"::geom::shape::PlacedShape::pos","value":"geom::vec::Vec2","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" The position of the center of the shape.\n","sig":null,"attributes":[{"value":"/ The position of the center of the shape.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9579,"byte_end":9623,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9670,"byte_end":9675,"line_start":107,"line_end":107,"column_start":9,"column_end":14},"name":"shape","qualname":"::geom::shape::PlacedShape::shape","value":"geom::shape::Shape","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" The shape.\n","sig":null,"attributes":[{"value":"/ The shape.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9647,"byte_end":9661,"line_start":106,"line_end":106,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9803,"byte_end":9806,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<PlacedShape>::new","value":"pub fn new(Vec2, Shape) -> PlacedShape","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `PlacedShape` with the given `pos` and `shape`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `PlacedShape` with the given `pos` and `shape`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9709,"byte_end":9777,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9782,"byte_end":9791,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9970,"byte_end":9974,"line_start":119,"line_end":119,"column_start":12,"column_end":16},"name":"kind","qualname":"<PlacedShape>::kind","value":"pub fn kind(&Self) -> ShapeKind","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `self.shape.kind()`\n","sig":null,"attributes":[{"value":"/ Shorthand for `self.shape.kind()`","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9907,"byte_end":9944,"line_start":117,"line_end":117,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9949,"byte_end":9958,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10097,"byte_end":10101,"line_start":125,"line_end":125,"column_start":12,"column_end":16},"name":"dims","qualname":"<PlacedShape>::dims","value":"pub fn dims(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `self.shape.dims()`\n","sig":null,"attributes":[{"value":"/ Shorthand for `self.shape.dims()`","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10034,"byte_end":10071,"line_start":123,"line_end":123,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10076,"byte_end":10085,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10225,"byte_end":10230,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"min_x","qualname":"<PlacedShape>::min_x","value":"pub fn min_x(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the lowest x coordinate of the `PlacedShape`.\n","sig":null,"attributes":[{"value":"/ Returns the lowest x coordinate of the `PlacedShape`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10156,"byte_end":10213,"line_start":129,"line_end":129,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10342,"byte_end":10347,"line_start":133,"line_end":133,"column_start":12,"column_end":17},"name":"min_y","qualname":"<PlacedShape>::min_y","value":"pub fn min_y(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the lowest y coordinate of the `PlacedShape`.\n","sig":null,"attributes":[{"value":"/ Returns the lowest y coordinate of the `PlacedShape`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10273,"byte_end":10330,"line_start":132,"line_end":132,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10462,"byte_end":10467,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"max_x","qualname":"<PlacedShape>::max_x","value":"pub fn max_x(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the highest x coordinate of the `PlacedShape`.\n","sig":null,"attributes":[{"value":"/ Returns the highest x coordinate of the `PlacedShape`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10392,"byte_end":10450,"line_start":135,"line_end":135,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10581,"byte_end":10586,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"max_y","qualname":"<PlacedShape>::max_y","value":"pub fn max_y(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the highest y coordinate of the `PlacedShape`.\n","sig":null,"attributes":[{"value":"/ Returns the highest y coordinate of the `PlacedShape`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10511,"byte_end":10569,"line_start":138,"line_end":138,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10724,"byte_end":10732,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"overlaps","qualname":"<PlacedShape>::overlaps","value":"pub fn overlaps(&Self, &PlacedShape) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the two shapes overlap, subject to negligible numerical error.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the two shapes overlap, subject to negligible numerical error.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10628,"byte_end":10712,"line_start":141,"line_end":141,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":11471,"byte_end":11482,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"normal_from","qualname":"<PlacedShape>::normal_from","value":"pub fn normal_from(&Self, &PlacedShape) -> DirVec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a normal vector that points in the direction from `other` to `self`.","sig":null,"attributes":[{"value":"/ Returns a normal vector that points in the direction from `other` to `self`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10827,"byte_end":10907,"line_start":146,"line_end":146,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10912,"byte_end":10915,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The length of this vector is the minimum distance that `self` would need to","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":10920,"byte_end":10999,"line_start":148,"line_end":148,"column_start":5,"column_end":84}},{"value":"/ be moved along this direction so that it is no longer overlapping `other`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":11004,"byte_end":11082,"line_start":149,"line_end":149,"column_start":5,"column_end":83}},{"value":"/ If the shapes are not overlappingt to begin with, then the length of this vector","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":11087,"byte_end":11171,"line_start":150,"line_end":150,"column_start":5,"column_end":89}},{"value":"/ is negative, and describes the minimum distance that `self` would need to","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":11176,"byte_end":11253,"line_start":151,"line_end":151,"column_start":5,"column_end":82}},{"value":"/ be moved so that it is just overlapping `other`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":11258,"byte_end":11310,"line_start":152,"line_end":152,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":11315,"byte_end":11318,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ (As a minor caveat,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":11323,"byte_end":11346,"line_start":154,"line_end":154,"column_start":5,"column_end":28}},{"value":"/ when computing the normal between two `Rect` shapes,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":11351,"byte_end":11407,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/ the direction will always be axis-aligned.)","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":11412,"byte_end":11459,"line_start":156,"line_end":156,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":12380,"byte_end":12398,"line_start":172,"line_end":172,"column_start":12,"column_end":30},"name":"masked_normal_from","qualname":"<PlacedShape>::masked_normal_from","value":"pub fn masked_normal_from(&Self, &PlacedShape, CardMask) -> DirVec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a normal vector like `normal_from`, but only certain normal directions are permitted.","sig":null,"attributes":[{"value":"/ Returns a normal vector like `normal_from`, but only certain normal directions are permitted.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":11972,"byte_end":12069,"line_start":166,"line_end":166,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":12074,"byte_end":12077,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ A normal vector with a cardinal component that is not present in the `mask`","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":12082,"byte_end":12161,"line_start":168,"line_end":168,"column_start":5,"column_end":84}},{"value":"/ will not be returned, and the next-in-line normal vector will be used instead.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":12166,"byte_end":12248,"line_start":169,"line_end":169,"column_start":5,"column_end":87}},{"value":"/ This function panics if `mask` is empty, or if both shapes are circles and","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":12253,"byte_end":12331,"line_start":170,"line_end":170,"column_start":5,"column_end":83}},{"value":"/ `mask` is anything but full.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":12336,"byte_end":12368,"line_start":171,"line_end":171,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":13124,"byte_end":13137,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"contact_point","qualname":"<PlacedShape>::contact_point","value":"pub fn contact_point(&Self, &PlacedShape) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the point of contact between two shapes.","sig":null,"attributes":[{"value":"/ Returns the point of contact between two shapes.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":12963,"byte_end":13015,"line_start":181,"line_end":181,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":13020,"byte_end":13023,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ If the shapes are not overlapping, returns the nearest point between the shapes.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":13028,"byte_end":13112,"line_start":183,"line_end":183,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":13590,"byte_end":13596,"line_start":194,"line_end":194,"column_start":12,"column_end":18},"name":"moving","qualname":"<PlacedShape>::moving","value":"pub fn moving(Self, Vec2) -> Hitbox","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Hitbox::new(self, HbVel::moving(vel))`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Hitbox::new(self, HbVel::moving(vel))`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":13506,"byte_end":13564,"line_start":192,"line_end":192,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":13569,"byte_end":13578,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":13783,"byte_end":13795,"line_start":200,"line_end":200,"column_start":12,"column_end":24},"name":"moving_until","qualname":"<PlacedShape>::moving_until","value":"pub fn moving_until(Self, Vec2, f64) -> Hitbox","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Hitbox::new(self, HbVel::moving_until(vel, end_time))`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Hitbox::new(self, HbVel::moving_until(vel, end_time))`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":13683,"byte_end":13757,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":13762,"byte_end":13771,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":13993,"byte_end":13998,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"name":"still","qualname":"<PlacedShape>::still","value":"pub fn still(Self) -> Hitbox","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Hitbox::new(self, HbVel::still())`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Hitbox::new(self, HbVel::still())`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":13913,"byte_end":13967,"line_start":204,"line_end":204,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":13972,"byte_end":13981,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":14164,"byte_end":14175,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"still_until","qualname":"<PlacedShape>::still_until","value":"pub fn still_until(Self, f64) -> Hitbox","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Hitbox::new(self, HbVel::still_until(end_time))`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Hitbox::new(self, HbVel::still_until(end_time))`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":14070,"byte_end":14138,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":14143,"byte_end":14152,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22027,"byte_end":22031,"line_start":20,"line_end":20,"column_start":12,"column_end":16},"name":"Vec2","qualname":"::geom::vec::Vec2","value":"Vec2 { x, y }","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718}],"decl_id":null,"docs":" A 2-D Cartesian vector using finite `f64` values.\n","sig":null,"attributes":[{"value":"/ A 2-D Cartesian vector using finite `f64` values.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":21912,"byte_end":21965,"line_start":18,"line_end":18,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22068,"byte_end":22069,"line_start":22,"line_end":22,"column_start":9,"column_end":10},"name":"x","qualname":"::geom::vec::Vec2::x","value":"f64","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" The x-coordinate.\n","sig":null,"attributes":[{"value":"/ The x-coordinate.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22038,"byte_end":22059,"line_start":21,"line_end":21,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22110,"byte_end":22111,"line_start":24,"line_end":24,"column_start":9,"column_end":10},"name":"y","qualname":"::geom::vec::Vec2::y","value":"f64","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" The y-coordinate.\n","sig":null,"attributes":[{"value":"/ The y-coordinate.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22080,"byte_end":22101,"line_start":23,"line_end":23,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22225,"byte_end":22228,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Vec2>::new","value":"pub fn new(f64, f64) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Constructs a vector with the given `x` and `y` coordinates.\n","sig":null,"attributes":[{"value":"/ Constructs a vector with the given `x` and `y` coordinates.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22136,"byte_end":22199,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22204,"byte_end":22213,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22351,"byte_end":22355,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"zero","qualname":"<Vec2>::zero","value":"pub fn zero() -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Constructs a (0, 0) vector.\n","sig":null,"attributes":[{"value":"/ Constructs a (0, 0) vector.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22294,"byte_end":22325,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22330,"byte_end":22339,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22580,"byte_end":22586,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"len_sq","qualname":"<Vec2>::len_sq","value":"pub fn len_sq(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Computes the square of the Euclidean length of the vector.","sig":null,"attributes":[{"value":"/ Computes the square of the Euclidean length of the vector.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22403,"byte_end":22465,"line_start":40,"line_end":40,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22470,"byte_end":22473,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Due to underflow, this might be `0.0` even if `x` and `y` are non-zero but very small.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22478,"byte_end":22568,"line_start":42,"line_end":42,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22823,"byte_end":22826,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"len","qualname":"<Vec2>::len","value":"pub fn len(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Computes the the Euclidean length of the vector.","sig":null,"attributes":[{"value":"/ Computes the the Euclidean length of the vector.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22656,"byte_end":22708,"line_start":47,"line_end":47,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22713,"byte_end":22716,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Due to underflow, this might be `0.0` even if `x` and `y` are non-zero but very small.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22721,"byte_end":22811,"line_start":49,"line_end":49,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":23028,"byte_end":23037,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Vec2>::normalize","value":"pub fn normalize(&Self) -> Option<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector in the same direction as `self` but with length (approximately) `1.0`,\n or `None` if `self.len() == 0.0`.\n","sig":null,"attributes":[{"value":"/ Returns a vector in the same direction as `self` but with length (approximately) `1.0`,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22883,"byte_end":22974,"line_start":54,"line_end":54,"column_start":5,"column_end":96}},{"value":"/ or `None` if `self.len() == 0.0`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22979,"byte_end":23016,"line_start":55,"line_end":55,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":23429,"byte_end":23436,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"dist_sq","qualname":"<Vec2>::dist_sq","value":"pub fn dist_sq(&Self, &Vec2) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Computes the square of the Euclidean distance between two vectors.\n","sig":null,"attributes":[{"value":"/ Computes the square of the Euclidean distance between two vectors.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":23347,"byte_end":23417,"line_start":66,"line_end":66,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":23580,"byte_end":23584,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"dist","qualname":"<Vec2>::dist","value":"pub fn dist(&Self, &Vec2) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Computes the Euclidean distance between two vectors.\n","sig":null,"attributes":[{"value":"/ Computes the Euclidean distance between two vectors.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":23512,"byte_end":23568,"line_start":71,"line_end":71,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":23890,"byte_end":23894,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vec2>::lerp","value":"pub fn lerp(&Self, Vec2, f64) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolates between `self` and `other`.","sig":null,"attributes":[{"value":"/ Linearly interpolates between `self` and `other`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":23657,"byte_end":23710,"line_start":76,"line_end":76,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":23715,"byte_end":23718,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Using `ratio = 0.0` will return `self`, and using `ratio = 1.0` will return `other`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":23723,"byte_end":23811,"line_start":78,"line_end":78,"column_start":5,"column_end":93}},{"value":"/ Can also extrapolate using `ratio > 1.0` or `ratio < 0.0`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":23816,"byte_end":23878,"line_start":79,"line_end":79,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":24102,"byte_end":24108,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"rotate","qualname":"<Vec2>::rotate","value":"pub fn rotate(&Self, f64) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Rotates the vector by `angle` radians counter-clockwise (assuming +x is right and +y is up).\n","sig":null,"attributes":[{"value":"/ Rotates the vector by `angle` radians counter-clockwise (assuming +x is right and +y is up).","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":23994,"byte_end":24090,"line_start":84,"line_end":84,"column_start":5,"column_end":101}}]},{"kind":"Function","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25815,"byte_end":25817,"line_start":168,"line_end":168,"column_start":8,"column_end":10},"name":"v2","qualname":"::geom::vec::v2","value":"pub fn v2(f64, f64) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for invoking the `Vec2` constructor.\n","sig":null,"attributes":[{"value":"/ Shorthand for invoking the `Vec2` constructor.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25747,"byte_end":25797,"line_start":166,"line_end":166,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25798,"byte_end":25807,"line_start":167,"line_end":167,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26323,"byte_end":26330,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"DirVec2","qualname":"::geom::vec::DirVec2","value":"DirVec2 {  }","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732}],"decl_id":null,"docs":" A 2-D vector that separates direction from length.","sig":null,"attributes":[{"value":"/ A 2-D vector that separates direction from length.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25867,"byte_end":25921,"line_start":172,"line_end":172,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25922,"byte_end":25925,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ This may be used rather than `Vec2` if the length","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25926,"byte_end":25979,"line_start":174,"line_end":174,"column_start":1,"column_end":54}},{"value":"/ may be at or near `0.0` but the direction is still important,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25980,"byte_end":26045,"line_start":175,"line_end":175,"column_start":1,"column_end":66}},{"value":"/ or to distinguish between a vector with a negative length","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26046,"byte_end":26107,"line_start":176,"line_end":176,"column_start":1,"column_end":62}},{"value":"/ and a vector in the opposite direction of positive length.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26108,"byte_end":26170,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/ Such distinctions are necessary when describing the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26171,"byte_end":26226,"line_start":178,"line_end":178,"column_start":1,"column_end":56}},{"value":"/ normal distance between `PlacedShape`s.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26227,"byte_end":26270,"line_start":179,"line_end":179,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26521,"byte_end":26524,"line_start":190,"line_end":190,"column_start":12,"column_end":15},"name":"new","qualname":"<DirVec2>::new","value":"pub fn new(Vec2, f64) -> DirVec2","parent":null,"children":[],"decl_id":null,"docs":" Constructs a vector with the given direction `dir` and length `len`.","sig":null,"attributes":[{"value":"/ Constructs a vector with the given direction `dir` and length `len`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26383,"byte_end":26455,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26460,"byte_end":26463,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ `dir` is normalized before being set.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26468,"byte_end":26509,"line_start":189,"line_end":189,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26699,"byte_end":26702,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"dir","qualname":"<DirVec2>::dir","value":"pub fn dir(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the direction as a unit vector.\n","sig":null,"attributes":[{"value":"/ Returns the direction as a unit vector.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26630,"byte_end":26673,"line_start":194,"line_end":194,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26678,"byte_end":26687,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26841,"byte_end":26844,"line_start":202,"line_end":202,"column_start":12,"column_end":15},"name":"len","qualname":"<DirVec2>::len","value":"pub fn len(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the vector.  May be positive or negative.\n","sig":null,"attributes":[{"value":"/ Returns the length of the vector.  May be positive or negative.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26748,"byte_end":26815,"line_start":200,"line_end":200,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26820,"byte_end":26829,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26965,"byte_end":26969,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"flip","qualname":"<DirVec2>::flip","value":"pub fn flip(&Self) -> DirVec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a new vector with the same `len` but reversed `dir`.\n","sig":null,"attributes":[{"value":"/ Returns a new vector with the same `len` but reversed `dir`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26889,"byte_end":26953,"line_start":206,"line_end":206,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28046,"byte_end":28052,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"MinusX","qualname":"::geom::card::Card::MinusX","value":"Card::MinusX","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Negative X direction.\n","sig":null,"attributes":[{"value":"/ Negative X direction.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28016,"byte_end":28041,"line_start":21,"line_end":21,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28089,"byte_end":28095,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"MinusY","qualname":"::geom::card::Card::MinusY","value":"Card::MinusY","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Negative Y direction.\n","sig":null,"attributes":[{"value":"/ Negative Y direction.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28059,"byte_end":28084,"line_start":24,"line_end":24,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28132,"byte_end":28137,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"PlusX","qualname":"::geom::card::Card::PlusX","value":"Card::PlusX","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Positive X direction.\n","sig":null,"attributes":[{"value":"/ Positive X direction.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28102,"byte_end":28127,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28174,"byte_end":28179,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"PlusY","qualname":"::geom::card::Card::PlusY","value":"Card::PlusY","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Positive Y direction.\n","sig":null,"attributes":[{"value":"/ Positive Y direction.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28144,"byte_end":28169,"line_start":30,"line_end":30,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28005,"byte_end":28009,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Card","qualname":"::geom::card::Card","value":"pub enum Card { MinusX, MinusY, PlusX, PlusY, }","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749}],"decl_id":null,"docs":" Represents the four cardinal directions in 2D space.\n","sig":null,"attributes":[{"value":"/ Represents the four cardinal directions in 2D space.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":27888,"byte_end":27944,"line_start":18,"line_end":18,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28262,"byte_end":28266,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"flip","qualname":"<Card>::flip","value":"pub fn flip(Self) -> Card","parent":null,"children":[],"decl_id":null,"docs":" Returns the negative of the current direction.\n","sig":null,"attributes":[{"value":"/ Returns the negative of the current direction.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28200,"byte_end":28250,"line_start":35,"line_end":35,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28550,"byte_end":28556,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"values","qualname":"<Card>::values","value":"pub fn values() -> [Card; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns all cardinal directions.\n","sig":null,"attributes":[{"value":"/ Returns all cardinal directions.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28488,"byte_end":28524,"line_start":45,"line_end":45,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28529,"byte_end":28538,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28794,"byte_end":28802,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"CardMask","qualname":"::geom::card::CardMask","value":"CardMask {  }","parent":null,"children":[{"krate":0,"index":766}],"decl_id":null,"docs":" A map from `Card` to `bool`, typically used to specify allowed normal vector directions.\n","sig":null,"attributes":[{"value":"/ A map from `Card` to `bool`, typically used to specify allowed normal vector directions.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28646,"byte_end":28738,"line_start":52,"line_end":52,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28928,"byte_end":28933,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"empty","qualname":"<CardMask>::empty","value":"pub fn empty() -> CardMask","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CardMask` with all values set to `false`.\n","sig":null,"attributes":[{"value":"/ Creates a `CardMask` with all values set to `false`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28846,"byte_end":28902,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28907,"byte_end":28916,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":29081,"byte_end":29085,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"full","qualname":"<CardMask>::full","value":"pub fn full() -> CardMask","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CardMask` with all values set to `true`.\n","sig":null,"attributes":[{"value":"/ Creates a `CardMask` with all values set to `true`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":29000,"byte_end":29055,"line_start":64,"line_end":64,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":29060,"byte_end":29069,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":49579,"byte_end":49587,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"Collider","qualname":"::core::collider::Collider","value":"Collider {  }","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"decl_id":null,"docs":" A structure that tracks hitboxes and returns collide/separate events.","sig":null,"attributes":[{"value":"/ A structure that tracks hitboxes and returns collide/separate events.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":49369,"byte_end":49442,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":49443,"byte_end":49446,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Collider manages events using a \"simulation time\" that the user updates as necessary.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":49447,"byte_end":49536,"line_start":28,"line_end":28,"column_start":1,"column_end":90}},{"value":"/ This time starts at `0.0`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":49537,"byte_end":49567,"line_start":29,"line_end":29,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":49819,"byte_end":49822,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Collider<P>>::new","value":"pub fn new() -> Collider<P>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Collider` instance.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Collider` instance.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":49766,"byte_end":49807,"line_start":39,"line_end":39,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":50326,"byte_end":50330,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"time","qualname":"<Collider<P>>::time","value":"pub fn time(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current simulation time.\n","sig":null,"attributes":[{"value":"/ Returns the current simulation time.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":50274,"byte_end":50314,"line_start":54,"line_end":54,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":50876,"byte_end":50885,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"next_time","qualname":"<Collider<P>>::next_time","value":"pub fn next_time(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the time at which `self.next()` needs to be called again.","sig":null,"attributes":[{"value":"/ Returns the time at which `self.next()` needs to be called again.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":50376,"byte_end":50445,"line_start":59,"line_end":59,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":50450,"byte_end":50453,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Even if `self.next_time() == self.time()`, there is a chance that","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":50458,"byte_end":50527,"line_start":61,"line_end":61,"column_start":5,"column_end":74}},{"value":"/ calling `self.next()` will return `None`, having processed an internal event.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":50532,"byte_end":50613,"line_start":62,"line_end":62,"column_start":5,"column_end":86}},{"value":"/ Regardless, after `self.next()` has been called repeatedly until it","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":50618,"byte_end":50689,"line_start":63,"line_end":63,"column_start":5,"column_end":76}},{"value":"/ returns `None`, then `self.next_time()` will be greater than `self.time()` again.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":50694,"byte_end":50779,"line_start":64,"line_end":64,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":50784,"byte_end":50787,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This is a fast constant-time operation.  The result may be infinity.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":50792,"byte_end":50864,"line_start":66,"line_end":66,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51371,"byte_end":51379,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"set_time","qualname":"<Collider<P>>::set_time","value":"pub fn set_time(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":" Advances the simulation time to the given value.","sig":null,"attributes":[{"value":"/ Advances the simulation time to the given value.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":50945,"byte_end":50997,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51002,"byte_end":51005,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The positions of all hitboxes will be updated based on the velocities of the hitboxes.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51010,"byte_end":51100,"line_start":73,"line_end":73,"column_start":5,"column_end":95}},{"value":"/ Will panic if `time` exceeds `self.next_time()`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51105,"byte_end":51157,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/ Will also panic if `time` is less than `self.time()` (i.e. cannot rewind time).","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51162,"byte_end":51245,"line_start":75,"line_end":75,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51250,"byte_end":51253,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The hitboxes are updated implicitly, and this is actually a","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51258,"byte_end":51321,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ fast constant-time operation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51326,"byte_end":51359,"line_start":78,"line_end":78,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":52147,"byte_end":52151,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"next","qualname":"<Collider<P>>::next","value":"pub fn next(&mut Self) -> Option<(HbEvent, P, P)>","parent":null,"children":[],"decl_id":null,"docs":" Processes and returns the next `Collide` or `Separate` event,\n or returns `None` if there are no more events that occured at the given time\n (although an internal event might have been processed if `None` is returned).\n Will always return `None` if `self.next_time() > self.time()`.","sig":null,"attributes":[{"value":"/ Processes and returns the next `Collide` or `Separate` event,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51651,"byte_end":51716,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"/ or returns `None` if there are no more events that occured at the given time","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51721,"byte_end":51801,"line_start":87,"line_end":87,"column_start":5,"column_end":85}},{"value":"/ (although an internal event might have been processed if `None` is returned).","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51806,"byte_end":51887,"line_start":88,"line_end":88,"column_start":5,"column_end":86}},{"value":"/ Will always return `None` if `self.next_time() > self.time()`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51892,"byte_end":51958,"line_start":89,"line_end":89,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51963,"byte_end":51966,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The returned value is a tuple, denoting the type of event (`Collide` or `Separate`)","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":51971,"byte_end":52058,"line_start":91,"line_end":91,"column_start":5,"column_end":92}},{"value":"/ and the two hitbox profiles involved, in increasing order by `HbId`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":52063,"byte_end":52135,"line_start":92,"line_end":92,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":55155,"byte_end":55165,"line_start":152,"line_end":152,"column_start":12,"column_end":22},"name":"get_hitbox","qualname":"<Collider<P>>::get_hitbox","value":"pub fn get_hitbox(&Self, HbId) -> Hitbox","parent":null,"children":[],"decl_id":null,"docs":" Returns the current state of the hitbox with the given `id`.\n","sig":null,"attributes":[{"value":"/ Returns the current state of the hitbox with the given `id`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":55079,"byte_end":55143,"line_start":151,"line_end":151,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":55827,"byte_end":55837,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"add_hitbox","qualname":"<Collider<P>>::add_hitbox","value":"pub fn add_hitbox(&mut Self, P, Hitbox) -> Vec<P>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new hitbox to the collider.","sig":null,"attributes":[{"value":"/ Adds a new hitbox to the collider.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":55263,"byte_end":55301,"line_start":156,"line_end":156,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":55306,"byte_end":55309,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The `profile` is used to track the hitbox over time;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":55314,"byte_end":55370,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/ Collider will return this profile in certain methods,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":55375,"byte_end":55432,"line_start":159,"line_end":159,"column_start":5,"column_end":62}},{"value":"/ and the ID in this profile can be used to make updates to the hitbox.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":55437,"byte_end":55510,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/ This method will panic if there is an ID clash.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":55515,"byte_end":55566,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/ `hitbox` is the initial state of the hitbox.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":55571,"byte_end":55619,"line_start":162,"line_end":162,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":55624,"byte_end":55627,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Returns a vector of all hitbox profiles that this new hitbox collided with as it was added.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":55632,"byte_end":55727,"line_start":164,"line_end":164,"column_start":5,"column_end":100}},{"value":"/ Note that separate collision events will not be generated for these collisions.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":55732,"byte_end":55815,"line_start":165,"line_end":165,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":56372,"byte_end":56386,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"set_hitbox_vel","qualname":"<Collider<P>>::set_hitbox_vel","value":"pub fn set_hitbox_vel(&mut Self, HbId, HbVel)","parent":null,"children":[],"decl_id":null,"docs":" Updates the velocity information of the hitbox with the given `id`.\n","sig":null,"attributes":[{"value":"/ Updates the velocity information of the hitbox with the given `id`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":56289,"byte_end":56360,"line_start":176,"line_end":176,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":57672,"byte_end":57685,"line_start":204,"line_end":204,"column_start":12,"column_end":25},"name":"remove_hitbox","qualname":"<Collider<P>>::remove_hitbox","value":"pub fn remove_hitbox(&mut Self, HbId) -> Vec<P>","parent":null,"children":[],"decl_id":null,"docs":" Removes the hitbox with the given `id` from all tracking.","sig":null,"attributes":[{"value":"/ Removes the hitbox with the given `id` from all tracking.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":57431,"byte_end":57492,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":57497,"byte_end":57500,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Returns a vector of all hitbox profiles that this hitbox separated from as it was removed.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":57505,"byte_end":57599,"line_start":202,"line_end":202,"column_start":5,"column_end":99}},{"value":"/ No further events will be generated for this hitbox.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":57604,"byte_end":57660,"line_start":203,"line_end":203,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":58392,"byte_end":58404,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"get_overlaps","qualname":"<Collider<P>>::get_overlaps","value":"pub fn get_overlaps(&Self, HbId) -> Vec<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns the profiles of all currently tracked overlaps on the hitbox with the given `id`.\n","sig":null,"attributes":[{"value":"/ Returns the profiles of all currently tracked overlaps on the hitbox with the given `id`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":58287,"byte_end":58380,"line_start":217,"line_end":217,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":58788,"byte_end":58802,"line_start":226,"line_end":226,"column_start":12,"column_end":26},"name":"is_overlapping","qualname":"<Collider<P>>::is_overlapping","value":"pub fn is_overlapping(&Self, HbId, HbId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there is a currently tracked overlap between the hitboxes with `id_1` and `id_2`.\n","sig":null,"attributes":[{"value":"/ Returns true if there is a currently tracked overlap between the hitboxes with `id_1` and `id_2`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":58675,"byte_end":58776,"line_start":225,"line_end":225,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":59113,"byte_end":59127,"line_start":233,"line_end":233,"column_start":12,"column_end":26},"name":"query_overlaps","qualname":"<Collider<P>>::query_overlaps","value":"pub fn query_overlaps(&Self, &PlacedShape, &P) -> Vec<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns the profiles of all hitboxes that overlap the given `shape` and interact with the given `profile`.\n","sig":null,"attributes":[{"value":"/ Returns the profiles of all hitboxes that overlap the given `shape` and interact with the given `profile`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":58991,"byte_end":59101,"line_start":232,"line_end":232,"column_start":5,"column_end":115}}]},{"kind":"TupleVariant","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":64994,"byte_end":65001,"line_start":358,"line_end":358,"column_start":5,"column_end":12},"name":"Collide","qualname":"::core::collider::HbEvent::Collide","value":"HbEvent::Collide","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" Occurs when two hitboxes collide\n","sig":null,"attributes":[{"value":"/ Occurs when two hitboxes collide","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":64953,"byte_end":64989,"line_start":357,"line_end":357,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":65205,"byte_end":65213,"line_start":364,"line_end":364,"column_start":5,"column_end":13},"name":"Separate","qualname":"::core::collider::HbEvent::Separate","value":"HbEvent::Separate","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" Occurs when two hitboxes separate.","sig":null,"attributes":[{"value":"/ Occurs when two hitboxes separate.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":65008,"byte_end":65046,"line_start":360,"line_end":360,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":65051,"byte_end":65054,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ A second `Collide` betweent two hitboxes may not occur before a `Separate`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":65059,"byte_end":65138,"line_start":362,"line_end":362,"column_start":5,"column_end":84}},{"value":"/ A `Separate` event must come after a `Collide` event.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":65143,"byte_end":65200,"line_start":363,"line_end":363,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":64939,"byte_end":64946,"line_start":356,"line_end":356,"column_start":10,"column_end":17},"name":"HbEvent","qualname":"::core::collider::HbEvent","value":"pub enum HbEvent { Collide, Separate, }","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":814}],"decl_id":null,"docs":" A hitbox event type that may be returned from a `Collider` instance.\n","sig":null,"attributes":[{"value":"/ A hitbox event type that may be returned from a `Collider` instance.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":64806,"byte_end":64878,"line_start":354,"line_end":354,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":35357,"byte_end":35361,"line_start":31,"line_end":31,"column_start":10,"column_end":14},"name":"HbId","qualname":"::core::HbId","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Type used as a handle for referencing hitboxes in a `Collider` instance.\n","sig":null,"attributes":[{"value":"/ Type used as a handle for referencing hitboxes in a `Collider` instance.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":35271,"byte_end":35347,"line_start":30,"line_end":30,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":35494,"byte_end":35499,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"HbVel","qualname":"::core::HbVel","value":"HbVel { value, resize, end_time }","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871}],"decl_id":null,"docs":" Velocity information describing how a hitbox shape is changing over time.\n","sig":null,"attributes":[{"value":"/ Velocity information describing how a hitbox shape is changing over time.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":35370,"byte_end":35447,"line_start":33,"line_end":33,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":35555,"byte_end":35560,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"name":"value","qualname":"::core::HbVel::value","value":"geom::vec::Vec2","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" The movement velocity of the hitbox.\n","sig":null,"attributes":[{"value":"/ The movement velocity of the hitbox.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":35506,"byte_end":35546,"line_start":36,"line_end":36,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":35990,"byte_end":35996,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"name":"resize","qualname":"::core::HbVel::resize","value":"geom::vec::Vec2","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" A velocity describing how the hitbox dims are changing over time.","sig":null,"attributes":[{"value":"/ A velocity describing how the hitbox dims are changing over time.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":35573,"byte_end":35642,"line_start":39,"line_end":39,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":35647,"byte_end":35650,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Since the width and height of the shape is greater than `padding` at all times,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":35655,"byte_end":35738,"line_start":41,"line_end":41,"column_start":5,"column_end":88}},{"value":"/ if a resize velocity is set that decreases the dimensions of the shape over time,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":35743,"byte_end":35828,"line_start":42,"line_end":42,"column_start":5,"column_end":90}},{"value":"/ then the user is responsible for ensuring that the shape will not decrease below this threshold.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":35833,"byte_end":35933,"line_start":43,"line_end":43,"column_start":5,"column_end":105}},{"value":"/ Collider may panic if this is violated.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":35938,"byte_end":35981,"line_start":44,"line_end":44,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36493,"byte_end":36501,"line_start":55,"line_end":55,"column_start":9,"column_end":17},"name":"end_time","qualname":"::core::HbVel::end_time","value":"f64","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" An upper-bound on the time at which the hitbox will be updated by the user.","sig":null,"attributes":[{"value":"/ An upper-bound on the time at which the hitbox will be updated by the user.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36009,"byte_end":36088,"line_start":47,"line_end":47,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36093,"byte_end":36096,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This is an advanced feature for efficiency and does not impact the results.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36101,"byte_end":36180,"line_start":49,"line_end":49,"column_start":5,"column_end":84}},{"value":"/ Infinity is used as the default, but using a lower value may improve performance","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36185,"byte_end":36269,"line_start":50,"line_end":50,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36274,"byte_end":36277,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Collider will panic if the end time is exceeded without update,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36282,"byte_end":36349,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ at least in unoptimized builds.  It is ultimately the user's responsibility","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36354,"byte_end":36433,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ to ensure that end times are not exceeded.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36438,"byte_end":36484,"line_start":54,"line_end":54,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36600,"byte_end":36606,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"moving","qualname":"<HbVel>::moving","value":"pub fn moving(Vec2) -> HbVel","parent":null,"children":[],"decl_id":null,"docs":" Creates an `HbVel` with the given `value`.\n","sig":null,"attributes":[{"value":"/ Creates an `HbVel` with the given `value`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36528,"byte_end":36574,"line_start":59,"line_end":59,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36579,"byte_end":36588,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36800,"byte_end":36812,"line_start":67,"line_end":67,"column_start":12,"column_end":24},"name":"moving_until","qualname":"<HbVel>::moving_until","value":"pub fn moving_until(Vec2, f64) -> HbVel","parent":null,"children":[],"decl_id":null,"docs":" Creates an `HbVel` with the given `value` and `end_time`.\n","sig":null,"attributes":[{"value":"/ Creates an `HbVel` with the given `value` and `end_time`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36713,"byte_end":36774,"line_start":65,"line_end":65,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36779,"byte_end":36788,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36978,"byte_end":36983,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"still","qualname":"<HbVel>::still","value":"pub fn still() -> HbVel","parent":null,"children":[],"decl_id":null,"docs":" Creates a stationary `HbVel`.\n","sig":null,"attributes":[{"value":"/ Creates a stationary `HbVel`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36919,"byte_end":36952,"line_start":71,"line_end":71,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36957,"byte_end":36966,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37178,"byte_end":37189,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"still_until","qualname":"<HbVel>::still_until","value":"pub fn still_until(f64) -> HbVel","parent":null,"children":[],"decl_id":null,"docs":" Creates a stationary `HbVel` with the given `end_time`.\n","sig":null,"attributes":[{"value":"/ Creates a stationary `HbVel` with the given `end_time`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37093,"byte_end":37152,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37157,"byte_end":37166,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37633,"byte_end":37639,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"Hitbox","qualname":"::core::Hitbox","value":"Hitbox { value, vel }","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"decl_id":null,"docs":" Represents a moving shape for continuous collision testing.\n","sig":null,"attributes":[{"value":"/ Represents a moving shape for continuous collision testing.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37523,"byte_end":37586,"line_start":93,"line_end":93,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37798,"byte_end":37803,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"value","qualname":"::core::Hitbox::value","value":"geom::shape::PlacedShape","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" The placed shape at the given point in time.","sig":null,"attributes":[{"value":"/ The placed shape at the given point in time.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37646,"byte_end":37694,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37699,"byte_end":37702,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The width and height of the shape must be greater than `padding` at all times.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37707,"byte_end":37789,"line_start":98,"line_end":98,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37911,"byte_end":37914,"line_start":102,"line_end":102,"column_start":9,"column_end":12},"name":"vel","qualname":"::core::Hitbox::vel","value":"core::HbVel","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" Velocity information describing how the hitbox shape is changing over time.\n","sig":null,"attributes":[{"value":"/ Velocity information describing how the hitbox shape is changing over time.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37823,"byte_end":37902,"line_start":101,"line_end":101,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":38157,"byte_end":38160,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"new","qualname":"<Hitbox>::new","value":"pub fn new(PlacedShape, HbVel) -> Hitbox","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new hitbox with the given `value` and `vel`.\n","sig":null,"attributes":[{"value":"/ Constructs a new hitbox with the given `value` and `vel`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":38070,"byte_end":38131,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":38136,"byte_end":38145,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40317,"byte_end":40324,"line_start":157,"line_end":157,"column_start":10,"column_end":17},"name":"HbGroup","qualname":"::core::HbGroup","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" A group id that may be used as a first measure to efficiently filter out hitboxes that don't interact.","sig":null,"attributes":[{"value":"/ A group id that may be used as a first measure to efficiently filter out hitboxes that don't interact.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":39740,"byte_end":39846,"line_start":149,"line_end":149,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":39847,"byte_end":39850,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The total number of groups used should in general be very small.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":39851,"byte_end":39919,"line_start":151,"line_end":151,"column_start":1,"column_end":69}},{"value":"/ Often 1 is enough, and 10 is excessive.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":39920,"byte_end":39963,"line_start":152,"line_end":152,"column_start":1,"column_end":44}},{"value":"/ As an example, in a [danmaku](https://en.wikipedia.org/wiki/Shoot_%27em_up#Bullet_hell_and_niche_appeal) game","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":39964,"byte_end":40077,"line_start":153,"line_end":153,"column_start":1,"column_end":114}},{"value":"/ (which has many bullets on screen that do not interact with each other),","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40078,"byte_end":40154,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"/ we may use one group for bullets and one group for everything else,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40155,"byte_end":40226,"line_start":155,"line_end":155,"column_start":1,"column_end":72}},{"value":"/ to avoid the quadratic cost of comparing all nearby bullets with each other.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40227,"byte_end":40307,"line_start":156,"line_end":156,"column_start":1,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40813,"byte_end":40822,"line_start":167,"line_end":167,"column_start":11,"column_end":20},"name":"HbProfile","qualname":"::core::HbProfile","value":"HbProfile: Copy","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632}],"decl_id":null,"docs":" A trait that holds metadata for describing a hitbox.","sig":null,"attributes":[{"value":"/ A trait that holds metadata for describing a hitbox.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40377,"byte_end":40433,"line_start":161,"line_end":161,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40434,"byte_end":40437,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ A user of `Collider` will need to implement an HbProfile that best suites their needs in a game.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40438,"byte_end":40538,"line_start":163,"line_end":163,"column_start":1,"column_end":101}},{"value":"/ The most basic HbProfile will just contain an integer ID for the hitbox,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40539,"byte_end":40615,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ but a user may define additional metadata for identfying the hitbox and describing interactivity.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40616,"byte_end":40717,"line_start":165,"line_end":165,"column_start":1,"column_end":102}},{"value":"/ An HbProfile must implement the `Copy` trait and should not take up much memory.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40718,"byte_end":40802,"line_start":166,"line_end":166,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41022,"byte_end":41024,"line_start":172,"line_end":172,"column_start":8,"column_end":10},"name":"id","qualname":"::core::HbProfile::id","value":"pub fn id(&Self) -> HbId","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" A unique identifier for the hitbox.","sig":null,"attributes":[{"value":"/ A unique identifier for the hitbox.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40835,"byte_end":40874,"line_start":168,"line_end":168,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40879,"byte_end":40882,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Trying to have multiple hitboxes with the same `id` to a `Collider` instance simultaneously","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40887,"byte_end":40982,"line_start":170,"line_end":170,"column_start":5,"column_end":100}},{"value":"/ will result in a panic.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40987,"byte_end":41014,"line_start":171,"line_end":171,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41243,"byte_end":41248,"line_start":179,"line_end":179,"column_start":8,"column_end":13},"name":"group","qualname":"::core::HbProfile::group","value":"pub fn group(&Self) -> Option<HbGroup>","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Returns the group id associated with the hitbox.\n Default is `Some(0)`.","sig":null,"attributes":[{"value":"/ Returns the group id associated with the hitbox.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41046,"byte_end":41098,"line_start":174,"line_end":174,"column_start":5,"column_end":57}},{"value":"/ Default is `Some(0)`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41103,"byte_end":41128,"line_start":175,"line_end":175,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41133,"byte_end":41136,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ If `None` is returned, then no collisions will be reported","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41141,"byte_end":41203,"line_start":177,"line_end":177,"column_start":5,"column_end":67}},{"value":"/ for this hitbox at all.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41208,"byte_end":41235,"line_start":178,"line_end":178,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41454,"byte_end":41469,"line_start":185,"line_end":185,"column_start":8,"column_end":23},"name":"interact_groups","qualname":"::core::HbProfile::interact_groups","value":"pub fn interact_groups(&Self) -> &'static [HbGroup]","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Returns a list of groups that this hitbox can interact with.\n Default is `[0]`.","sig":null,"attributes":[{"value":"/ Returns a list of groups that this hitbox can interact with.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41292,"byte_end":41356,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/ Default is `[0]`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41361,"byte_end":41382,"line_start":182,"line_end":182,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41387,"byte_end":41390,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Using large lists of groups may be inefficient.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41395,"byte_end":41446,"line_start":184,"line_end":184,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41778,"byte_end":41790,"line_start":192,"line_end":192,"column_start":8,"column_end":20},"name":"can_interact","qualname":"::core::HbProfile::can_interact","value":"pub fn can_interact(&Self, &Self) -> bool","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Returns true if the pair of hitboxes should be checked for collisions.","sig":null,"attributes":[{"value":"/ Returns true if the pair of hitboxes should be checked for collisions.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41524,"byte_end":41598,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41603,"byte_end":41606,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This method should be commutative.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41611,"byte_end":41649,"line_start":189,"line_end":189,"column_start":5,"column_end":43}},{"value":"/ This method should be consistent with `group` and `interact_groups`,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41654,"byte_end":41726,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ although possibly more restrictive.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41731,"byte_end":41770,"line_start":191,"line_end":191,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42334,"byte_end":42344,"line_start":203,"line_end":203,"column_start":8,"column_end":18},"name":"cell_width","qualname":"::core::HbProfile::cell_width","value":"pub fn cell_width() -> f64","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" The width of the cells used in the Collider grid.","sig":null,"attributes":[{"value":"/ The width of the cells used in the Collider grid.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41826,"byte_end":41879,"line_start":194,"line_end":194,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41884,"byte_end":41887,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ To reduce the number of overlaps that are tested,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41892,"byte_end":41945,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ hitboxes are placed in a sparse grid structure behind the scenes.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":41950,"byte_end":42019,"line_start":197,"line_end":197,"column_start":5,"column_end":74}},{"value":"/ `cell_width` is the width of the cells used in that grid.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42024,"byte_end":42085,"line_start":198,"line_end":198,"column_start":5,"column_end":66}},{"value":"/ If your game has a similar grid concept, then it is usually a good choice","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42090,"byte_end":42167,"line_start":199,"line_end":199,"column_start":5,"column_end":82}},{"value":"/ to use the same cell width as that grid.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42172,"byte_end":42216,"line_start":200,"line_end":200,"column_start":5,"column_end":49}},{"value":"/ Otherwise, a good choice is to use a width that is slightly larger","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42221,"byte_end":42291,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ than most of the hitboxes.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42296,"byte_end":42326,"line_start":202,"line_end":202,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":43196,"byte_end":43203,"line_start":219,"line_end":219,"column_start":8,"column_end":15},"name":"padding","qualname":"::core::HbProfile::padding","value":"pub fn padding() -> f64","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" The minimum distance before two hitboxes are considered separated.","sig":null,"attributes":[{"value":"/ The minimum distance before two hitboxes are considered separated.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42360,"byte_end":42430,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42435,"byte_end":42438,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Collider generates both `Collide` and `Separate` events.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42443,"byte_end":42503,"line_start":207,"line_end":207,"column_start":5,"column_end":65}},{"value":"/ However, due to numerical error, it is important that two hitboxes","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42508,"byte_end":42578,"line_start":208,"line_end":208,"column_start":5,"column_end":75}},{"value":"/ be a certain small distance apart from each other after a collision","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42583,"byte_end":42654,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ before they are considered separated.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42659,"byte_end":42700,"line_start":210,"line_end":210,"column_start":5,"column_end":46}},{"value":"/ Otherwise, false separation events may occur if, for example,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42705,"byte_end":42770,"line_start":211,"line_end":211,"column_start":5,"column_end":70}},{"value":"/ a sprite runs into a wall and stops, still touching the wall.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42775,"byte_end":42840,"line_start":212,"line_end":212,"column_start":5,"column_end":70}},{"value":"/ `padding` is used to describe what this minimum separation distance is.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42845,"byte_end":42920,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ This should typically be something that is not visible to the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42925,"byte_end":42990,"line_start":214,"line_end":214,"column_start":5,"column_end":70}},{"value":"/ user, perhaps a fraction of a \"pixel.\"","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":42995,"byte_end":43037,"line_start":215,"line_end":215,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":43042,"byte_end":43045,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Another restriction introduced by `padding` is that hitboxes are not","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":43050,"byte_end":43122,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ allowed to have a width or height smaller than `padding`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":43127,"byte_end":43188,"line_start":218,"line_end":218,"column_start":5,"column_end":66}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\float.rs","byte_start":5397,"byte_end":5400,"line_start":27,"line_end":27,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\float.rs","byte_start":5530,"byte_end":5533,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\float.rs","byte_start":5552,"byte_end":5555,"line_start":36,"line_end":36,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7672,"byte_end":7677,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9691,"byte_end":9702,"line_start":110,"line_end":110,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":16882,"byte_end":16893,"line_start":286,"line_end":286,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":17321,"byte_end":17327,"line_start":307,"line_end":307,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22125,"byte_end":22129,"line_start":27,"line_end":27,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":24445,"byte_end":24449,"line_start":99,"line_end":99,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":24592,"byte_end":24596,"line_start":106,"line_end":106,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":24714,"byte_end":24718,"line_start":113,"line_end":113,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":24839,"byte_end":24843,"line_start":120,"line_end":120,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":24986,"byte_end":24990,"line_start":127,"line_end":127,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25107,"byte_end":25111,"line_start":134,"line_end":134,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25254,"byte_end":25258,"line_start":141,"line_end":141,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25375,"byte_end":25379,"line_start":148,"line_end":148,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25498,"byte_end":25502,"line_start":155,"line_end":155,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26369,"byte_end":26376,"line_start":186,"line_end":186,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":27072,"byte_end":27076,"line_start":212,"line_end":212,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28189,"byte_end":28193,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28830,"byte_end":28838,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":29479,"byte_end":29487,"line_start":80,"line_end":80,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":29646,"byte_end":29654,"line_start":88,"line_end":88,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":29809,"byte_end":29817,"line_start":97,"line_end":97,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":29954,"byte_end":29962,"line_start":104,"line_end":104,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\util.rs","byte_start":31541,"byte_end":31549,"line_start":42,"line_end":42,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\util.rs","byte_start":32961,"byte_end":32969,"line_start":95,"line_end":95,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\util.rs","byte_start":33502,"byte_end":33506,"line_start":114,"line_end":114,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\grid.rs","byte_start":44446,"byte_end":44454,"line_start":42,"line_end":42,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\grid.rs","byte_start":44670,"byte_end":44674,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":49748,"byte_end":49756,"line_start":38,"line_end":38,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":63450,"byte_end":63460,"line_start":311,"line_end":311,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":63818,"byte_end":63828,"line_start":326,"line_end":326,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":66518,"byte_end":66526,"line_start":34,"line_end":34,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":66603,"byte_end":66611,"line_start":40,"line_end":40,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":66710,"byte_end":66718,"line_start":46,"line_end":46,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":66738,"byte_end":66746,"line_start":48,"line_end":48,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":66856,"byte_end":66864,"line_start":54,"line_end":54,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":66981,"byte_end":66989,"line_start":60,"line_end":60,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":67536,"byte_end":67549,"line_start":83,"line_end":83,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":68152,"byte_end":68164,"line_start":102,"line_end":102,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\dur_hitbox\\mod.rs","byte_start":71616,"byte_end":71624,"line_start":34,"line_end":34,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\dur_hitbox\\mod.rs","byte_start":72104,"byte_end":72112,"line_start":56,"line_end":56,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\dur_hitbox\\mod.rs","byte_start":72322,"byte_end":72331,"line_start":67,"line_end":67,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36516,"byte_end":36521,"line_start":58,"line_end":58,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37315,"byte_end":37320,"line_start":84,"line_end":84,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37407,"byte_end":37412,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":38057,"byte_end":38063,"line_start":107,"line_end":107,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\index_rect.rs","byte_start":86160,"byte_end":86169,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\index_rect.rs","byte_start":86722,"byte_end":86726,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\index_rect.rs","byte_start":86835,"byte_end":86839,"line_start":50,"line_end":50,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\lib.rs","byte_start":4477,"byte_end":4481,"line_start":95,"line_end":95,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":17}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\float.rs","byte_start":5397,"byte_end":5400,"line_start":27,"line_end":27,"column_start":6,"column_end":9},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\float.rs","byte_start":5530,"byte_end":5533,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":2660}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\float.rs","byte_start":5552,"byte_end":5555,"line_start":36,"line_end":36,"column_start":14,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":2691}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":7672,"byte_end":7677,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":9691,"byte_end":9702,"line_start":110,"line_end":110,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":16882,"byte_end":16893,"line_start":286,"line_end":286,"column_start":23,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":691},"to":{"krate":0,"index":106}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\shape\\mod.rs","byte_start":17321,"byte_end":17327,"line_start":307,"line_end":307,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":22125,"byte_end":22129,"line_start":27,"line_end":27,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":24445,"byte_end":24449,"line_start":99,"line_end":99,"column_start":19,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3081}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":24592,"byte_end":24596,"line_start":106,"line_end":106,"column_start":25,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3110}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":24714,"byte_end":24718,"line_start":113,"line_end":113,"column_start":20,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3081}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":24839,"byte_end":24843,"line_start":120,"line_end":120,"column_start":14,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3071}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":24986,"byte_end":24990,"line_start":127,"line_end":127,"column_start":20,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3102}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25107,"byte_end":25111,"line_start":134,"line_end":134,"column_start":14,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3076}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25254,"byte_end":25258,"line_start":141,"line_end":141,"column_start":20,"column_end":24},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3106}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25375,"byte_end":25379,"line_start":148,"line_end":148,"column_start":14,"column_end":18},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":25498,"byte_end":25502,"line_start":155,"line_end":155,"column_start":21,"column_end":25},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":26369,"byte_end":26376,"line_start":186,"line_end":186,"column_start":6,"column_end":13},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\vec.rs","byte_start":27072,"byte_end":27076,"line_start":212,"line_end":212,"column_start":24,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28189,"byte_end":28193,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":28830,"byte_end":28838,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":29479,"byte_end":29487,"line_start":80,"line_end":80,"column_start":21,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":765},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":29646,"byte_end":29654,"line_start":88,"line_end":88,"column_start":22,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":765},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":29809,"byte_end":29817,"line_start":97,"line_end":97,"column_start":25,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":765},"to":{"krate":2,"index":3304}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\geom\\card.rs","byte_start":29954,"byte_end":29962,"line_start":104,"line_end":104,"column_start":16,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":765},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\util.rs","byte_start":31541,"byte_end":31549,"line_start":42,"line_end":42,"column_start":21,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\util.rs","byte_start":32961,"byte_end":32969,"line_start":95,"line_end":95,"column_start":25,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\util.rs","byte_start":33502,"byte_end":33506,"line_start":114,"line_end":114,"column_start":38,"column_end":42},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":294},"to":{"krate":2,"index":7607}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\grid.rs","byte_start":44446,"byte_end":44454,"line_start":42,"line_end":42,"column_start":6,"column_end":14},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\grid.rs","byte_start":44670,"byte_end":44674,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":49748,"byte_end":49756,"line_start":38,"line_end":38,"column_start":21,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":63450,"byte_end":63460,"line_start":311,"line_end":311,"column_start":38,"column_end":48},"kind":{"Impl":{"id":32}},"from":{"krate":14,"index":31},"to":{"krate":0,"index":518}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\collider.rs","byte_start":63818,"byte_end":63828,"line_start":326,"line_end":326,"column_start":21,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":66518,"byte_end":66526,"line_start":34,"line_end":34,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":66603,"byte_end":66611,"line_start":40,"line_end":40,"column_start":20,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":830},"to":{"krate":2,"index":2655}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":66710,"byte_end":66718,"line_start":46,"line_end":46,"column_start":13,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":830},"to":{"krate":2,"index":2660}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":66738,"byte_end":66746,"line_start":48,"line_end":48,"column_start":15,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":830},"to":{"krate":2,"index":9556}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":66856,"byte_end":66864,"line_start":54,"line_end":54,"column_start":21,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":830},"to":{"krate":2,"index":2702}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":66981,"byte_end":66989,"line_start":60,"line_end":60,"column_start":14,"column_end":22},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":830},"to":{"krate":2,"index":2691}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":67536,"byte_end":67549,"line_start":83,"line_end":83,"column_start":6,"column_end":19},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\events.rs","byte_start":68152,"byte_end":68164,"line_start":102,"line_end":102,"column_start":6,"column_end":18},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\dur_hitbox\\mod.rs","byte_start":71616,"byte_end":71624,"line_start":34,"line_end":34,"column_start":6,"column_end":14},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\dur_hitbox\\mod.rs","byte_start":72104,"byte_end":72112,"line_start":56,"line_end":56,"column_start":23,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":857},"to":{"krate":0,"index":106}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\dur_hitbox\\mod.rs","byte_start":72322,"byte_end":72331,"line_start":67,"line_end":67,"column_start":6,"column_end":15},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":36516,"byte_end":36521,"line_start":58,"line_end":58,"column_start":6,"column_end":11},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37315,"byte_end":37320,"line_start":84,"line_end":84,"column_start":21,"column_end":26},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":37407,"byte_end":37412,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":868},"to":{"krate":0,"index":106}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":38057,"byte_end":38063,"line_start":107,"line_end":107,"column_start":6,"column_end":12},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\core\\mod.rs","byte_start":40824,"byte_end":40828,"line_start":167,"line_end":167,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3014},"to":{"krate":0,"index":626}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\index_rect.rs","byte_start":86160,"byte_end":86169,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\index_rect.rs","byte_start":86722,"byte_end":86726,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\collider-0.3.1\\src\\index_rect.rs","byte_start":86835,"byte_end":86839,"line_start":50,"line_end":50,"column_start":19,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":638},"to":{"krate":2,"index":7607}}]}