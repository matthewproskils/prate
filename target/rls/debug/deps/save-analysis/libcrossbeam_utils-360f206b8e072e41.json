{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0","program":"C:\\Users\\matth\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","crossbeam_utils","C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=360f206b8e072e41","-C","extra-filename=-360f206b8e072e41","--out-dir","c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps\\libcfg_if-304084854ce48427.rmeta","--extern","lazy_static=c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps\\liblazy_static-cf0478a2c0b8c8f8.rmeta","--cap-lints","allow","--cfg","has_min_const_fn","--error-format=json","--sysroot","C:\\Users\\matth\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\matth\\Documents\\_Coding\\Rust\\prate\\target\\rls\\debug\\deps\\libcrossbeam_utils-360f206b8e072e41.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_utils","disambiguator":[6747111443886126206,0]},"crate_root":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src","external_crates":[{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10096348926132587111,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[6130085985959571423,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10834538756664496827,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16052532455530240381,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9943859611570948275,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2085945775536176072,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9544986399897469044,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17772512906340842432,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2307131819628043677,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8458190703300588207,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5770881746596919874,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[9756748775720564409,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[13144887679811945557,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[4503890005825602928,0]}},{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","num":15,"id":{"name":"lazy_static","disambiguator":[3944360065909552950,0]}}],"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":0,"byte_end":1823,"line_start":1,"line_end":64,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\mod.rs","byte_start":2601,"byte_end":2611,"line_start":24,"line_end":24,"column_start":28,"column_end":38},"alias_span":null,"name":"AtomicCell","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\mod.rs","byte_start":2636,"byte_end":2649,"line_start":25,"line_end":25,"column_start":24,"column_end":37},"alias_span":null,"name":"AtomicConsume","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":1617,"byte_end":1628,"line_start":51,"line_end":51,"column_start":23,"column_end":34},"alias_span":null,"name":"CachePadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":1661,"byte_end":1668,"line_start":54,"line_end":54,"column_start":18,"column_end":25},"alias_span":null,"name":"Backoff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12424177,"byte_end":12424188,"line_start":15,"line_end":15,"column_start":30,"column_end":41},"alias_span":null,"name":"ShardedLock","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12424190,"byte_end":12424210,"line_start":15,"line_end":15,"column_start":43,"column_end":63},"alias_span":null,"name":"ShardedLockReadGuard","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12424212,"byte_end":12424233,"line_start":15,"line_end":15,"column_start":65,"column_end":86},"alias_span":null,"name":"ShardedLockWriteGuard","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12424259,"byte_end":12424265,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"alias_span":null,"name":"Parker","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12424267,"byte_end":12424275,"line_start":16,"line_end":16,"column_start":32,"column_end":40},"alias_span":null,"name":"Unparker","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12424304,"byte_end":12424313,"line_start":17,"line_end":17,"column_start":27,"column_end":36},"alias_span":null,"name":"WaitGroup","value":"","parent":{"krate":0,"index":327}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":0,"byte_end":1823,"line_start":1,"line_end":64,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":189},{"krate":0,"index":5},{"krate":0,"index":126},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":186},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":603}],"decl_id":null,"docs":" Miscellaneous tools for concurrent programming.","sig":null,"attributes":[{"value":"/ Miscellaneous tools for concurrent programming.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":52,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Atomics","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":56,"byte_end":70,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":71,"byte_end":74,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":75,"byte_end":135,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":136,"byte_end":225,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":226,"byte_end":229,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Thread synchronization","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":230,"byte_end":259,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":260,"byte_end":263,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":264,"byte_end":309,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":310,"byte_end":389,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":390,"byte_end":470,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":471,"byte_end":474,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Utilities","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":475,"byte_end":491,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":492,"byte_end":495,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [`Backoff`], for exponential backoff in spin loops.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":496,"byte_end":553,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ * [`CachePadded`], for padding and aligning a value to the length of a cache line.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":554,"byte_end":640,"line_start":17,"line_end":17,"column_start":1,"column_end":87}},{"value":"/ * [`scope`], for spawning threads that borrow local variables from the stack.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":641,"byte_end":722,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":723,"byte_end":726,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AtomicCell`]: atomic/struct.AtomicCell.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":727,"byte_end":776,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ [`AtomicConsume`]: atomic/trait.AtomicConsume.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":777,"byte_end":831,"line_start":21,"line_end":21,"column_start":1,"column_end":55}},{"value":"/ [`Parker`]: sync/struct.Parker.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":832,"byte_end":871,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/ [`ShardedLock`]: sync/struct.ShardedLock.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":872,"byte_end":921,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/ [`WaitGroup`]: sync/struct.WaitGroup.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":922,"byte_end":967,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ [`Backoff`]: struct.Backoff.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":968,"byte_end":1004,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/ [`CachePadded`]: struct.CachePadded.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":1005,"byte_end":1049,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ [`scope`]: thread/fn.scope.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":1050,"byte_end":1085,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":1087,"byte_end":1109,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":1110,"byte_end":1149,"line_start":30,"line_end":30,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"atomic","qualname":"::atomic","value":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\mod.rs","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":6},{"krate":0,"index":108},{"krate":0,"index":120},{"krate":0,"index":123}],"decl_id":null,"docs":" Atomic types.\n","sig":null,"attributes":[{"value":"/ Atomic types.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\mod.rs","byte_start":1825,"byte_end":1842,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":3736,"byte_end":3746,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"AtomicCell","qualname":"::atomic::atomic_cell::AtomicCell","value":"AtomicCell {  }","parent":null,"children":[{"krate":0,"index":41}],"decl_id":null,"docs":" A thread-safe mutable memory location.","sig":null,"attributes":[{"value":"/ A thread-safe mutable memory location.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":2881,"byte_end":2923,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":2924,"byte_end":2927,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`Cell`], except it can also be shared among multiple threads.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":2928,"byte_end":3021,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":3022,"byte_end":3025,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Operations on `AtomicCell`s use atomic instructions whenever possible, and synchronize using","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":3026,"byte_end":3122,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/ global locks otherwise. You can call [`AtomicCell::<T>::is_lock_free()`] to check whether","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":3123,"byte_end":3216,"line_start":17,"line_end":17,"column_start":1,"column_end":94}},{"value":"/ atomic instructions or locks will be used.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":3217,"byte_end":3263,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":3264,"byte_end":3267,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Atomic loads use the [`Acquire`] ordering and atomic stores use the [`Release`] ordering.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":3268,"byte_end":3361,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":3362,"byte_end":3365,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":3366,"byte_end":3431,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/ [`AtomicCell::<T>::is_lock_free()`]: struct.AtomicCell.html#method.is_lock_free","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":3432,"byte_end":3515,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/ [`Acquire`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html#variant.Acquire","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":3516,"byte_end":3609,"line_start":24,"line_end":24,"column_start":1,"column_end":94}},{"value":"/ [`Release`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html#variant.Release","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":3610,"byte_end":3703,"line_start":25,"line_end":25,"column_start":1,"column_end":94}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":3704,"byte_end":3724,"line_start":26,"line_end":26,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4906,"byte_end":4909,"line_start":71,"line_end":71,"column_start":18,"column_end":21},"name":"new","qualname":"<AtomicCell<T>>::new","value":"pub const fn new(T) -> AtomicCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new atomic cell initialized with `val`.","sig":null,"attributes":[{"value":"/ Creates a new atomic cell initialized with `val`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4654,"byte_end":4707,"line_start":61,"line_end":61,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4712,"byte_end":4715,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4720,"byte_end":4734,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4739,"byte_end":4742,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4747,"byte_end":4754,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4759,"byte_end":4803,"line_start":66,"line_end":66,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4808,"byte_end":4811,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4816,"byte_end":4847,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4852,"byte_end":4859,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"cfg(has_min_const_fn)","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4864,"byte_end":4888,"line_start":70,"line_end":70,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5310,"byte_end":5320,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AtomicCell<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the atomic cell and returns its inner value.","sig":null,"attributes":[{"value":"/ Unwraps the atomic cell and returns its inner value.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5020,"byte_end":5076,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5081,"byte_end":5084,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5089,"byte_end":5103,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5108,"byte_end":5111,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5116,"byte_end":5123,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5128,"byte_end":5172,"line_start":82,"line_end":82,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5177,"byte_end":5180,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let mut a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5185,"byte_end":5220,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/ let v = a.into_inner();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5225,"byte_end":5252,"line_start":85,"line_end":85,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5257,"byte_end":5260,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, 7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5265,"byte_end":5286,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5291,"byte_end":5298,"line_start":88,"line_end":88,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6595,"byte_end":6607,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"name":"is_lock_free","qualname":"<AtomicCell<T>>::is_lock_free","value":"pub fn is_lock_free() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if operations on values of this type are lock-free.","sig":null,"attributes":[{"value":"/ Returns `true` if operations on values of this type are lock-free.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5377,"byte_end":5447,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5452,"byte_end":5455,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ If the compiler or the platform doesn't support the necessary atomic instructions,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5460,"byte_end":5546,"line_start":95,"line_end":95,"column_start":5,"column_end":91}},{"value":"/ `AtomicCell<T>` will use global locks for every potentially concurrent atomic operation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5551,"byte_end":5643,"line_start":96,"line_end":96,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5648,"byte_end":5651,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5656,"byte_end":5670,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5675,"byte_end":5678,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5683,"byte_end":5690,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5695,"byte_end":5739,"line_start":101,"line_end":101,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5744,"byte_end":5747,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ // This type is internally represented as `AtomicUsize` so we can just use atomic","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5752,"byte_end":5837,"line_start":103,"line_end":103,"column_start":5,"column_end":90}},{"value":"/ // operations provided by it.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5842,"byte_end":5875,"line_start":104,"line_end":104,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(AtomicCell::<usize>::is_lock_free(), true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5880,"byte_end":5938,"line_start":105,"line_end":105,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5943,"byte_end":5946,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // A wrapper struct around `isize`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5951,"byte_end":5990,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":5995,"byte_end":6011,"line_start":108,"line_end":108,"column_start":5,"column_end":21}},{"value":"/     bar: isize,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6016,"byte_end":6035,"line_start":109,"line_end":109,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6040,"byte_end":6045,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/ // `AtomicCell<Foo>` will be internally represented as `AtomicIsize`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6050,"byte_end":6123,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(AtomicCell::<Foo>::is_lock_free(), true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6128,"byte_end":6184,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6189,"byte_end":6192,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ // Operations on zero-sized types are always lock-free.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6197,"byte_end":6256,"line_start":114,"line_end":114,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(AtomicCell::<()>::is_lock_free(), true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6261,"byte_end":6316,"line_start":115,"line_end":115,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6321,"byte_end":6324,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ // Very large types cannot be represented as any of the standard atomic types, so atomic","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6329,"byte_end":6421,"line_start":117,"line_end":117,"column_start":5,"column_end":97}},{"value":"/ // operations on them will have to use global locks for synchronization.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6426,"byte_end":6502,"line_start":118,"line_end":118,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(AtomicCell::<[u8; 1000]>::is_lock_free(), false);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6507,"byte_end":6571,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6576,"byte_end":6583,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6962,"byte_end":6967,"line_start":138,"line_end":138,"column_start":12,"column_end":17},"name":"store","qualname":"<AtomicCell<T>>::store","value":"pub fn store(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6666,"byte_end":6704,"line_start":125,"line_end":125,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6709,"byte_end":6712,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6717,"byte_end":6731,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6736,"byte_end":6739,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6744,"byte_end":6751,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6756,"byte_end":6800,"line_start":130,"line_end":130,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6805,"byte_end":6808,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6813,"byte_end":6844,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6849,"byte_end":6852,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6857,"byte_end":6885,"line_start":134,"line_end":134,"column_start":5,"column_end":33}},{"value":"/ a.store(8);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6890,"byte_end":6905,"line_start":135,"line_end":135,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6910,"byte_end":6938,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":6943,"byte_end":6950,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7522,"byte_end":7526,"line_start":161,"line_end":161,"column_start":12,"column_end":16},"name":"swap","qualname":"<AtomicCell<T>>::swap","value":"pub fn swap(&Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell and returns the previous value.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell and returns the previous value.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7181,"byte_end":7250,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7255,"byte_end":7258,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7263,"byte_end":7277,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7282,"byte_end":7285,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7290,"byte_end":7297,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7302,"byte_end":7346,"line_start":153,"line_end":153,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7351,"byte_end":7354,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7359,"byte_end":7390,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7395,"byte_end":7398,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7403,"byte_end":7431,"line_start":157,"line_end":157,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(a.swap(8), 7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7436,"byte_end":7465,"line_start":158,"line_end":158,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7470,"byte_end":7498,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7503,"byte_end":7510,"line_start":160,"line_end":160,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7937,"byte_end":7943,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<AtomicCell<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the underlying data in this atomic cell.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the underlying data in this atomic cell.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7648,"byte_end":7717,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7722,"byte_end":7725,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7730,"byte_end":7744,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7749,"byte_end":7752,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7757,"byte_end":7764,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7769,"byte_end":7813,"line_start":172,"line_end":172,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7818,"byte_end":7821,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let mut a = AtomicCell::new(5);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7826,"byte_end":7861,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7866,"byte_end":7869,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let ptr = a.as_ptr();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7874,"byte_end":7899,"line_start":176,"line_end":176,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7904,"byte_end":7911,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7916,"byte_end":7925,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8396,"byte_end":8403,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AtomicCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7999,"byte_end":8050,"line_start":183,"line_end":183,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8055,"byte_end":8058,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8063,"byte_end":8077,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8082,"byte_end":8085,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8090,"byte_end":8097,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8102,"byte_end":8146,"line_start":188,"line_end":188,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8151,"byte_end":8154,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ let mut a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8159,"byte_end":8194,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ *a.get_mut() += 1;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8199,"byte_end":8221,"line_start":191,"line_end":191,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8226,"byte_end":8229,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8234,"byte_end":8262,"line_start":193,"line_end":193,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8267,"byte_end":8274,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"deprecated(note =\n             \"this method is unsound and will be removed in the next release\")","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8298,"byte_end":8384,"line_start":196,"line_end":196,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8866,"byte_end":8870,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"take","qualname":"<AtomicCell<T>>::take","value":"pub fn take(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the atomic cell, leaving `Default::default()` in its place.","sig":null,"attributes":[{"value":"/ Takes the value of the atomic cell, leaving `Default::default()` in its place.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8515,"byte_end":8597,"line_start":203,"line_end":203,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8602,"byte_end":8605,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8610,"byte_end":8624,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8629,"byte_end":8632,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8637,"byte_end":8644,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8649,"byte_end":8693,"line_start":208,"line_end":208,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8698,"byte_end":8701,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8706,"byte_end":8737,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/ let five = a.take();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8742,"byte_end":8766,"line_start":211,"line_end":211,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8771,"byte_end":8774,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(five, 5);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8779,"byte_end":8803,"line_start":213,"line_end":213,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(a.into_inner(), 0);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8808,"byte_end":8842,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8847,"byte_end":8854,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9189,"byte_end":9193,"line_start":233,"line_end":233,"column_start":12,"column_end":16},"name":"load","qualname":"<AtomicCell<T>>::load","value":"pub fn load(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Loads a value.","sig":null,"attributes":[{"value":"/ Loads a value.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8966,"byte_end":8984,"line_start":222,"line_end":222,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8989,"byte_end":8992,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8997,"byte_end":9011,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9016,"byte_end":9019,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9024,"byte_end":9031,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9036,"byte_end":9080,"line_start":227,"line_end":227,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9085,"byte_end":9088,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9093,"byte_end":9124,"line_start":229,"line_end":229,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9129,"byte_end":9132,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9137,"byte_end":9165,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9170,"byte_end":9177,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9854,"byte_end":9870,"line_start":257,"line_end":257,"column_start":12,"column_end":28},"name":"compare_and_swap","qualname":"<AtomicCell<T>>::compare_and_swap","value":"pub fn compare_and_swap(&Self, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9305,"byte_end":9382,"line_start":239,"line_end":239,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9387,"byte_end":9390,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ The return value is always the previous value. If it is equal to `current`, then the value","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9395,"byte_end":9489,"line_start":241,"line_end":241,"column_start":5,"column_end":99}},{"value":"/ was updated.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9494,"byte_end":9510,"line_start":242,"line_end":242,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9515,"byte_end":9518,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9523,"byte_end":9537,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9542,"byte_end":9545,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9550,"byte_end":9557,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9562,"byte_end":9606,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9611,"byte_end":9614,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9619,"byte_end":9650,"line_start":249,"line_end":249,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9655,"byte_end":9658,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(2, 3), 1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9663,"byte_end":9707,"line_start":251,"line_end":251,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9712,"byte_end":9740,"line_start":252,"line_end":252,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9745,"byte_end":9748,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(1, 2), 1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9753,"byte_end":9797,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9802,"byte_end":9830,"line_start":255,"line_end":255,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9835,"byte_end":9842,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10652,"byte_end":10668,"line_start":282,"line_end":282,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<AtomicCell<T>>::compare_exchange","value":"pub fn compare_exchange(&Self, T, T) -> Result<T, T>","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10027,"byte_end":10104,"line_start":264,"line_end":264,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10109,"byte_end":10112,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new value was written and containing","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10117,"byte_end":10209,"line_start":266,"line_end":266,"column_start":5,"column_end":97}},{"value":"/ the previous value. On success this value is guaranteed to be equal to `current`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10214,"byte_end":10299,"line_start":267,"line_end":267,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10304,"byte_end":10307,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10312,"byte_end":10326,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10331,"byte_end":10334,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10339,"byte_end":10346,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10351,"byte_end":10395,"line_start":272,"line_end":272,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10400,"byte_end":10403,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10408,"byte_end":10439,"line_start":274,"line_end":274,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10444,"byte_end":10447,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(2, 3), Err(1));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10452,"byte_end":10501,"line_start":276,"line_end":276,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10506,"byte_end":10534,"line_start":277,"line_end":277,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10539,"byte_end":10542,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(1, 2), Ok(1));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10547,"byte_end":10595,"line_start":279,"line_end":279,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10600,"byte_end":10628,"line_start":280,"line_end":280,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":10633,"byte_end":10640,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21694,"byte_end":21703,"line_start":582,"line_end":582,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<AtomicCell<bool>>::fetch_and","value":"pub fn fetch_and(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"and\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"and\" to the current value and returns the previous value.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21255,"byte_end":21333,"line_start":566,"line_end":566,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21338,"byte_end":21341,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21346,"byte_end":21360,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21365,"byte_end":21368,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21373,"byte_end":21380,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21385,"byte_end":21429,"line_start":571,"line_end":571,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21434,"byte_end":21437,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21442,"byte_end":21476,"line_start":573,"line_end":573,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21481,"byte_end":21484,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(true), true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21489,"byte_end":21529,"line_start":575,"line_end":575,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21534,"byte_end":21565,"line_start":576,"line_end":576,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21570,"byte_end":21573,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(false), true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21578,"byte_end":21619,"line_start":578,"line_end":578,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21624,"byte_end":21656,"line_start":579,"line_end":579,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21661,"byte_end":21668,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21673,"byte_end":21682,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22295,"byte_end":22303,"line_start":603,"line_end":603,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<AtomicCell<bool>>::fetch_or","value":"pub fn fetch_or(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"or\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"or\" to the current value and returns the previous value.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21856,"byte_end":21933,"line_start":587,"line_end":587,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21938,"byte_end":21941,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21946,"byte_end":21960,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21965,"byte_end":21968,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21973,"byte_end":21980,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21985,"byte_end":22029,"line_start":592,"line_end":592,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22034,"byte_end":22037,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(false);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22042,"byte_end":22077,"line_start":594,"line_end":594,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22082,"byte_end":22085,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(false), false);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22090,"byte_end":22131,"line_start":596,"line_end":596,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22136,"byte_end":22168,"line_start":597,"line_end":597,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22173,"byte_end":22176,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(true), false);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22181,"byte_end":22221,"line_start":599,"line_end":599,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22226,"byte_end":22257,"line_start":600,"line_end":600,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22262,"byte_end":22269,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22274,"byte_end":22283,"line_start":602,"line_end":602,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22894,"byte_end":22903,"line_start":624,"line_end":624,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<AtomicCell<bool>>::fetch_xor","value":"pub fn fetch_xor(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"xor\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"xor\" to the current value and returns the previous value.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22455,"byte_end":22533,"line_start":608,"line_end":608,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22538,"byte_end":22541,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22546,"byte_end":22560,"line_start":610,"line_end":610,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22565,"byte_end":22568,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22573,"byte_end":22580,"line_start":612,"line_end":612,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22585,"byte_end":22629,"line_start":613,"line_end":613,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22634,"byte_end":22637,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22642,"byte_end":22676,"line_start":615,"line_end":615,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22681,"byte_end":22684,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(false), true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22689,"byte_end":22730,"line_start":617,"line_end":617,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22735,"byte_end":22766,"line_start":618,"line_end":618,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22771,"byte_end":22774,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(true), true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22779,"byte_end":22819,"line_start":620,"line_end":620,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22824,"byte_end":22856,"line_start":621,"line_end":621,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22861,"byte_end":22868,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":22873,"byte_end":22882,"line_start":623,"line_end":623,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":32879,"byte_end":32892,"line_start":6,"line_end":6,"column_start":11,"column_end":24},"name":"AtomicConsume","qualname":"::atomic::consume::AtomicConsume","value":"AtomicConsume","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" Trait which allows reading from primitive atomic types with \"consume\" ordering.\n","sig":null,"attributes":[{"value":"/ Trait which allows reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":32785,"byte_end":32868,"line_start":5,"line_end":5,"column_start":1,"column_end":84}}]},{"kind":"Type","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":32945,"byte_end":32948,"line_start":8,"line_end":8,"column_start":10,"column_end":13},"name":"Val","qualname":"::atomic::consume::AtomicConsume::Val","value":"type Val;","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Type returned by `load_consume`.\n","sig":null,"attributes":[{"value":"/ Type returned by `load_consume`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":32899,"byte_end":32935,"line_start":7,"line_end":7,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33786,"byte_end":33798,"line_start":25,"line_end":25,"column_start":8,"column_end":20},"name":"load_consume","qualname":"::atomic::consume::AtomicConsume::load_consume","value":"pub fn load_consume(&Self) -> Self::Val","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Loads a value from the atomic using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic using a \"consume\" memory ordering.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":32955,"byte_end":33023,"line_start":10,"line_end":10,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33028,"byte_end":33031,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33036,"byte_end":33109,"line_start":12,"line_end":12,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33114,"byte_end":33190,"line_start":13,"line_end":13,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33195,"byte_end":33266,"line_start":14,"line_end":14,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33271,"byte_end":33345,"line_start":15,"line_end":15,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33350,"byte_end":33373,"line_start":16,"line_end":16,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33378,"byte_end":33381,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33386,"byte_end":33461,"line_start":18,"line_end":18,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33466,"byte_end":33540,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33545,"byte_end":33579,"line_start":20,"line_end":20,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33584,"byte_end":33587,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This is currently only implemented on ARM and AArch64, where a fence","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33592,"byte_end":33664,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ can be avoided. On other architectures this will fall back to a simple","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33669,"byte_end":33743,"line_start":23,"line_end":23,"column_start":5,"column_end":79}},{"value":"/ `load(Ordering::Acquire)`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":33748,"byte_end":33778,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38132,"byte_end":38143,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"CachePadded","qualname":"::cache_padded::CachePadded","value":"CachePadded {  }","parent":null,"children":[{"krate":0,"index":302}],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":35523,"byte_end":35581,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":35582,"byte_end":35585,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, sometimes it is desirable to make sure commonly accessed pieces of","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":35586,"byte_end":35683,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ data are not placed into the same cache line. Updating an atomic value invalides the whole","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":35684,"byte_end":35778,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ cache line it belongs to, which makes the next access to the same cache line slower for other","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":35779,"byte_end":35876,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ CPU cores. Use `CachePadded` to ensure updating one piece of data doesn't invalidate other","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":35877,"byte_end":35971,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ cached data.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":35972,"byte_end":35988,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":35989,"byte_end":35992,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Size and alignment","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":35993,"byte_end":36017,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36018,"byte_end":36021,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Cache lines are assumed to be N bytes long, depending on the architecture:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36022,"byte_end":36100,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36101,"byte_end":36104,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * On x86-64, N = 128.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36105,"byte_end":36130,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/ * On all others, N = 64.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36131,"byte_end":36159,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36160,"byte_end":36163,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Note that N is just a reasonable guess and is not guaranteed to match the actual cache line","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36164,"byte_end":36259,"line_start":19,"line_end":19,"column_start":1,"column_end":96}},{"value":"/ length of the machine the program is running on. On modern Intel architectures, spatial","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36260,"byte_end":36351,"line_start":20,"line_end":20,"column_start":1,"column_end":92}},{"value":"/ prefetcher is pulling pairs of 64-byte cache lines at a time, so we pessimistically assume that","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36352,"byte_end":36451,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ cache lines are 128 bytes long.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36452,"byte_end":36487,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36488,"byte_end":36491,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The size of `CachePadded<T>` is the smallest multiple of N bytes large enough to accommodate","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36492,"byte_end":36588,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"/ a value of type `T`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36589,"byte_end":36613,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36614,"byte_end":36617,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The alignment of `CachePadded<T>` is the maximum of N bytes and the alignment of `T`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36618,"byte_end":36707,"line_start":27,"line_end":27,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36708,"byte_end":36711,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36712,"byte_end":36726,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36727,"byte_end":36730,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Alignment and padding:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36731,"byte_end":36757,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36758,"byte_end":36761,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36762,"byte_end":36769,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36770,"byte_end":36807,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36808,"byte_end":36811,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let array = [CachePadded::new(1i8), CachePadded::new(2i8)];","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36812,"byte_end":36875,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/ let addr1 = &*array[0] as *const i8 as usize;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36876,"byte_end":36925,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"/ let addr2 = &*array[1] as *const i8 as usize;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36926,"byte_end":36975,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36976,"byte_end":36979,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ assert!(addr2 - addr1 >= 64);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":36980,"byte_end":37013,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(addr1 % 64, 0);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37014,"byte_end":37044,"line_start":41,"line_end":41,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(addr2 % 64, 0);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37045,"byte_end":37075,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37076,"byte_end":37083,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37084,"byte_end":37087,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ When building a concurrent queue with a head and a tail index, it is wise to place them in","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37088,"byte_end":37182,"line_start":45,"line_end":45,"column_start":1,"column_end":95}},{"value":"/ different cache lines so that concurrent threads pushing and popping elements don't invalidate","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37183,"byte_end":37281,"line_start":46,"line_end":46,"column_start":1,"column_end":99}},{"value":"/ each other's cache lines:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37282,"byte_end":37311,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37312,"byte_end":37315,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37316,"byte_end":37323,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37324,"byte_end":37361,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37362,"byte_end":37401,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37402,"byte_end":37405,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ struct Queue<T> {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37406,"byte_end":37427,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/     head: CachePadded<AtomicUsize>,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37428,"byte_end":37467,"line_start":54,"line_end":54,"column_start":1,"column_end":40}},{"value":"/     tail: CachePadded<AtomicUsize>,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37468,"byte_end":37507,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"/     buffer: *mut T,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37508,"byte_end":37531,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37532,"byte_end":37537,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":37538,"byte_end":37545,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"repr(align(128))","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38044,"byte_end":38060,"line_start":66,"line_end":66,"column_start":36,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38519,"byte_end":38522,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<CachePadded<T>>::new","value":"pub fn new(T) -> CachePadded<T>","parent":null,"children":[],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38292,"byte_end":38350,"line_start":76,"line_end":76,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38355,"byte_end":38358,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38363,"byte_end":38377,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38382,"byte_end":38385,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38390,"byte_end":38397,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38402,"byte_end":38439,"line_start":81,"line_end":81,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38444,"byte_end":38447,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38452,"byte_end":38495,"line_start":83,"line_end":83,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38500,"byte_end":38507,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38872,"byte_end":38882,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CachePadded<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner value.","sig":null,"attributes":[{"value":"/ Returns the inner value.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38598,"byte_end":38626,"line_start":89,"line_end":89,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38631,"byte_end":38634,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38639,"byte_end":38653,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38658,"byte_end":38661,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38666,"byte_end":38673,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38678,"byte_end":38715,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38720,"byte_end":38723,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38728,"byte_end":38771,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/ let value = padded_value.into_inner();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38776,"byte_end":38818,"line_start":97,"line_end":97,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(value, 7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38823,"byte_end":38848,"line_start":98,"line_end":98,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38853,"byte_end":38860,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41953,"byte_end":41960,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"Backoff","qualname":"::backoff::Backoff","value":"Backoff {  }","parent":null,"children":[{"krate":0,"index":174}],"decl_id":null,"docs":" Performs exponential backoff in spin loops.","sig":null,"attributes":[{"value":"/ Performs exponential backoff in spin loops.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":39591,"byte_end":39638,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":39639,"byte_end":39642,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Backing off in spin loops reduces contention and improves overall performance.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":39643,"byte_end":39725,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":39726,"byte_end":39729,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This primitive can execute *YIELD* and *PAUSE* instructions, yield the current thread to the OS","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":39730,"byte_end":39829,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ scheduler, and tell when is a good time to block the thread using a different synchronization","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":39830,"byte_end":39927,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ mechanism. Each step of the back off procedure takes roughly twice as long as the previous","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":39928,"byte_end":40022,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ step.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40023,"byte_end":40032,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40033,"byte_end":40036,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40037,"byte_end":40051,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40052,"byte_end":40055,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40056,"byte_end":40092,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40093,"byte_end":40096,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40097,"byte_end":40104,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40105,"byte_end":40138,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40139,"byte_end":40178,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40179,"byte_end":40223,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40224,"byte_end":40227,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40228,"byte_end":40282,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40283,"byte_end":40320,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40321,"byte_end":40335,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40336,"byte_end":40373,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/         if a.compare_and_swap(val, val.wrapping_mul(b), SeqCst) == val {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40374,"byte_end":40450,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/             return val;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40451,"byte_end":40478,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/         }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40479,"byte_end":40492,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/         backoff.spin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40493,"byte_end":40520,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40521,"byte_end":40530,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40531,"byte_end":40536,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40537,"byte_end":40544,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40545,"byte_end":40548,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40549,"byte_end":40600,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40601,"byte_end":40604,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40605,"byte_end":40612,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40613,"byte_end":40646,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40647,"byte_end":40685,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40686,"byte_end":40730,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40731,"byte_end":40734,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40735,"byte_end":40773,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40774,"byte_end":40811,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40812,"byte_end":40847,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/         backoff.snooze();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40848,"byte_end":40877,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40878,"byte_end":40887,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40888,"byte_end":40893,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40894,"byte_end":40901,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40902,"byte_end":40905,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40906,"byte_end":40998,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/ Note that whoever sets the atomic variable to `true` must notify the parked thread by calling","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":40999,"byte_end":41096,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ [`unpark()`]:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41097,"byte_end":41114,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41115,"byte_end":41118,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41119,"byte_end":41126,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41127,"byte_end":41160,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41161,"byte_end":41199,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41200,"byte_end":41244,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41245,"byte_end":41265,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41266,"byte_end":41269,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41270,"byte_end":41312,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41313,"byte_end":41350,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41351,"byte_end":41386,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41387,"byte_end":41426,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/             thread::park();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41427,"byte_end":41458,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41459,"byte_end":41479,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/             backoff.snooze();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41480,"byte_end":41513,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41514,"byte_end":41527,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41528,"byte_end":41537,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41538,"byte_end":41543,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41544,"byte_end":41551,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41552,"byte_end":41555,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`is_completed`]: struct.Backoff.html#method.is_completed","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41556,"byte_end":41617,"line_start":75,"line_end":75,"column_start":1,"column_end":62}},{"value":"/ [`std::thread::park()`]: https://doc.rust-lang.org/std/thread/fn.park.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41618,"byte_end":41696,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ [`Condvar`]: https://doc.rust-lang.org/std/sync/struct.Condvar.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41697,"byte_end":41768,"line_start":77,"line_end":77,"column_start":1,"column_end":72}},{"value":"/ [`AtomicBool`]: https://doc.rust-lang.org/std/sync/atomic/struct.AtomicBool.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41769,"byte_end":41853,"line_start":78,"line_end":78,"column_start":1,"column_end":85}},{"value":"/ [`unpark()`]: https://doc.rust-lang.org/std/thread/struct.Thread.html#method.unpark","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41854,"byte_end":41941,"line_start":79,"line_end":79,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42203,"byte_end":42206,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<Backoff>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Backoff`.","sig":null,"attributes":[{"value":"/ Creates a new `Backoff`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42006,"byte_end":42034,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42039,"byte_end":42042,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42047,"byte_end":42061,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42066,"byte_end":42069,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42074,"byte_end":42081,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42086,"byte_end":42119,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42124,"byte_end":42127,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42132,"byte_end":42165,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42170,"byte_end":42177,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42182,"byte_end":42191,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42488,"byte_end":42493,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"reset","qualname":"<Backoff>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Backoff`.","sig":null,"attributes":[{"value":"/ Resets the `Backoff`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42269,"byte_end":42294,"line_start":99,"line_end":99,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42299,"byte_end":42302,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42307,"byte_end":42321,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42326,"byte_end":42329,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42334,"byte_end":42341,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42346,"byte_end":42379,"line_start":104,"line_end":104,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42384,"byte_end":42387,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42392,"byte_end":42425,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/ backoff.reset();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42430,"byte_end":42450,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42455,"byte_end":42462,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42467,"byte_end":42476,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43528,"byte_end":43532,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"spin","qualname":"<Backoff>::spin","value":"pub fn spin(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a lock-free loop.","sig":null,"attributes":[{"value":"/ Backs off in a lock-free loop.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42540,"byte_end":42574,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42579,"byte_end":42582,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to retry an operation because another thread made","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42587,"byte_end":42680,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ progress.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42685,"byte_end":42698,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42703,"byte_end":42706,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42711,"byte_end":42780,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42785,"byte_end":42788,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42793,"byte_end":42807,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42812,"byte_end":42815,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42820,"byte_end":42856,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42861,"byte_end":42864,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42869,"byte_end":42876,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42881,"byte_end":42914,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42919,"byte_end":42958,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":42963,"byte_end":43007,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43012,"byte_end":43015,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43020,"byte_end":43074,"line_start":130,"line_end":130,"column_start":5,"column_end":59}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43079,"byte_end":43116,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43121,"byte_end":43135,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43140,"byte_end":43177,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/         if a.compare_and_swap(val, val.wrapping_mul(b), SeqCst) == val {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43182,"byte_end":43258,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/             return val;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43263,"byte_end":43290,"line_start":135,"line_end":135,"column_start":5,"column_end":32}},{"value":"/         }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43295,"byte_end":43308,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/         backoff.spin();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43313,"byte_end":43340,"line_start":137,"line_end":137,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43345,"byte_end":43354,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43359,"byte_end":43364,"line_start":139,"line_end":139,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43369,"byte_end":43372,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicUsize::new(7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43377,"byte_end":43409,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(fetch_mul(&a, 8), 7);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43414,"byte_end":43450,"line_start":142,"line_end":142,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.load(SeqCst), 56);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43455,"byte_end":43490,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43495,"byte_end":43502,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43507,"byte_end":43516,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45488,"byte_end":45494,"line_start":205,"line_end":205,"column_start":12,"column_end":18},"name":"snooze","qualname":"<Backoff>::snooze","value":"pub fn snooze(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a blocking loop.","sig":null,"attributes":[{"value":"/ Backs off in a blocking loop.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43762,"byte_end":43795,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43800,"byte_end":43803,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to wait for another thread to make progress.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43808,"byte_end":43896,"line_start":158,"line_end":158,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43901,"byte_end":43904,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction and the current thread","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":43909,"byte_end":44000,"line_start":160,"line_end":160,"column_start":5,"column_end":96}},{"value":"/ may yield by giving up a timeslice to the OS scheduler.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44005,"byte_end":44064,"line_start":161,"line_end":161,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44069,"byte_end":44072,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ In `#[no_std]` environments, this method is equivalent to [`spin`].","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44077,"byte_end":44148,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44153,"byte_end":44156,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ If possible, use [`is_completed`] to check when it is advised to stop using backoff and","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44161,"byte_end":44252,"line_start":165,"line_end":165,"column_start":5,"column_end":96}},{"value":"/ block the current thread using a different synchronization mechanism instead.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44257,"byte_end":44338,"line_start":166,"line_end":166,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44343,"byte_end":44346,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`spin`]: struct.Backoff.html#method.spin","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44351,"byte_end":44396,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/ [`is_completed`]: struct.Backoff.html#method.is_completed","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44401,"byte_end":44462,"line_start":169,"line_end":169,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44467,"byte_end":44470,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44475,"byte_end":44489,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44494,"byte_end":44497,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44502,"byte_end":44553,"line_start":173,"line_end":173,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44558,"byte_end":44561,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44566,"byte_end":44573,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44578,"byte_end":44611,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44616,"byte_end":44639,"line_start":177,"line_end":177,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44644,"byte_end":44682,"line_start":178,"line_end":178,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44687,"byte_end":44731,"line_start":179,"line_end":179,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44736,"byte_end":44756,"line_start":180,"line_end":180,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44761,"byte_end":44789,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44794,"byte_end":44797,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44802,"byte_end":44840,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44845,"byte_end":44882,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44887,"byte_end":44922,"line_start":185,"line_end":185,"column_start":5,"column_end":40}},{"value":"/         backoff.snooze();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44927,"byte_end":44956,"line_start":186,"line_end":186,"column_start":5,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44961,"byte_end":44970,"line_start":187,"line_end":187,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44975,"byte_end":44980,"line_start":188,"line_end":188,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44985,"byte_end":44988,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":44993,"byte_end":45042,"line_start":190,"line_end":190,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45047,"byte_end":45078,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45083,"byte_end":45086,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45091,"byte_end":45118,"line_start":193,"line_end":193,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45123,"byte_end":45173,"line_start":194,"line_end":194,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45178,"byte_end":45213,"line_start":195,"line_end":195,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45218,"byte_end":45225,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45230,"byte_end":45233,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45238,"byte_end":45280,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/ spin_wait(&ready);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45285,"byte_end":45307,"line_start":199,"line_end":199,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45312,"byte_end":45353,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45358,"byte_end":45365,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45370,"byte_end":45373,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: https://doc.rust-lang.org/std/sync/atomic/struct.AtomicBool.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45378,"byte_end":45462,"line_start":203,"line_end":203,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":45467,"byte_end":45476,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47374,"byte_end":47386,"line_start":267,"line_end":267,"column_start":12,"column_end":24},"name":"is_completed","qualname":"<Backoff>::is_completed","value":"pub fn is_completed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if exponential backoff has completed and blocking the thread is advised.","sig":null,"attributes":[{"value":"/ Returns `true` if exponential backoff has completed and blocking the thread is advised.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46012,"byte_end":46103,"line_start":225,"line_end":225,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46108,"byte_end":46111,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46116,"byte_end":46130,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46135,"byte_end":46138,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46143,"byte_end":46235,"line_start":229,"line_end":229,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46240,"byte_end":46243,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46248,"byte_end":46255,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46260,"byte_end":46293,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46298,"byte_end":46321,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46326,"byte_end":46364,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46369,"byte_end":46413,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46418,"byte_end":46438,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46443,"byte_end":46471,"line_start":237,"line_end":237,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46476,"byte_end":46479,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46484,"byte_end":46526,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46531,"byte_end":46568,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46573,"byte_end":46608,"line_start":241,"line_end":241,"column_start":5,"column_end":40}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46613,"byte_end":46652,"line_start":242,"line_end":242,"column_start":5,"column_end":44}},{"value":"/             thread::park();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46657,"byte_end":46688,"line_start":243,"line_end":243,"column_start":5,"column_end":36}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46693,"byte_end":46713,"line_start":244,"line_end":244,"column_start":5,"column_end":25}},{"value":"/             backoff.snooze();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46718,"byte_end":46751,"line_start":245,"line_end":245,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46756,"byte_end":46769,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46774,"byte_end":46783,"line_start":247,"line_end":247,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46788,"byte_end":46793,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46798,"byte_end":46801,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46806,"byte_end":46855,"line_start":250,"line_end":250,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46860,"byte_end":46891,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/ let waiter = thread::current();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46896,"byte_end":46931,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46936,"byte_end":46939,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46944,"byte_end":46971,"line_start":254,"line_end":254,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":46976,"byte_end":47026,"line_start":255,"line_end":255,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47031,"byte_end":47066,"line_start":256,"line_end":256,"column_start":5,"column_end":40}},{"value":"/     waiter.unpark();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47071,"byte_end":47095,"line_start":257,"line_end":257,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47100,"byte_end":47107,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47112,"byte_end":47115,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47120,"byte_end":47162,"line_start":260,"line_end":260,"column_start":5,"column_end":47}},{"value":"/ blocking_wait(&ready);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47167,"byte_end":47193,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47198,"byte_end":47239,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47244,"byte_end":47251,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47256,"byte_end":47259,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: https://doc.rust-lang.org/std/sync/atomic/struct.AtomicBool.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47264,"byte_end":47348,"line_start":265,"line_end":265,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47353,"byte_end":47362,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47548,"byte_end":47559,"line_start":274,"line_end":274,"column_start":12,"column_end":23},"name":"is_complete","qualname":"<Backoff>::is_complete","value":"pub fn is_complete(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47453,"byte_end":47462,"line_start":271,"line_end":271,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use `is_completed` instead\")","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47486,"byte_end":47536,"line_start":273,"line_end":273,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":385},{"krate":0,"index":555},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600}],"decl_id":null,"docs":" Thread synchronization primitives.","sig":null,"attributes":[{"value":"/ Thread synchronization primitives.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12423725,"byte_end":12423763,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12423764,"byte_end":12423767,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12423768,"byte_end":12423813,"line_start":3,"line_end":3,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12423814,"byte_end":12423893,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12423894,"byte_end":12423974,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12423975,"byte_end":12423978,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`Parker`]: struct.Parker.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12423979,"byte_end":12424013,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/ [`ShardedLock`]: struct.ShardedLock.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12424014,"byte_end":12424058,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ [`WaitGroup`]: struct.WaitGroup.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\mod.rs","byte_start":12424059,"byte_end":12424099,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426071,"byte_end":12426077,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Parker","qualname":"::sync::parker::Parker","value":"Parker {  }","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356}],"decl_id":null,"docs":" A thread parking primitive.","sig":null,"attributes":[{"value":"/ A thread parking primitive.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12424501,"byte_end":12424532,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12424533,"byte_end":12424536,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Conceptually, each `Parker` has an associated token which is initially not present:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12424537,"byte_end":12424624,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12424625,"byte_end":12424628,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * The [`park`] method blocks the current thread unless or until the token is available, at","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12424629,"byte_end":12424723,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/   which point it automatically consumes the token. It may also return *spuriously*, without","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12424724,"byte_end":12424819,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"/   consuming the token.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12424820,"byte_end":12424846,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12424847,"byte_end":12424850,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * The [`park_timeout`] method works the same as [`park`], but blocks for a specified maximum","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12424851,"byte_end":12424947,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/   time.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12424948,"byte_end":12424959,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12424960,"byte_end":12424963,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * The [`unpark`] method atomically makes the token available if it wasn't already. Because the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12424964,"byte_end":12425062,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/   token is initially absent, [`unpark`] followed by [`park`] will result in the second call","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425063,"byte_end":12425158,"line_start":20,"line_end":20,"column_start":1,"column_end":96}},{"value":"/   returning immediately.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425159,"byte_end":12425187,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425188,"byte_end":12425191,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In other words, each `Parker` acts a bit like a spinlock that can be locked and unlocked using","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425192,"byte_end":12425290,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ [`park`] and [`unpark`].","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425291,"byte_end":12425319,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425320,"byte_end":12425323,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425324,"byte_end":12425338,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425339,"byte_end":12425342,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425343,"byte_end":12425350,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425351,"byte_end":12425371,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425372,"byte_end":12425400,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425401,"byte_end":12425439,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425440,"byte_end":12425443,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut p = Parker::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425444,"byte_end":12425474,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425475,"byte_end":12425508,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425509,"byte_end":12425512,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Make the token available.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425513,"byte_end":12425545,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ u.unpark();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425546,"byte_end":12425561,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425562,"byte_end":12425613,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425614,"byte_end":12425627,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425628,"byte_end":12425631,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425632,"byte_end":12425659,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425660,"byte_end":12425710,"line_start":42,"line_end":42,"column_start":1,"column_end":51}},{"value":"/     u.unpark();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425711,"byte_end":12425730,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/ });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425731,"byte_end":12425738,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425739,"byte_end":12425742,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Wakes up when `u.unpark()` provides the token, but may also wake up","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425743,"byte_end":12425817,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ // spuriously before that without consuming the token.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425818,"byte_end":12425876,"line_start":47,"line_end":47,"column_start":1,"column_end":59}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425877,"byte_end":12425890,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425891,"byte_end":12425898,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425899,"byte_end":12425902,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`park`]: struct.Parker.html#method.park","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425903,"byte_end":12425947,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`park_timeout`]: struct.Parker.html#method.park_timeout","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12425948,"byte_end":12426008,"line_start":52,"line_end":52,"column_start":1,"column_end":61}},{"value":"/ [`unpark`]: struct.Unparker.html#method.unpark","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426009,"byte_end":12426059,"line_start":53,"line_end":53,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426382,"byte_end":12426385,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<Parker>::new","value":"pub fn new() -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Parker`.","sig":null,"attributes":[{"value":"/ Creates a new `Parker`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426194,"byte_end":12426221,"line_start":62,"line_end":62,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426226,"byte_end":12426229,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426234,"byte_end":12426248,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426253,"byte_end":12426256,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426261,"byte_end":12426268,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426273,"byte_end":12426311,"line_start":67,"line_end":67,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426316,"byte_end":12426319,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426324,"byte_end":12426350,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426355,"byte_end":12426362,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426367,"byte_end":12426370,"line_start":71,"line_end":71,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427268,"byte_end":12427272,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"park","qualname":"<Parker>::park","value":"pub fn park(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426716,"byte_end":12426780,"line_start":85,"line_end":85,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426785,"byte_end":12426788,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ A call to `park` may wake up spuriously without consuming the token, and callers should be","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426793,"byte_end":12426887,"line_start":87,"line_end":87,"column_start":5,"column_end":99}},{"value":"/ prepared for this possibility.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426892,"byte_end":12426926,"line_start":88,"line_end":88,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426931,"byte_end":12426934,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426939,"byte_end":12426953,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426958,"byte_end":12426961,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426966,"byte_end":12426973,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426978,"byte_end":12427016,"line_start":93,"line_end":93,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427021,"byte_end":12427024,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut p = Parker::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427029,"byte_end":12427059,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427064,"byte_end":12427097,"line_start":96,"line_end":96,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427102,"byte_end":12427105,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427110,"byte_end":12427142,"line_start":98,"line_end":98,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427147,"byte_end":12427162,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427167,"byte_end":12427170,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427175,"byte_end":12427226,"line_start":101,"line_end":101,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427231,"byte_end":12427244,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427249,"byte_end":12427256,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427920,"byte_end":12427932,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"park_timeout","qualname":"<Parker>::park_timeout","value":"pub fn park_timeout(&Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, but only for a limited time.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, but only for a limited time.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427333,"byte_end":12427426,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427431,"byte_end":12427434,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ A call to `park_timeout` may wake up spuriously without consuming the token, and callers","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427439,"byte_end":12427531,"line_start":110,"line_end":110,"column_start":5,"column_end":97}},{"value":"/ should be prepared for this possibility.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427536,"byte_end":12427580,"line_start":111,"line_end":111,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427585,"byte_end":12427588,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427593,"byte_end":12427607,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427612,"byte_end":12427615,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427620,"byte_end":12427627,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427632,"byte_end":12427660,"line_start":116,"line_end":116,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427665,"byte_end":12427703,"line_start":117,"line_end":117,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427708,"byte_end":12427711,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut p = Parker::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427716,"byte_end":12427746,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427751,"byte_end":12427754,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427759,"byte_end":12427844,"line_start":121,"line_end":121,"column_start":5,"column_end":90}},{"value":"/ p.park_timeout(Duration::from_millis(500));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427849,"byte_end":12427896,"line_start":122,"line_end":122,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12427901,"byte_end":12427908,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428686,"byte_end":12428694,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"unparker","qualname":"<Parker>::unparker","value":"pub fn unparker(&Self) -> &Unparker","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to an associated [`Unparker`].","sig":null,"attributes":[{"value":"/ Returns a reference to an associated [`Unparker`].","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428021,"byte_end":12428075,"line_start":128,"line_end":128,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428080,"byte_end":12428083,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The returned [`Unparker`] doesn't have to be used by reference - it can also be cloned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428088,"byte_end":12428179,"line_start":130,"line_end":130,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428184,"byte_end":12428187,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428192,"byte_end":12428206,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428211,"byte_end":12428214,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428219,"byte_end":12428226,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428231,"byte_end":12428269,"line_start":135,"line_end":135,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428274,"byte_end":12428277,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let mut p = Parker::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428282,"byte_end":12428312,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428317,"byte_end":12428350,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428355,"byte_end":12428358,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428363,"byte_end":12428395,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428400,"byte_end":12428415,"line_start":141,"line_end":141,"column_start":5,"column_end":20}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428420,"byte_end":12428471,"line_start":142,"line_end":142,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428476,"byte_end":12428489,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428494,"byte_end":12428501,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428506,"byte_end":12428509,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [`park`]: struct.Parker.html#method.park","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428514,"byte_end":12428558,"line_start":146,"line_end":146,"column_start":5,"column_end":49}},{"value":"/ [`park_timeout`]: struct.Parker.html#method.park_timeout","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428563,"byte_end":12428623,"line_start":147,"line_end":147,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428628,"byte_end":12428631,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ [`Unparker`]: struct.Unparker.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428636,"byte_end":12428674,"line_start":149,"line_end":149,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428985,"byte_end":12428993,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"Unparker","qualname":"::sync::parker::Unparker","value":"Unparker {  }","parent":null,"children":[{"krate":0,"index":366}],"decl_id":null,"docs":" Unparks a thread parked by the associated [`Parker`].","sig":null,"attributes":[{"value":"/ Unparks a thread parked by the associated [`Parker`].","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428877,"byte_end":12428934,"line_start":161,"line_end":161,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428935,"byte_end":12428938,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [`Parker`]: struct.Parker.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428939,"byte_end":12428973,"line_start":163,"line_end":163,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429963,"byte_end":12429969,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"unpark","qualname":"<Unparker>::unpark","value":"pub fn unpark(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Atomically makes the token available if it is not already.","sig":null,"attributes":[{"value":"/ Atomically makes the token available if it is not already.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429109,"byte_end":12429171,"line_start":172,"line_end":172,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429176,"byte_end":12429179,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This method will wake up the thread blocked on [`park`] or [`park_timeout`], if there is","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429184,"byte_end":12429276,"line_start":174,"line_end":174,"column_start":5,"column_end":97}},{"value":"/ any.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429281,"byte_end":12429289,"line_start":175,"line_end":175,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429294,"byte_end":12429297,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429302,"byte_end":12429316,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429321,"byte_end":12429324,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429329,"byte_end":12429336,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429341,"byte_end":12429361,"line_start":180,"line_end":180,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429366,"byte_end":12429394,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429399,"byte_end":12429437,"line_start":182,"line_end":182,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429442,"byte_end":12429445,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let mut p = Parker::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429450,"byte_end":12429480,"line_start":184,"line_end":184,"column_start":5,"column_end":35}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429485,"byte_end":12429518,"line_start":185,"line_end":185,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429523,"byte_end":12429526,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429531,"byte_end":12429558,"line_start":187,"line_end":187,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429563,"byte_end":12429613,"line_start":188,"line_end":188,"column_start":5,"column_end":55}},{"value":"/     u.unpark();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429618,"byte_end":12429637,"line_start":189,"line_end":189,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429642,"byte_end":12429649,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429654,"byte_end":12429657,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ // Wakes up when `u.unpark()` provides the token, but may also wake up","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429662,"byte_end":12429736,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ // spuriously before that without consuming the token.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429741,"byte_end":12429799,"line_start":193,"line_end":193,"column_start":5,"column_end":63}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429804,"byte_end":12429817,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429822,"byte_end":12429829,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429834,"byte_end":12429837,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`park`]: struct.Parker.html#method.park","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429842,"byte_end":12429886,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/ [`park_timeout`]: struct.Parker.html#method.park_timeout","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429891,"byte_end":12429951,"line_start":198,"line_end":198,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437246,"byte_end":12437257,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"ShardedLock","qualname":"::sync::sharded_lock::ShardedLock","value":"ShardedLock {  }","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"decl_id":null,"docs":" A sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ A sharded reader-writer lock.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12435459,"byte_end":12435492,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12435493,"byte_end":12435496,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This lock is equivalent to [`RwLock`], except read operations are faster and write operations","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12435497,"byte_end":12435594,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ are slower.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12435595,"byte_end":12435610,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12435611,"byte_end":12435614,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock` is internally made of a list of *shards*, each being a [`RwLock`] occupying a","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12435615,"byte_end":12435712,"line_start":34,"line_end":34,"column_start":1,"column_end":98}},{"value":"/ single cache line. Read operations will pick one of the shards depending on the current thread","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12435713,"byte_end":12435811,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/ and lock it. Write operations need to lock all shards in succession.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12435812,"byte_end":12435884,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12435885,"byte_end":12435888,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ By splitting the lock into shards, concurrent read operations will in most cases choose","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12435889,"byte_end":12435980,"line_start":38,"line_end":38,"column_start":1,"column_end":92}},{"value":"/ different shards and thus update different cache lines, which is good for scalability. However,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12435981,"byte_end":12436080,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ write operations need to do more work and are therefore slower than usual.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436081,"byte_end":12436159,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436160,"byte_end":12436163,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The priority policy of the lock is dependent on the underlying operating system's","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436164,"byte_end":12436249,"line_start":42,"line_end":42,"column_start":1,"column_end":86}},{"value":"/ implementation, and this type does not guarantee that any particular policy will be used.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436250,"byte_end":12436343,"line_start":43,"line_end":43,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436344,"byte_end":12436347,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Poisoning","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436348,"byte_end":12436363,"line_start":45,"line_end":45,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436364,"byte_end":12436367,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock`, like [`RwLock`], will become poisoned on a panic. Note that it may only be","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436368,"byte_end":12436463,"line_start":47,"line_end":47,"column_start":1,"column_end":96}},{"value":"/ poisoned if a panic occurs while a write operation is in progress. If a panic occurs in any","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436464,"byte_end":12436559,"line_start":48,"line_end":48,"column_start":1,"column_end":96}},{"value":"/ read operation, the lock will not be poisoned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436560,"byte_end":12436610,"line_start":49,"line_end":49,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436611,"byte_end":12436614,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436615,"byte_end":12436629,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436630,"byte_end":12436633,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436634,"byte_end":12436641,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436642,"byte_end":12436685,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436686,"byte_end":12436689,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436690,"byte_end":12436725,"line_start":56,"line_end":56,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436726,"byte_end":12436729,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Any number of read locks can be held at once.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436730,"byte_end":12436782,"line_start":58,"line_end":58,"column_start":1,"column_end":53}},{"value":"/ {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436783,"byte_end":12436788,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/     let r1 = lock.read().unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436789,"byte_end":12436827,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/     let r2 = lock.read().unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436828,"byte_end":12436866,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436867,"byte_end":12436894,"line_start":62,"line_end":62,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436895,"byte_end":12436922,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/ } // Read locks are dropped at this point.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436923,"byte_end":12436969,"line_start":64,"line_end":64,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436970,"byte_end":12436973,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // However, only one write lock may be held.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12436974,"byte_end":12437022,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437023,"byte_end":12437028,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/     let mut w = lock.write().unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437029,"byte_end":12437071,"line_start":68,"line_end":68,"column_start":1,"column_end":43}},{"value":"/     *w += 1;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437072,"byte_end":12437088,"line_start":69,"line_end":69,"column_start":1,"column_end":17}},{"value":"/     assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437089,"byte_end":12437115,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/ } // Write lock is dropped here.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437116,"byte_end":12437152,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437153,"byte_end":12437160,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437161,"byte_end":12437164,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`RwLock`]: https://doc.rust-lang.org/std/sync/struct.RwLock.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437165,"byte_end":12437234,"line_start":74,"line_end":74,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437886,"byte_end":12437889,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<ShardedLock<T>>::new","value":"pub fn new(T) -> ShardedLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new sharded reader-writer lock.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437674,"byte_end":12437719,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437724,"byte_end":12437727,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437732,"byte_end":12437746,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437751,"byte_end":12437754,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437759,"byte_end":12437766,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437771,"byte_end":12437814,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437819,"byte_end":12437822,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437827,"byte_end":12437862,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437867,"byte_end":12437874,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438819,"byte_end":12438829,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ShardedLock<T>>::into_inner","value":"pub fn into_inner(Self) -> LockResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this lock, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this lock, returning the underlying data.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438285,"byte_end":12438339,"line_start":112,"line_end":112,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438344,"byte_end":12438347,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438352,"byte_end":12438447,"line_start":114,"line_end":114,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438452,"byte_end":12438473,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438478,"byte_end":12438481,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438486,"byte_end":12438500,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438505,"byte_end":12438508,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438513,"byte_end":12438520,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438525,"byte_end":12438568,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438573,"byte_end":12438576,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(String::new());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438581,"byte_end":12438628,"line_start":122,"line_end":122,"column_start":5,"column_end":52}},{"value":"/ {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438633,"byte_end":12438638,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/     let mut s = lock.write().unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438643,"byte_end":12438685,"line_start":124,"line_end":124,"column_start":5,"column_end":47}},{"value":"/     *s = \"modified\".to_owned();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438690,"byte_end":12438725,"line_start":125,"line_end":125,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438730,"byte_end":12438735,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(lock.into_inner().unwrap(), \"modified\");","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438740,"byte_end":12438795,"line_start":127,"line_end":127,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12438800,"byte_end":12438807,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439806,"byte_end":12439817,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"is_poisoned","qualname":"<ShardedLock<T>>::is_poisoned","value":"pub fn is_poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the lock is poisoned.","sig":null,"attributes":[{"value":"/ Returns `true` if the lock is poisoned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439108,"byte_end":12439151,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439156,"byte_end":12439159,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ If another thread can still access the lock, it may become poisoned at any time. A `false`","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439164,"byte_end":12439258,"line_start":144,"line_end":144,"column_start":5,"column_end":99}},{"value":"/ result should not be trusted without additional synchronization.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439263,"byte_end":12439331,"line_start":145,"line_end":145,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439336,"byte_end":12439339,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439344,"byte_end":12439358,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439363,"byte_end":12439366,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439371,"byte_end":12439378,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439383,"byte_end":12439426,"line_start":150,"line_end":150,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439431,"byte_end":12439454,"line_start":151,"line_end":151,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439459,"byte_end":12439479,"line_start":152,"line_end":152,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439484,"byte_end":12439487,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(0));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439492,"byte_end":12439537,"line_start":154,"line_end":154,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439542,"byte_end":12439572,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439577,"byte_end":12439580,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ let _ = thread::spawn(move || {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439585,"byte_end":12439620,"line_start":157,"line_end":157,"column_start":5,"column_end":40}},{"value":"/     let _lock = c_lock.write().unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439625,"byte_end":12439669,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/     panic!(); // the lock gets poisoned","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439674,"byte_end":12439717,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/ }).join();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439722,"byte_end":12439736,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(lock.is_poisoned(), true);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439741,"byte_end":12439782,"line_start":161,"line_end":161,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439787,"byte_end":12439794,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440431,"byte_end":12440438,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ShardedLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> LockResult<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439888,"byte_end":12439943,"line_start":167,"line_end":167,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439948,"byte_end":12439951,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking needs to take place.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439956,"byte_end":12440040,"line_start":169,"line_end":169,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440045,"byte_end":12440048,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440053,"byte_end":12440148,"line_start":171,"line_end":171,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440153,"byte_end":12440174,"line_start":172,"line_end":172,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440179,"byte_end":12440182,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440187,"byte_end":12440201,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440206,"byte_end":12440209,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440214,"byte_end":12440221,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440226,"byte_end":12440269,"line_start":177,"line_end":177,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440274,"byte_end":12440277,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let mut lock = ShardedLock::new(0);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440282,"byte_end":12440321,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/ *lock.get_mut().unwrap() = 10;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440326,"byte_end":12440360,"line_start":180,"line_end":180,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(*lock.read().unwrap(), 10);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440365,"byte_end":12440407,"line_start":181,"line_end":181,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440412,"byte_end":12440419,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441533,"byte_end":12441541,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"try_read","qualname":"<ShardedLock<T>>::try_read","value":"pub fn try_read(&Self) -> TryLockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with shared read access.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440702,"byte_end":12440760,"line_start":194,"line_end":194,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440765,"byte_end":12440768,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440773,"byte_end":12440866,"line_start":196,"line_end":196,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the shared access when it is dropped. This method does not","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440871,"byte_end":12440964,"line_start":197,"line_end":197,"column_start":5,"column_end":98}},{"value":"/ provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12440969,"byte_end":12441058,"line_start":198,"line_end":198,"column_start":5,"column_end":94}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441063,"byte_end":12441103,"line_start":199,"line_end":199,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441108,"byte_end":12441111,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441116,"byte_end":12441211,"line_start":201,"line_end":201,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441216,"byte_end":12441237,"line_start":202,"line_end":202,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441242,"byte_end":12441245,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441250,"byte_end":12441264,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441269,"byte_end":12441272,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441277,"byte_end":12441284,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441289,"byte_end":12441332,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441337,"byte_end":12441340,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441345,"byte_end":12441380,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441385,"byte_end":12441388,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ match lock.try_read() {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441393,"byte_end":12441420,"line_start":211,"line_end":211,"column_start":5,"column_end":32}},{"value":"/     Ok(n) => assert_eq!(*n, 1),","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441425,"byte_end":12441460,"line_start":212,"line_end":212,"column_start":5,"column_end":40}},{"value":"/     Err(_) => unreachable!(),","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441465,"byte_end":12441498,"line_start":213,"line_end":213,"column_start":5,"column_end":38}},{"value":"/ };","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441503,"byte_end":12441509,"line_start":214,"line_end":214,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12441514,"byte_end":12441521,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443552,"byte_end":12443556,"line_start":267,"line_end":267,"column_start":12,"column_end":16},"name":"read","qualname":"<ShardedLock<T>>::read","value":"pub fn read(&Self) -> LockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with shared read access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with shared read access, blocking the current thread until it can be acquired.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12442557,"byte_end":12442645,"line_start":240,"line_end":240,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12442650,"byte_end":12442653,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12442658,"byte_end":12442749,"line_start":242,"line_end":242,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12442754,"byte_end":12442848,"line_start":243,"line_end":243,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12442853,"byte_end":12442948,"line_start":244,"line_end":244,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12442953,"byte_end":12442996,"line_start":245,"line_end":245,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443001,"byte_end":12443004,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the shared access when dropped.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443009,"byte_end":12443079,"line_start":247,"line_end":247,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443084,"byte_end":12443087,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443092,"byte_end":12443106,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443111,"byte_end":12443114,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443119,"byte_end":12443126,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443131,"byte_end":12443174,"line_start":252,"line_end":252,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443179,"byte_end":12443202,"line_start":253,"line_end":253,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443207,"byte_end":12443227,"line_start":254,"line_end":254,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443232,"byte_end":12443235,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(1));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443240,"byte_end":12443285,"line_start":256,"line_end":256,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443290,"byte_end":12443320,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443325,"byte_end":12443328,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443333,"byte_end":12443366,"line_start":259,"line_end":259,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443371,"byte_end":12443393,"line_start":260,"line_end":260,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443398,"byte_end":12443401,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443406,"byte_end":12443433,"line_start":262,"line_end":262,"column_start":5,"column_end":32}},{"value":"/     let r = c_lock.read();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443438,"byte_end":12443468,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/     assert!(r.is_ok());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443473,"byte_end":12443500,"line_start":264,"line_end":264,"column_start":5,"column_end":32}},{"value":"/ }).join().unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443505,"byte_end":12443528,"line_start":265,"line_end":265,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12443533,"byte_end":12443540,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12445192,"byte_end":12445201,"line_start":309,"line_end":309,"column_start":12,"column_end":21},"name":"try_write","qualname":"<ShardedLock<T>>::try_write","value":"pub fn try_write(&Self) -> TryLockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with exclusive write access.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444358,"byte_end":12444420,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444425,"byte_end":12444428,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444433,"byte_end":12444526,"line_start":289,"line_end":289,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the exclusive access when it is dropped. This method does","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444531,"byte_end":12444623,"line_start":290,"line_end":290,"column_start":5,"column_end":97}},{"value":"/ not provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444628,"byte_end":12444721,"line_start":291,"line_end":291,"column_start":5,"column_end":98}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444726,"byte_end":12444766,"line_start":292,"line_end":292,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444771,"byte_end":12444774,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444779,"byte_end":12444874,"line_start":294,"line_end":294,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444879,"byte_end":12444900,"line_start":295,"line_end":295,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444905,"byte_end":12444908,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444913,"byte_end":12444927,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444932,"byte_end":12444935,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444940,"byte_end":12444947,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12444952,"byte_end":12444995,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12445000,"byte_end":12445003,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12445008,"byte_end":12445043,"line_start":302,"line_end":302,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12445048,"byte_end":12445051,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12445056,"byte_end":12445089,"line_start":304,"line_end":304,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12445094,"byte_end":12445116,"line_start":305,"line_end":305,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12445121,"byte_end":12445124,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_err());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12445129,"byte_end":12445168,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12445173,"byte_end":12445180,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447699,"byte_end":12447704,"line_start":380,"line_end":380,"column_start":12,"column_end":17},"name":"write","qualname":"<ShardedLock<T>>::write","value":"pub fn write(&Self) -> LockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with exclusive write access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with exclusive write access, blocking the current thread until it can be acquired.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12446885,"byte_end":12446977,"line_start":359,"line_end":359,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12446982,"byte_end":12446985,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12446990,"byte_end":12447081,"line_start":361,"line_end":361,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447086,"byte_end":12447180,"line_start":362,"line_end":362,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447185,"byte_end":12447280,"line_start":363,"line_end":363,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447285,"byte_end":12447328,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447333,"byte_end":12447336,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the exclusive access when dropped.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447341,"byte_end":12447414,"line_start":366,"line_end":366,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447419,"byte_end":12447422,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447427,"byte_end":12447441,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447446,"byte_end":12447449,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447454,"byte_end":12447461,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447466,"byte_end":12447509,"line_start":371,"line_end":371,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447514,"byte_end":12447517,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447522,"byte_end":12447557,"line_start":373,"line_end":373,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447562,"byte_end":12447565,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut n = lock.write().unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447570,"byte_end":12447608,"line_start":375,"line_end":375,"column_start":5,"column_end":43}},{"value":"/ *n = 2;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447613,"byte_end":12447624,"line_start":376,"line_end":376,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447629,"byte_end":12447632,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_err());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447637,"byte_end":12447675,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12447680,"byte_end":12447687,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12449963,"byte_end":12449983,"line_start":451,"line_end":451,"column_start":12,"column_end":32},"name":"ShardedLockReadGuard","qualname":"::sync::sharded_lock::ShardedLockReadGuard","value":"ShardedLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498}],"decl_id":null,"docs":" A guard used to release the shared read access of a [`ShardedLock`] when dropped.","sig":null,"attributes":[{"value":"/ A guard used to release the shared read access of a [`ShardedLock`] when dropped.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12449817,"byte_end":12449902,"line_start":448,"line_end":448,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12449903,"byte_end":12449906,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ [`ShardedLock`]: struct.ShardedLock.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12449907,"byte_end":12449951,"line_start":450,"line_end":450,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12450932,"byte_end":12450953,"line_start":484,"line_end":484,"column_start":12,"column_end":33},"name":"ShardedLockWriteGuard","qualname":"::sync::sharded_lock::ShardedLockWriteGuard","value":"ShardedLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"decl_id":null,"docs":" A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.","sig":null,"attributes":[{"value":"/ A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12450782,"byte_end":12450871,"line_start":481,"line_end":481,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12450872,"byte_end":12450875,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ [`ShardedLock`]: struct.ShardedLock.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12450876,"byte_end":12450920,"line_start":483,"line_end":483,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455496,"byte_end":12455505,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"WaitGroup","qualname":"::sync::wait_group::WaitGroup","value":"WaitGroup {  }","parent":null,"children":[{"krate":0,"index":570}],"decl_id":null,"docs":" Enables threads to synchronize the beginning or end of some computation.","sig":null,"attributes":[{"value":"/ Enables threads to synchronize the beginning or end of some computation.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454254,"byte_end":12454330,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454331,"byte_end":12454334,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Wait groups vs barriers","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454335,"byte_end":12454364,"line_start":6,"line_end":6,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454365,"byte_end":12454368,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `WaitGroup` is very similar to [`Barrier`], but there are a few differences:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454369,"byte_end":12454449,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454450,"byte_end":12454453,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * `Barrier` needs to know the number of threads at construction, while `WaitGroup` is cloned to","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454454,"byte_end":12454553,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/   register more threads.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454554,"byte_end":12454582,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454583,"byte_end":12454586,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * A `Barrier` can be reused even after all threads have synchronized, while a `WaitGroup`","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454587,"byte_end":12454680,"line_start":13,"line_end":13,"column_start":1,"column_end":94}},{"value":"/   synchronizes threads only once.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454681,"byte_end":12454718,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454719,"byte_end":12454722,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * All threads wait for others to reach the `Barrier`. With `WaitGroup`, each thread can choose","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454723,"byte_end":12454821,"line_start":16,"line_end":16,"column_start":1,"column_end":99}},{"value":"/   to either wait for other threads or to continue without blocking.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454822,"byte_end":12454893,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454894,"byte_end":12454897,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454898,"byte_end":12454912,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454913,"byte_end":12454916,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454917,"byte_end":12454924,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454925,"byte_end":12454966,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454967,"byte_end":12454987,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454988,"byte_end":12454991,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // Create a new wait group.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12454992,"byte_end":12455023,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455024,"byte_end":12455054,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455055,"byte_end":12455058,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..4 {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455059,"byte_end":12455078,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/     // Create another reference to the wait group.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455079,"byte_end":12455133,"line_start":29,"line_end":29,"column_start":1,"column_end":55}},{"value":"/     let wg = wg.clone();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455134,"byte_end":12455162,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455163,"byte_end":12455166,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     thread::spawn(move || {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455167,"byte_end":12455198,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/         // Do some work.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455199,"byte_end":12455227,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455228,"byte_end":12455231,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/         // Drop the reference to the wait group.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455232,"byte_end":12455284,"line_start":35,"line_end":35,"column_start":1,"column_end":53}},{"value":"/         drop(wg);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455285,"byte_end":12455306,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455307,"byte_end":12455318,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455319,"byte_end":12455324,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455325,"byte_end":12455328,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // Block until all threads have finished their work.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455329,"byte_end":12455385,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/ wg.wait();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455386,"byte_end":12455400,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455401,"byte_end":12455408,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455409,"byte_end":12455412,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`Barrier`]: https://doc.rust-lang.org/std/sync/struct.Barrier.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455413,"byte_end":12455484,"line_start":44,"line_end":44,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455879,"byte_end":12455882,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<WaitGroup>::new","value":"pub fn new() -> WaitGroup","parent":null,"children":[],"decl_id":null,"docs":" Creates a new wait group and returns the single reference to it.","sig":null,"attributes":[{"value":"/ Creates a new wait group and returns the single reference to it.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455651,"byte_end":12455719,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455724,"byte_end":12455727,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455732,"byte_end":12455746,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455751,"byte_end":12455754,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455759,"byte_end":12455766,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455771,"byte_end":12455812,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455817,"byte_end":12455820,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455825,"byte_end":12455855,"line_start":63,"line_end":63,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455860,"byte_end":12455867,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456621,"byte_end":12456625,"line_start":95,"line_end":95,"column_start":12,"column_end":16},"name":"wait","qualname":"<WaitGroup>::wait","value":"pub fn wait(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops this reference and waits until all other references are dropped.","sig":null,"attributes":[{"value":"/ Drops this reference and waits until all other references are dropped.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456069,"byte_end":12456143,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456148,"byte_end":12456151,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456156,"byte_end":12456170,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456175,"byte_end":12456178,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456183,"byte_end":12456190,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456195,"byte_end":12456236,"line_start":79,"line_end":79,"column_start":5,"column_end":46}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456241,"byte_end":12456261,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456266,"byte_end":12456269,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456274,"byte_end":12456304,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456309,"byte_end":12456312,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ thread::spawn({","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456317,"byte_end":12456336,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/     let wg = wg.clone();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456341,"byte_end":12456369,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/     move || {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456374,"byte_end":12456391,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/         // Block until both threads have reached `wait()`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456396,"byte_end":12456458,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/         wg.wait();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456463,"byte_end":12456485,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456490,"byte_end":12456499,"line_start":89,"line_end":89,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456504,"byte_end":12456511,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456516,"byte_end":12456519,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ // Block until both threads have reached `wait()`.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456524,"byte_end":12456578,"line_start":92,"line_end":92,"column_start":5,"column_end":59}},{"value":"/ wg.wait();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456583,"byte_end":12456597,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456602,"byte_end":12456609,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"thread","qualname":"::thread","value":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":643},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":658},{"krate":0,"index":710},{"krate":0,"index":715},{"krate":0,"index":661},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":685},{"krate":0,"index":691}],"decl_id":null,"docs":" Threads that can borrow variables from the stack.","sig":null,"attributes":[{"value":"/ Threads that can borrow variables from the stack.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457624,"byte_end":12457677,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457678,"byte_end":12457681,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Create a scope when spawned threads need to access variables on the stack:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457682,"byte_end":12457760,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457761,"byte_end":12457764,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457765,"byte_end":12457772,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457773,"byte_end":12457805,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457806,"byte_end":12457809,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457810,"byte_end":12457832,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457833,"byte_end":12457861,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457862,"byte_end":12457888,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457889,"byte_end":12457917,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457918,"byte_end":12457924,"line_start":12,"line_end":12,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457925,"byte_end":12457928,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457929,"byte_end":12457952,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/     for person in &people {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457953,"byte_end":12457984,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/         s.spawn(move |_| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12457985,"byte_end":12458015,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/             println!(\"Hello, {}!\", person);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458016,"byte_end":12458063,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/         });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458064,"byte_end":12458079,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458080,"byte_end":12458089,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458090,"byte_end":12458106,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458107,"byte_end":12458114,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458115,"byte_end":12458118,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Why scoped threads?","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458119,"byte_end":12458144,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458145,"byte_end":12458148,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Suppose we wanted to re-write the previous example using plain threads:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458149,"byte_end":12458224,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458225,"byte_end":12458228,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458229,"byte_end":12458242,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458243,"byte_end":12458263,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458264,"byte_end":12458267,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458268,"byte_end":12458290,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458291,"byte_end":12458319,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458320,"byte_end":12458346,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458347,"byte_end":12458375,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458376,"byte_end":12458382,"line_start":34,"line_end":34,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458383,"byte_end":12458386,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut threads = Vec::new();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458387,"byte_end":12458420,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458421,"byte_end":12458424,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ for person in &people {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458425,"byte_end":12458452,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/     threads.push(thread::spawn(move |_| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458453,"byte_end":12458498,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/         println!(\"Hello, {}!\", person);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458499,"byte_end":12458542,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/     }));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458543,"byte_end":12458555,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458556,"byte_end":12458561,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458562,"byte_end":12458565,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ for thread in threads {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458566,"byte_end":12458593,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/     thread.join().unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458594,"byte_end":12458625,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458626,"byte_end":12458631,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458632,"byte_end":12458639,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458640,"byte_end":12458643,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This doesn't work because the borrow checker complains about `people` not living long enough:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458644,"byte_end":12458741,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458742,"byte_end":12458745,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458746,"byte_end":12458757,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ error[E0597]: `people` does not live long enough","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458758,"byte_end":12458810,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/   --> src/main.rs:12:20","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458811,"byte_end":12458838,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458839,"byte_end":12458847,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"/ 12 |     for person in &people {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458848,"byte_end":12458884,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/    |                    ^^^^^^ borrowed value does not live long enough","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458885,"byte_end":12458960,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ ...","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458961,"byte_end":12458968,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ 21 | }","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458969,"byte_end":12458979,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/    | - borrowed value only lives until here","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12458980,"byte_end":12459027,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/    |","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459028,"byte_end":12459036,"line_start":60,"line_end":60,"column_start":1,"column_end":9}},{"value":"/    = note: borrowed value must be valid for the static lifetime...","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459037,"byte_end":12459107,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459108,"byte_end":12459115,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459116,"byte_end":12459119,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The problem here is that spawned threads are not allowed to borrow variables on stack because","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459120,"byte_end":12459217,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/ the compiler cannot prove they will be joined before `people` is destroyed.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459218,"byte_end":12459297,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459298,"byte_end":12459301,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Scoped threads are a mechanism to guarantee to the compiler that spawned threads will be joined","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459302,"byte_end":12459401,"line_start":67,"line_end":67,"column_start":1,"column_end":100}},{"value":"/ before the scope ends.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459402,"byte_end":12459428,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459429,"byte_end":12459432,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # How scoped threads work","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459433,"byte_end":12459462,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459463,"byte_end":12459466,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If a variable is borrowed by a thread, the thread must complete before the variable is","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459467,"byte_end":12459557,"line_start":72,"line_end":72,"column_start":1,"column_end":91}},{"value":"/ destroyed. Threads spawned using [`std::thread::spawn`] can only borrow variables with the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459558,"byte_end":12459652,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ `'static` lifetime because the borrow checker cannot be sure when the thread will complete.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459653,"byte_end":12459748,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459749,"byte_end":12459752,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A scope creates a clear boundary between variables outside the scope and threads inside the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459753,"byte_end":12459848,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/ scope. Whenever a scope spawns a thread, it promises to join the thread before the scope ends.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459849,"byte_end":12459947,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ This way we guarantee to the borrow checker that scoped threads only live within the scope and","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12459948,"byte_end":12460046,"line_start":78,"line_end":78,"column_start":1,"column_end":99}},{"value":"/ can safely access variables outside it.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460047,"byte_end":12460090,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460091,"byte_end":12460094,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Nesting scoped threads","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460095,"byte_end":12460123,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460124,"byte_end":12460127,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Sometimes scoped threads need to spawn more threads within the same scope. This is a little","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460128,"byte_end":12460223,"line_start":83,"line_end":83,"column_start":1,"column_end":96}},{"value":"/ tricky because argument `s` lives *inside* the invocation of `thread::scope()` and as such","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460224,"byte_end":12460318,"line_start":84,"line_end":84,"column_start":1,"column_end":95}},{"value":"/ cannot be borrowed by scoped threads:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460319,"byte_end":12460360,"line_start":85,"line_end":85,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460361,"byte_end":12460364,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460365,"byte_end":12460378,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460379,"byte_end":12460411,"line_start":88,"line_end":88,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460412,"byte_end":12460415,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460416,"byte_end":12460439,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460440,"byte_end":12460461,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/         // Not going to compile because we're trying to borrow `s`,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460462,"byte_end":12460533,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/         // which lives *inside* the scope! :(","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460534,"byte_end":12460583,"line_start":93,"line_end":93,"column_start":1,"column_end":50}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460584,"byte_end":12460635,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460636,"byte_end":12460647,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460648,"byte_end":12460655,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460656,"byte_end":12460663,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460664,"byte_end":12460667,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Fortunately, there is a solution. Every scoped thread is passed a reference to its scope as an","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460668,"byte_end":12460766,"line_start":99,"line_end":99,"column_start":1,"column_end":99}},{"value":"/ argument, which can be used for spawning nested threads:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460767,"byte_end":12460827,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460828,"byte_end":12460831,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460832,"byte_end":12460839,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460840,"byte_end":12460872,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460873,"byte_end":12460876,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460877,"byte_end":12460900,"line_start":105,"line_end":105,"column_start":1,"column_end":24}},{"value":"/     // Note the `|s|` here.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460901,"byte_end":12460932,"line_start":106,"line_end":106,"column_start":1,"column_end":32}},{"value":"/     s.spawn(|s| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460933,"byte_end":12460954,"line_start":107,"line_end":107,"column_start":1,"column_end":22}},{"value":"/         // Yay, this works because we're using a fresh argument `s`! :)","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12460955,"byte_end":12461030,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461031,"byte_end":12461082,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461083,"byte_end":12461094,"line_start":110,"line_end":110,"column_start":1,"column_end":12}},{"value":"/ });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461095,"byte_end":12461102,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461103,"byte_end":12461110,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461111,"byte_end":12461114,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`std::thread::spawn`]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461115,"byte_end":12461193,"line_start":114,"line_end":114,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12462089,"byte_end":12462094,"line_start":149,"line_end":149,"column_start":8,"column_end":13},"name":"scope","qualname":"::thread::scope","value":"pub fn scope<'env, F, R>(F) -> thread::Result<R> where F: FnOnce(&Scope) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scope for spawning threads.","sig":null,"attributes":[{"value":"/ Creates a new scope for spawning threads.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461438,"byte_end":12461483,"line_start":129,"line_end":129,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461484,"byte_end":12461487,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ All child threads that haven't been manually joined will be automatically joined just before","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461488,"byte_end":12461584,"line_start":131,"line_end":131,"column_start":1,"column_end":97}},{"value":"/ this function invocation ends. If all joined threads have successfully completed, `Ok` is","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461585,"byte_end":12461678,"line_start":132,"line_end":132,"column_start":1,"column_end":94}},{"value":"/ returned with the return value of `f`. If any of the joined threads has panicked, an `Err` is","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461679,"byte_end":12461776,"line_start":133,"line_end":133,"column_start":1,"column_end":98}},{"value":"/ returned containing errors from panicked threads.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461777,"byte_end":12461830,"line_start":134,"line_end":134,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461831,"byte_end":12461834,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461835,"byte_end":12461849,"line_start":136,"line_end":136,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461850,"byte_end":12461853,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461854,"byte_end":12461861,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461862,"byte_end":12461894,"line_start":139,"line_end":139,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461895,"byte_end":12461898,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let var = vec![1, 2, 3];","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461899,"byte_end":12461927,"line_start":141,"line_end":141,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461928,"byte_end":12461931,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461932,"byte_end":12461955,"line_start":143,"line_end":143,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461956,"byte_end":12461977,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/         println!(\"A child thread borrowing `var`: {:?}\", var);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12461978,"byte_end":12462044,"line_start":145,"line_end":145,"column_start":1,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12462045,"byte_end":12462056,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12462057,"byte_end":12462073,"line_start":147,"line_end":147,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12462074,"byte_end":12462081,"line_start":148,"line_end":148,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12463475,"byte_end":12463480,"line_start":197,"line_end":197,"column_start":12,"column_end":17},"name":"Scope","qualname":"::thread::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"decl_id":null,"docs":" A scope for spawning threads.\n","sig":null,"attributes":[{"value":"/ A scope for spawning threads.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12463430,"byte_end":12463463,"line_start":196,"line_end":196,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464906,"byte_end":12464911,"line_start":240,"line_end":240,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Scope>::spawn","value":"pub fn spawn<'scope, F, T>(&'scope Self, F) -> ScopedJoinHandle where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12463853,"byte_end":12463880,"line_start":211,"line_end":211,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12463885,"byte_end":12463888,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`spawn`] function in Rust's standard library. The difference","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12463893,"byte_end":12463988,"line_start":213,"line_end":213,"column_start":5,"column_end":100}},{"value":"/ is that this thread is scoped, meaning it's guaranteed to terminate before the scope exits,","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12463993,"byte_end":12464088,"line_start":214,"line_end":214,"column_start":5,"column_end":100}},{"value":"/ allowing it to reference variables outside the scope.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464093,"byte_end":12464150,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464155,"byte_end":12464158,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464163,"byte_end":12464258,"line_start":217,"line_end":217,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464263,"byte_end":12464291,"line_start":218,"line_end":218,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464296,"byte_end":12464299,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to manually join the thread before the scope exits.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464304,"byte_end":12464391,"line_start":220,"line_end":220,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464396,"byte_end":12464399,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`spawn`]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464404,"byte_end":12464469,"line_start":222,"line_end":222,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464474,"byte_end":12464477,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464482,"byte_end":12464496,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464501,"byte_end":12464504,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464509,"byte_end":12464516,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464521,"byte_end":12464553,"line_start":227,"line_end":227,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464558,"byte_end":12464561,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464566,"byte_end":12464589,"line_start":229,"line_end":229,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464594,"byte_end":12464628,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/         println!(\"A child thread is running\");","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464633,"byte_end":12464683,"line_start":231,"line_end":231,"column_start":5,"column_end":55}},{"value":"/         42","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464688,"byte_end":12464702,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464707,"byte_end":12464718,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464723,"byte_end":12464726,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464731,"byte_end":12464782,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464787,"byte_end":12464828,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464833,"byte_end":12464861,"line_start":237,"line_end":237,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464866,"byte_end":12464882,"line_start":238,"line_end":238,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12464887,"byte_end":12464894,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465513,"byte_end":12465520,"line_start":263,"line_end":263,"column_start":12,"column_end":19},"name":"builder","qualname":"<Scope>::builder","value":"pub fn builder<'scope>(&'scope Self) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a builder that can configure a thread before spawning.","sig":null,"attributes":[{"value":"/ Creates a builder that can configure a thread before spawning.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465131,"byte_end":12465197,"line_start":249,"line_end":249,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465202,"byte_end":12465205,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465210,"byte_end":12465224,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465229,"byte_end":12465232,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465237,"byte_end":12465244,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465249,"byte_end":12465281,"line_start":254,"line_end":254,"column_start":5,"column_end":37}},{"value":"/ use std::thread::current;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465286,"byte_end":12465315,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465320,"byte_end":12465323,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465328,"byte_end":12465351,"line_start":257,"line_end":257,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465356,"byte_end":12465375,"line_start":258,"line_end":258,"column_start":5,"column_end":24}},{"value":"/         .spawn(|_| println!(\"A child thread is running\"))","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465380,"byte_end":12465441,"line_start":259,"line_end":259,"column_start":5,"column_end":66}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465446,"byte_end":12465468,"line_start":260,"line_end":260,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465473,"byte_end":12465489,"line_start":261,"line_end":261,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465494,"byte_end":12465501,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467180,"byte_end":12467199,"line_start":311,"line_end":311,"column_start":12,"column_end":31},"name":"ScopedThreadBuilder","qualname":"::thread::ScopedThreadBuilder","value":"ScopedThreadBuilder {  }","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714}],"decl_id":null,"docs":" Configures the properties of a new thread.","sig":null,"attributes":[{"value":"/ Configures the properties of a new thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465839,"byte_end":12465885,"line_start":277,"line_end":277,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465886,"byte_end":12465889,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ The two configurable properties are:","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465890,"byte_end":12465930,"line_start":279,"line_end":279,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465931,"byte_end":12465934,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ - [`name`]: Specifies an [associated name for the thread][naming-threads].","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465935,"byte_end":12466013,"line_start":281,"line_end":281,"column_start":1,"column_end":79}},{"value":"/ - [`stack_size`]: Specifies the [desired stack size for the thread][stack-size].","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466014,"byte_end":12466098,"line_start":282,"line_end":282,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466099,"byte_end":12466102,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The [`spawn`] method will take ownership of the builder and return an [`io::Result`] of the","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466103,"byte_end":12466198,"line_start":284,"line_end":284,"column_start":1,"column_end":96}},{"value":"/ thread handle with the given configuration.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466199,"byte_end":12466246,"line_start":285,"line_end":285,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466247,"byte_end":12466250,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ The [`Scope::spawn`] method uses a builder with default configuration and unwraps its return","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466251,"byte_end":12466347,"line_start":287,"line_end":287,"column_start":1,"column_end":97}},{"value":"/ value. You may want to use this builder when you want to recover from a failure to launch a","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466348,"byte_end":12466443,"line_start":288,"line_end":288,"column_start":1,"column_end":96}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466444,"byte_end":12466455,"line_start":289,"line_end":289,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466456,"byte_end":12466459,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466460,"byte_end":12466474,"line_start":291,"line_end":291,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466475,"byte_end":12466478,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466479,"byte_end":12466486,"line_start":293,"line_end":293,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466487,"byte_end":12466519,"line_start":294,"line_end":294,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466520,"byte_end":12466523,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466524,"byte_end":12466547,"line_start":296,"line_end":296,"column_start":1,"column_end":24}},{"value":"/     s.builder()","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466548,"byte_end":12466567,"line_start":297,"line_end":297,"column_start":1,"column_end":20}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466568,"byte_end":12466626,"line_start":298,"line_end":298,"column_start":1,"column_end":59}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466627,"byte_end":12466649,"line_start":299,"line_end":299,"column_start":1,"column_end":23}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466650,"byte_end":12466666,"line_start":300,"line_end":300,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466667,"byte_end":12466674,"line_start":301,"line_end":301,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466675,"byte_end":12466678,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ [`name`]: struct.ScopedThreadBuilder.html#method.name","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466679,"byte_end":12466736,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/ [`stack_size`]: struct.ScopedThreadBuilder.html#method.stack_size","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466737,"byte_end":12466806,"line_start":304,"line_end":304,"column_start":1,"column_end":70}},{"value":"/ [`spawn`]: struct.ScopedThreadBuilder.html#method.spawn","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466807,"byte_end":12466866,"line_start":305,"line_end":305,"column_start":1,"column_end":60}},{"value":"/ [`Scope::spawn`]: struct.Scope.html#method.spawn","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466867,"byte_end":12466919,"line_start":306,"line_end":306,"column_start":1,"column_end":53}},{"value":"/ [`io::Result`]: https://doc.rust-lang.org/std/io/type.Result.html","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466920,"byte_end":12466989,"line_start":307,"line_end":307,"column_start":1,"column_end":70}},{"value":"/ [naming-threads]: https://doc.rust-lang.org/std/thread/index.html#naming-threads","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12466990,"byte_end":12467074,"line_start":308,"line_end":308,"column_start":1,"column_end":85}},{"value":"/ [stack-size]: https://doc.rust-lang.org/std/thread/index.html#stack-size","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467075,"byte_end":12467151,"line_start":309,"line_end":309,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467987,"byte_end":12467991,"line_start":337,"line_end":337,"column_start":12,"column_end":16},"name":"name","qualname":"<ScopedThreadBuilder>::name","value":"pub fn name(Self, String) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the name for the new thread.","sig":null,"attributes":[{"value":"/ Sets the name for the new thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467348,"byte_end":12467385,"line_start":317,"line_end":317,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467390,"byte_end":12467393,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ The name must not contain null bytes. For more information about named threads, see","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467398,"byte_end":12467485,"line_start":319,"line_end":319,"column_start":5,"column_end":92}},{"value":"/ [here][naming-threads].","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467490,"byte_end":12467517,"line_start":320,"line_end":320,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467522,"byte_end":12467525,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467530,"byte_end":12467544,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467549,"byte_end":12467552,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467557,"byte_end":12467564,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467569,"byte_end":12467601,"line_start":325,"line_end":325,"column_start":5,"column_end":37}},{"value":"/ use std::thread::current;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467606,"byte_end":12467635,"line_start":326,"line_end":326,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467640,"byte_end":12467643,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467648,"byte_end":12467671,"line_start":328,"line_end":328,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467676,"byte_end":12467695,"line_start":329,"line_end":329,"column_start":5,"column_end":24}},{"value":"/         .name(\"my thread\".to_string())","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467700,"byte_end":12467742,"line_start":330,"line_end":330,"column_start":5,"column_end":47}},{"value":"/         .spawn(|_| assert_eq!(current().name(), Some(\"my thread\")))","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467747,"byte_end":12467818,"line_start":331,"line_end":331,"column_start":5,"column_end":76}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467823,"byte_end":12467845,"line_start":332,"line_end":332,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467850,"byte_end":12467866,"line_start":333,"line_end":333,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467871,"byte_end":12467878,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467883,"byte_end":12467886,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [naming-threads]: https://doc.rust-lang.org/std/thread/index.html#naming-threads","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467891,"byte_end":12467975,"line_start":336,"line_end":336,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468548,"byte_end":12468558,"line_start":358,"line_end":358,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<ScopedThreadBuilder>::stack_size","value":"pub fn stack_size(Self, usize) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the stack for the new thread.","sig":null,"attributes":[{"value":"/ Sets the size of the stack for the new thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468127,"byte_end":12468177,"line_start":342,"line_end":342,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468182,"byte_end":12468185,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ The stack size is measured in bytes.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468190,"byte_end":12468230,"line_start":344,"line_end":344,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468235,"byte_end":12468238,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468243,"byte_end":12468257,"line_start":346,"line_end":346,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468262,"byte_end":12468265,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468270,"byte_end":12468277,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468282,"byte_end":12468314,"line_start":349,"line_end":349,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468319,"byte_end":12468322,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468327,"byte_end":12468350,"line_start":351,"line_end":351,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468355,"byte_end":12468374,"line_start":352,"line_end":352,"column_start":5,"column_end":24}},{"value":"/         .stack_size(32 * 1024)","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468379,"byte_end":12468413,"line_start":353,"line_end":353,"column_start":5,"column_end":39}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468418,"byte_end":12468476,"line_start":354,"line_end":354,"column_start":5,"column_end":63}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468481,"byte_end":12468503,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468508,"byte_end":12468524,"line_start":356,"line_end":356,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468529,"byte_end":12468536,"line_start":357,"line_end":357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469493,"byte_end":12469498,"line_start":388,"line_end":388,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ScopedThreadBuilder>::spawn","value":"pub fn spawn<F, T>(Self, F) -> io::Result<ScopedJoinHandle> where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread with this configuration.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread with this configuration.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468699,"byte_end":12468750,"line_start":363,"line_end":363,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468755,"byte_end":12468758,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468763,"byte_end":12468858,"line_start":365,"line_end":365,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468863,"byte_end":12468891,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468896,"byte_end":12468899,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to manually join the thread before the scope exits.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468904,"byte_end":12468991,"line_start":368,"line_end":368,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12468996,"byte_end":12468999,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469004,"byte_end":12469018,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469023,"byte_end":12469026,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469031,"byte_end":12469038,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469043,"byte_end":12469075,"line_start":373,"line_end":373,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469080,"byte_end":12469083,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469088,"byte_end":12469111,"line_start":375,"line_end":375,"column_start":5,"column_end":28}},{"value":"/     let handle = s.builder()","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469116,"byte_end":12469148,"line_start":376,"line_end":376,"column_start":5,"column_end":37}},{"value":"/         .spawn(|_| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469153,"byte_end":12469177,"line_start":377,"line_end":377,"column_start":5,"column_end":29}},{"value":"/             println!(\"A child thread is running\");","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469182,"byte_end":12469236,"line_start":378,"line_end":378,"column_start":5,"column_end":59}},{"value":"/             42","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469241,"byte_end":12469259,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/         })","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469264,"byte_end":12469278,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469283,"byte_end":12469305,"line_start":381,"line_end":381,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469310,"byte_end":12469313,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469318,"byte_end":12469369,"line_start":383,"line_end":383,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469374,"byte_end":12469415,"line_start":384,"line_end":384,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469420,"byte_end":12469448,"line_start":385,"line_end":385,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469453,"byte_end":12469469,"line_start":386,"line_end":386,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12469474,"byte_end":12469481,"line_start":387,"line_end":387,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12471926,"byte_end":12471942,"line_start":455,"line_end":455,"column_start":12,"column_end":28},"name":"ScopedJoinHandle","qualname":"::thread::ScopedJoinHandle","value":"ScopedJoinHandle {  }","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"decl_id":null,"docs":" A handle that can be used to join its scoped thread.\n","sig":null,"attributes":[{"value":"/ A handle that can be used to join its scoped thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12471858,"byte_end":12471914,"line_start":454,"line_end":454,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473262,"byte_end":12473266,"line_start":497,"line_end":497,"column_start":12,"column_end":16},"name":"join","qualname":"<ScopedJoinHandle>::join","value":"pub fn join(Self) -> thread::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits for the thread to finish and returns its result.","sig":null,"attributes":[{"value":"/ Waits for the thread to finish and returns its result.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472350,"byte_end":12472408,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472413,"byte_end":12472416,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ If the child thread panics, an error is returned.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472421,"byte_end":12472474,"line_start":472,"line_end":472,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472479,"byte_end":12472482,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472487,"byte_end":12472499,"line_start":474,"line_end":474,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472504,"byte_end":12472507,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This function may panic on some platforms if a thread attempts to join itself or otherwise","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472512,"byte_end":12472606,"line_start":476,"line_end":476,"column_start":5,"column_end":99}},{"value":"/ may create a deadlock with joining threads.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472611,"byte_end":12472658,"line_start":477,"line_end":477,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472663,"byte_end":12472666,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472671,"byte_end":12472685,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472690,"byte_end":12472693,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472698,"byte_end":12472705,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472710,"byte_end":12472742,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472747,"byte_end":12472750,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472755,"byte_end":12472778,"line_start":484,"line_end":484,"column_start":5,"column_end":28}},{"value":"/     let handle1 = s.spawn(|_| println!(\"I'm a happy thread :)\"));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472783,"byte_end":12472852,"line_start":485,"line_end":485,"column_start":5,"column_end":74}},{"value":"/     let handle2 = s.spawn(|_| panic!(\"I'm a sad thread :(\"));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472857,"byte_end":12472922,"line_start":486,"line_end":486,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472927,"byte_end":12472930,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/     // Join the first thread and verify that it succeeded.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472935,"byte_end":12472997,"line_start":488,"line_end":488,"column_start":5,"column_end":67}},{"value":"/     let res = handle1.join();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473002,"byte_end":12473035,"line_start":489,"line_end":489,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_ok());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473040,"byte_end":12473069,"line_start":490,"line_end":490,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473074,"byte_end":12473077,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     // Join the second thread and verify that it panicked.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473082,"byte_end":12473144,"line_start":492,"line_end":492,"column_start":5,"column_end":67}},{"value":"/     let res = handle2.join();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473149,"byte_end":12473182,"line_start":493,"line_end":493,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_err());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473187,"byte_end":12473217,"line_start":494,"line_end":494,"column_start":5,"column_end":35}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473222,"byte_end":12473238,"line_start":495,"line_end":495,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473243,"byte_end":12473250,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12474075,"byte_end":12474081,"line_start":520,"line_end":520,"column_start":12,"column_end":18},"name":"thread","qualname":"<ScopedJoinHandle>::thread","value":"pub fn thread(&Self) -> &thread::Thread","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying thread.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying thread.","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473714,"byte_end":12473760,"line_start":508,"line_end":508,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473765,"byte_end":12473768,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473773,"byte_end":12473787,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473792,"byte_end":12473795,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473800,"byte_end":12473807,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473812,"byte_end":12473844,"line_start":513,"line_end":513,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473849,"byte_end":12473852,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473857,"byte_end":12473880,"line_start":515,"line_end":515,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| println!(\"A child thread is running\"));","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473885,"byte_end":12473957,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/     println!(\"The child thread ID: {:?}\", handle.thread().id());","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12473962,"byte_end":12474030,"line_start":517,"line_end":517,"column_start":5,"column_end":73}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12474035,"byte_end":12474051,"line_start":518,"line_end":518,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12474056,"byte_end":12474063,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\seq_lock.rs","byte_start":12421708,"byte_end":12421715,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\seq_lock.rs","byte_start":12423298,"byte_end":12423315,"line_start":72,"line_end":72,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\seq_lock.rs","byte_start":12423500,"byte_end":12423517,"line_start":80,"line_end":80,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4064,"byte_end":4074,"line_start":36,"line_end":36,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4111,"byte_end":4121,"line_start":37,"line_end":37,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4176,"byte_end":4186,"line_start":40,"line_end":40,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4243,"byte_end":4253,"line_start":42,"line_end":42,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4269,"byte_end":4279,"line_start":44,"line_end":44,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7628,"byte_end":7638,"line_start":166,"line_end":166,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8495,"byte_end":8505,"line_start":202,"line_end":202,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8946,"byte_end":8956,"line_start":221,"line_end":221,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9285,"byte_end":9295,"line_start":238,"line_end":238,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21232,"byte_end":21242,"line_start":565,"line_end":565,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":23083,"byte_end":23093,"line_start":630,"line_end":630,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":23224,"byte_end":23234,"line_start":636,"line_end":636,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":25985,"byte_end":25995,"line_start":704,"line_end":704,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":35411,"byte_end":35420,"line_start":79,"line_end":79,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38196,"byte_end":38207,"line_start":72,"line_end":72,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38244,"byte_end":38255,"line_start":73,"line_end":73,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38271,"byte_end":38282,"line_start":75,"line_end":75,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38942,"byte_end":38953,"line_start":105,"line_end":105,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":39059,"byte_end":39070,"line_start":113,"line_end":113,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":39184,"byte_end":39195,"line_start":119,"line_end":119,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":39390,"byte_end":39401,"line_start":127,"line_end":127,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41992,"byte_end":41999,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47634,"byte_end":47641,"line_start":279,"line_end":279,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47881,"byte_end":47888,"line_start":288,"line_end":288,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426165,"byte_end":12426171,"line_start":59,"line_end":59,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426181,"byte_end":12426187,"line_start":61,"line_end":61,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428769,"byte_end":12428775,"line_start":155,"line_end":155,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429043,"byte_end":12429051,"line_start":168,"line_end":168,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429076,"byte_end":12429084,"line_start":169,"line_end":169,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429094,"byte_end":12429102,"line_start":171,"line_end":171,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12430036,"byte_end":12430044,"line_start":204,"line_end":204,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12430163,"byte_end":12430171,"line_start":210,"line_end":210,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12430449,"byte_end":12430454,"line_start":228,"line_end":228,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437460,"byte_end":12437471,"line_start":83,"line_end":83,"column_start":40,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437524,"byte_end":12437535,"line_start":84,"line_end":84,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437574,"byte_end":12437585,"line_start":86,"line_end":86,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437626,"byte_end":12437637,"line_start":87,"line_end":87,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437653,"byte_end":12437664,"line_start":89,"line_end":89,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439087,"byte_end":12439098,"line_start":141,"line_end":141,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12448798,"byte_end":12448809,"line_start":416,"line_end":416,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12449273,"byte_end":12449290,"line_start":425,"line_end":425,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12449607,"byte_end":12449618,"line_start":436,"line_end":436,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12449735,"byte_end":12449746,"line_start":442,"line_end":442,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12450169,"byte_end":12450189,"line_start":457,"line_end":457,"column_start":44,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12450231,"byte_end":12450251,"line_start":459,"line_end":459,"column_start":31,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12450402,"byte_end":12450422,"line_start":467,"line_end":467,"column_start":40,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12450660,"byte_end":12450680,"line_start":475,"line_end":475,"column_start":53,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12451103,"byte_end":12451124,"line_start":489,"line_end":489,"column_start":44,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12451165,"byte_end":12451186,"line_start":491,"line_end":491,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12451574,"byte_end":12451595,"line_start":504,"line_end":504,"column_start":40,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12451834,"byte_end":12451855,"line_start":512,"line_end":512,"column_start":53,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12451987,"byte_end":12452008,"line_start":518,"line_end":518,"column_start":31,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12452153,"byte_end":12452174,"line_start":526,"line_end":526,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12453472,"byte_end":12453484,"line_start":572,"line_end":572,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455635,"byte_end":12455644,"line_start":55,"line_end":55,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456944,"byte_end":12456953,"line_start":110,"line_end":110,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12457162,"byte_end":12457171,"line_start":121,"line_end":121,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12457387,"byte_end":12457396,"line_start":132,"line_end":132,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12463808,"byte_end":12463813,"line_start":208,"line_end":208,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12463835,"byte_end":12463840,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465727,"byte_end":12465732,"line_start":271,"line_end":271,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467308,"byte_end":12467327,"line_start":316,"line_end":316,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12471763,"byte_end":12471779,"line_start":451,"line_end":451,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12471826,"byte_end":12471842,"line_start":452,"line_end":452,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472316,"byte_end":12472332,"line_start":469,"line_end":469,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12474171,"byte_end":12474187,"line_start":525,"line_end":525,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":1568,"byte_end":1574,"line_start":48,"line_end":48,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":1786,"byte_end":1790,"line_start":61,"line_end":61,"column_start":17,"column_end":21},"ref_id":{"krate":0,"index":327}},{"kind":"Mod","span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\lib.rs","byte_start":1808,"byte_end":1814,"line_start":62,"line_end":62,"column_start":17,"column_end":23},"ref_id":{"krate":0,"index":603}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\seq_lock.rs","byte_start":12421708,"byte_end":12421715,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\seq_lock.rs","byte_start":12423298,"byte_end":12423315,"line_start":72,"line_end":72,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\seq_lock.rs","byte_start":12423500,"byte_end":12423517,"line_start":80,"line_end":80,"column_start":15,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4064,"byte_end":4074,"line_start":36,"line_end":36,"column_start":31,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4111,"byte_end":4121,"line_start":37,"line_end":37,"column_start":31,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4176,"byte_end":4186,"line_start":40,"line_end":40,"column_start":24,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":8325}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4243,"byte_end":4253,"line_start":42,"line_end":42,"column_start":27,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":8326}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":4269,"byte_end":4279,"line_start":44,"line_end":44,"column_start":9,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":7628,"byte_end":7638,"line_start":166,"line_end":166,"column_start":17,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8495,"byte_end":8505,"line_start":202,"line_end":202,"column_start":18,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":8946,"byte_end":8956,"line_start":221,"line_end":221,"column_start":15,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":9285,"byte_end":9295,"line_start":238,"line_end":238,"column_start":20,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":21232,"byte_end":21242,"line_start":565,"line_end":565,"column_start":6,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":23083,"byte_end":23093,"line_start":630,"line_end":630,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":23224,"byte_end":23234,"line_start":636,"line_end":636,"column_start":43,"column_end":53},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\atomic_cell.rs","byte_start":25985,"byte_end":25995,"line_start":704,"line_end":704,"column_start":6,"column_end":16},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\atomic\\consume.rs","byte_start":35411,"byte_end":35420,"line_start":79,"line_end":79,"column_start":49,"column_end":58},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":8892},"to":{"krate":0,"index":112}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38196,"byte_end":38207,"line_start":72,"line_end":72,"column_start":31,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38244,"byte_end":38255,"line_start":73,"line_end":73,"column_start":31,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38271,"byte_end":38282,"line_start":75,"line_end":75,"column_start":9,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":38942,"byte_end":38953,"line_start":105,"line_end":105,"column_start":19,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":3215}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":39059,"byte_end":39070,"line_start":113,"line_end":113,"column_start":22,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":3228}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":39184,"byte_end":39195,"line_start":119,"line_end":119,"column_start":36,"column_end":47},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\cache_padded.rs","byte_start":39390,"byte_end":39401,"line_start":127,"line_end":127,"column_start":21,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":41992,"byte_end":41999,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47634,"byte_end":47641,"line_start":279,"line_end":279,"column_start":21,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":173},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\backoff.rs","byte_start":47881,"byte_end":47888,"line_start":288,"line_end":288,"column_start":18,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":173},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426165,"byte_end":12426171,"line_start":59,"line_end":59,"column_start":22,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":354},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12426181,"byte_end":12426187,"line_start":61,"line_end":61,"column_start":6,"column_end":12},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12428769,"byte_end":12428775,"line_start":155,"line_end":155,"column_start":21,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":354},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429043,"byte_end":12429051,"line_start":168,"line_end":168,"column_start":22,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429076,"byte_end":12429084,"line_start":169,"line_end":169,"column_start":22,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12429094,"byte_end":12429102,"line_start":171,"line_end":171,"column_start":6,"column_end":14},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12430036,"byte_end":12430044,"line_start":204,"line_end":204,"column_start":21,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12430163,"byte_end":12430171,"line_start":210,"line_end":210,"column_start":16,"column_end":24},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\parker.rs","byte_start":12430449,"byte_end":12430454,"line_start":228,"line_end":228,"column_start":6,"column_end":11},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437460,"byte_end":12437471,"line_start":83,"line_end":83,"column_start":40,"column_end":51},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437524,"byte_end":12437535,"line_start":84,"line_end":84,"column_start":47,"column_end":58},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437574,"byte_end":12437585,"line_start":86,"line_end":86,"column_start":32,"column_end":43},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":8325}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437626,"byte_end":12437637,"line_start":87,"line_end":87,"column_start":35,"column_end":46},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":8326}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12437653,"byte_end":12437664,"line_start":89,"line_end":89,"column_start":9,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12439087,"byte_end":12439098,"line_start":141,"line_end":141,"column_start":17,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12448798,"byte_end":12448809,"line_start":416,"line_end":416,"column_start":45,"column_end":56},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12449273,"byte_end":12449290,"line_start":425,"line_end":425,"column_start":37,"column_end":54},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12449607,"byte_end":12449618,"line_start":436,"line_end":436,"column_start":30,"column_end":41},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12449735,"byte_end":12449746,"line_start":442,"line_end":442,"column_start":21,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12450169,"byte_end":12450189,"line_start":457,"line_end":457,"column_start":44,"column_end":64},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12450231,"byte_end":12450251,"line_start":459,"line_end":459,"column_start":31,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":3215}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12450402,"byte_end":12450422,"line_start":467,"line_end":467,"column_start":40,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12450660,"byte_end":12450680,"line_start":475,"line_end":475,"column_start":53,"column_end":73},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12451103,"byte_end":12451124,"line_start":489,"line_end":489,"column_start":44,"column_end":65},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12451165,"byte_end":12451186,"line_start":491,"line_end":491,"column_start":30,"column_end":51},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12451574,"byte_end":12451595,"line_start":504,"line_end":504,"column_start":40,"column_end":61},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12451834,"byte_end":12451855,"line_start":512,"line_end":512,"column_start":53,"column_end":74},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12451987,"byte_end":12452008,"line_start":518,"line_end":518,"column_start":31,"column_end":52},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":3215}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12452153,"byte_end":12452174,"line_start":526,"line_end":526,"column_start":34,"column_end":55},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":3228}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\sharded_lock.rs","byte_start":12453472,"byte_end":12453484,"line_start":572,"line_end":572,"column_start":15,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":550},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12455635,"byte_end":12455644,"line_start":55,"line_end":55,"column_start":6,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12456944,"byte_end":12456953,"line_start":110,"line_end":110,"column_start":15,"column_end":24},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12457162,"byte_end":12457171,"line_start":121,"line_end":121,"column_start":16,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\sync\\wait_group.rs","byte_start":12457387,"byte_end":12457396,"line_start":132,"line_end":132,"column_start":21,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12463808,"byte_end":12463813,"line_start":208,"line_end":208,"column_start":28,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12463835,"byte_end":12463840,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12465727,"byte_end":12465732,"line_start":271,"line_end":271,"column_start":27,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12467308,"byte_end":12467327,"line_start":316,"line_end":316,"column_start":20,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12471763,"byte_end":12471779,"line_start":451,"line_end":451,"column_start":33,"column_end":49},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":678},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12471826,"byte_end":12471842,"line_start":452,"line_end":452,"column_start":33,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":678},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12472316,"byte_end":12472332,"line_start":469,"line_end":469,"column_start":17,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\matth\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.7.0\\src\\thread.rs","byte_start":12474171,"byte_end":12474187,"line_start":525,"line_end":525,"column_start":32,"column_end":48},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":678},"to":{"krate":2,"index":9350}}]}